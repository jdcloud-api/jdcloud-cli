# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

_jdc_complete()
{
    local cur prev BASE_LEVEL

    COMPREPLY=()
    cur=${COMP_WORDS[COMP_CWORD]}
    prev=${COMP_WORDS[COMP_CWORD-1]}

    # SETUP THE BASE LEVEL
    if [ $COMP_CWORD -eq 1 ]; then
        COMPREPLY=( $(compgen \
                      -W "--debug -v --version -h --help configure vqd streamcomputer ssl domainservice oss redis billing portal clouddnsservice cdn streambus apigateway sts nativecontainer pod datastar kms elite iam iothub sms resourcetag jcq ias jdfusion detection iotlink renewal yunding containerregistry partner lb industrydata rds kubernetes ipanti jmr deploy sop function jdccs logs cps httpdns disk nc vm iotcore zfs ams jdro vod yundingdatapush ossopenapi baseanti mongodb live vpc monitor xdata " \
                      -- $cur) )


    # SETUP THE SECOND LEVEL
    elif [ $COMP_CWORD -eq 2 ]; then
        case "$prev" in

            # HANDLE EVERYTHING AFTER THE SECOND LEVEL NAMESPACE
            "vqd")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton set-callback query-callback list-vqd-templates create-vqd-template get-vqd-template update-vqd-template delete-vqd-template submit-vqd-task batch-submit-vqd-tasks list-vqd-tasks get-vqd-task delete-vqd-task query-vqd-task-result batch-delete-vqd-tasks " -- $cur) )
                ;;

            "streamcomputer")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton query-namespaces query-namespace-detail create-namespace update-namespace delete-namespace describe-storage add-or-update-storage delete-storage get-storage-list describe-job add-or-update-job delete-job get-job-list start-job stop-job " -- $cur) )
                ;;

            "ssl")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-certs describe-cert delete-certs upload-cert download-cert update-cert-name update-cert " -- $cur) )
                ;;

            "domainservice")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-resource-record create-resource-record modify-resource-record delete-resource-record modify-resource-record-status describe-view-tree batch-set-resource-records describe-domains create-domain modify-domain delete-domain describe-domain-query-count describe-domain-query-traffic describe-action-log describe-user-view create-user-view delete-user-view describe-user-view-ip create-user-view-ip delete-user-view-ip describe-monitor create-monitor modify-monitor describe-monitor-target create-monitor-target modify-monitor-status delete-monitor describe-monitor-alarm " -- $cur) )
                ;;

            "oss")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton list-buckets put-bucket delete-bucket head-bucket " -- $cur) )
                ;;

            "redis")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-spec-config describe-available-resource describe-available-resource2 describe-cache-instances create-cache-instance describe-cache-instance modify-cache-instance-attribute delete-cache-instance modify-cache-instance-class reset-cache-instance-password describe-instance-config modify-instance-config describe-analysis-time modify-analysis-time describe-cache-analysis-list create-cache-analysis describe-cache-analysis-result describe-client-list describe-client-ip-detail describe-backups create-backup describe-backup-policy modify-backup-policy restore-instance describe-download-url describe-cluster-info describe-ip-white-list modify-ip-white-list describe-slow-log describe-task-progress-list get-disable-commands set-disable-commands describe-accounts create-account modify-account delete-account modify-accounts start-clear-data stop-clear-data describe-clear-data describe-big-key-list create-big-key-analysis describe-big-key-detail describe-big-key-analysis-time modify-big-key-analysis-time stop-cache-analysis describe-analysis-threshold modify-analysis-threshold create-big-key-analysis2 describe-big-key-list2 describe-big-key-detail2 describe-big-key-analysis-time2 modify-big-key-analysis-time2 describe-analysis-threshold2 modify-analysis-threshold2 describe-hot-key-result2 describe-hot-key-detail2 describe-instance-class describe-available-region describe-user-quota " -- $cur) )
                ;;

            "billing")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton query-bill-summary query-bill-detail calculate-total-price " -- $cur) )
                ;;

            "portal")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-product describe-products-by-id " -- $cur) )
                ;;

            "clouddnsservice")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton search-rr get-view-tree add-rr update-rr operate-rr batch-set-dns-resolve get-domains add-domain del-domain update-domain get-domain-query-count get-domain-query-traffic get-action-log add-user-view del-user-view get-user-view add-user-view-ip del-user-view-ip get-user-view-ip get-monitor add-monitor get-targets add-monitor-target operate-monitor update-monitor get-monitor-alarm-info " -- $cur) )
                ;;

            "cdn")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton query-forbidden-info-list create-forbidden-info delete-forbidden-info query-un-forbidden-status create-live-domain-prefecth-task query-live-prefetch-task query-area-isp-list query-area-isp-list-v2 query-mix-statistics-data query-mix-statistics-with-area-data query-mix-traffic-group-sum query-statistics-data query-statistics-data-group-by-area query-statistics-data-group-sum query-live-statistics-data query-live-statistics-area-data-group-by query-live-traffic-group-sum query-statistics-top-ip query-statistics-top-url query-dir-bandwidth query-dir-stats-data query-customized-dir-band-width query-stream-info query-domain-temp-inst-list query-domain-temp-pro-keys modify-domain-temp-inst query-domain-temp-inst del-domain-temp-instance get-domain-list get-domain-list-by-filter get-domain-detail create-domain delete-domain start-domain stop-domain query-oss-buckets batch-create query-domain-config config-service-notice query-service-notice query-online-billing-type set-online-billing-type query-domain-config-status check-whether-ip-belong-to-jcloud query-service-ip get-all-upper-node-ip-list query-domain-group-list query-domain-group-detail query-domains-not-in-group update-domain-group create-domain-group batch-delete-domain-group query-waf-switch set-waf-switch query-waf-white-rule-switch set-waf-white-rule-switch querywaf-white-rules create-waf-white-rule update-waf-white-rule enable-waf-white-rules disable-waf-white-rules delete-waf-white-rules query-waf-black-rule-switch set-waf-black-rule-switch querywaf-black-rules create-waf-black-rule update-waf-black-rule enable-waf-black-rules disable-waf-black-rules delete-waf-black-rules query-ccprotect-switch set-ccprotect-switch query-ccprotect-rules create-ccprotect-rule update-ccprotect-rule enable-ccprotect-rule disable-ccprotect-rule delete-ccprotect-rule query-web-protect-switch set-web-protect-switch query-web-protect-settings update-web-protect-settings query-waf-regions query-ip-black-setting-status bat-create-prefetch-task update-prefetch-task query-prefetch-task stop-prefetch-task operate-purge-task query-purge-task query-net-protection-rules set-net-protection-rules query-net-protection-rules-switch set-net-protection-rules-switch query-geo-areas query-attack-type-count query-ddos-graph search-attack-log preview-certificate query-default-http-header-key query-ip-black-list set-ip-black-list operate-ip-black-list query-custom-error-page set-custom-error-page create-cache-rule update-cache-rule delete-cache-rule set-cache-rules query-http-header set-http-header delete-http-header set-video-draft set-range set-ignore-query-string set-filter-args query-filter-args query-user-agent set-user-agent-config query-accesskey-config set-accesskey-config set-refer query-monitor set-monitor stop-monitor set-source operate-share-cache set-http-type query-follow-redirect set-follow-redirect query-follow-source-protocol set-follow-source-protocol set-domain-config query-domain-all-config-classify execute-domain-copy query-extra-cache-time set-extra-cache-time delete-extra-cache-time batch-set-extra-cache-time set-gzip config-back-source-rule query-back-source-rule config-url-rule query-url-rule config-http2 query-http2 config-back-source-path query-back-source-path set-accelerate-region config-back-source-rules query-back-source-rules config-back-source-oss query-back-source-oss speed-limit query-band query-band-with-area query-cdn-user-quota query-refresh-task-by-ids set-refresh-limit query-refresh-limit query-refresh-task-by-id create-refresh-task-for-callback create-refresh-task-for-callback-v2 query-refresh-task create-refresh-task get-ssl-cert-list get-ssl-cert-detail upload-cert query-avg-bandwidth-for-pcdn query-device-status-for-pcdn query-jdbox-statistics-data query-jdbox-statistics-data-with-group query-jbox-avg-bandwidth query-domains-log query-domain-log waf-query-pv-for-area-and-ip waf-query-pv waf-query-attack-details set-auth-config set-source-auth-config set-live-domain-back-source set-live-domain-ip-black-list set-live-domain-refer operate-live-domain-ip-black-list set-live-domain-back-source-host set-live-domain-access-key set-protocol-convert delete-forbidden-stream query-push-domain-orapp-or-stream query-live-domain-ip-black-white-list batch-create-live-domain query-live-domain-detail query-live-domain-apps " -- $cur) )
                ;;

            "streambus")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-topic-list describe-topic add-topic update-topic delete-topic get-consumer-group-list create-consumer-group delete-consumer-group " -- $cur) )
                ;;

            "apigateway")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton query-user-domains create-user-domain delete-user-domain create-backend-config describe-backend-configs describe-backend-config update-backend-config delete-backend-config query-uc-access-keys query-keys create-key reset-key update-key query-key-info describe-api-groups create-api-group check-group-name-exist describe-api-group modify-api-group-attribute delete-api-group describe-is-deploy-api-groups query-rate-limit-policies create-rate-limit-policy check-policy-name query-rate-limit-policy update-rate-limit-policy delete-rate-limit-policy query-bind-group-policy bind-group-policy query-policy-group-list query-subscription-keys create-subscription-key query-subscription-key update-subscription-key delete-subscription-key query-access-keys create-access-key check-key-exist query-access-key update-access-key delete-access-key query-bind-group-key bind-group-key query-key-group-list check-pin query-apis create-apis check-api-name-exist query-api update-api delete-api update-api-by-name delete-api-by-name describe-deployments deploy describe-deployment offline batch-offline describe-revisions create-revision get-revision-ids check-revision-exist query-revision modify-revision delete-revision query-access-auths create-access-auth check-auth-exist query-access-auth update-access-auth delete-access-auth query-bind-group-auth bind-group-auth query-auth-group-list authorized-api-group-list " -- $cur) )
                ;;

            "sts")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton assume-role " -- $cur) )
                ;;

            "nativecontainer")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-secrets create-secret describe-secret delete-secret describe-quota describe-containers create-containers describe-container delete-container start-container stop-container modify-container-attribute associate-elastic-ip disassociate-elastic-ip get-logs rebuild-container resize-container exec-create exec-get-exit-code resize-tty describe-instance-types " -- $cur) )
                ;;

            "pod")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-secrets create-secret describe-secret delete-secret create-config-file describe-config-file delete-config-file update-config-file describe-quota describe-container attach exec-create exec-get-exit-code resize-tty describe-pods create-pods check-pod-name describe-pod delete-pod start-pod stop-pod modify-pod-attribute associate-elastic-ip disassociate-elastic-ip get-container-logs rebuild-pod resize-pod describe-instance-types " -- $cur) )
                ;;

            "datastar")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-large-screen-data " -- $cur) )
                ;;

            "kms")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-key-list create-key describe-key update-key-description enable-key disable-key schedule-key-deletion cancel-key-deletion key-rotation encrypt decrypt get-public-key sign validate generate-data-key describe-key-detail enable-key-version disable-key-version schedule-key-version-deletion cancel-key-version-deletion describe-secret-list create-secret describe-secret-version-list update-secret enable-secret disable-secret delete-secret create-secret-version describe-secret-version-info update-secret-version enable-secret-version disable-secret-version delete-secret-version " -- $cur) )
                ;;

            "elite")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton jdx-query-delivery-info get-store-service jdx-query-product list-sale-service get-sale-service-by-deliver-number confirm-sale-service-delivery jdx-report-order jdx-create-order jdx-query-price " -- $cur) )
                ;;

            "iam")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton create-sub-user describe-sub-user update-sub-user delete-sub-user describe-sub-users describe-sub-user-groups describe-attached-sub-user-policies detach-sub-user-policy attach-sub-user-policy create-permission describe-permission-detail update-permission describe-permissions describe-sub-user-permissions add-permissions-to-sub-user remove-permission-of-sub-user enable-sub-user-access-key disable-sub-user-access-key delete-sub-user-access-key create-policy describe-policy update-policy delete-policy update-policy-description describe-policies create-group describe-group update-group delete-group describe-group-sub-users describe-groups describe-attached-group-policies detach-group-policy attach-group-policy remove-sub-user-from-group add-sub-user-to-group create-role describe-role delete-role update-assume-role-policy describe-roles attach-role-policy detach-role-policy describe-role-policies describe-user-access-keys create-user-access-key enabled-user-access-key disabled-user-access-key delete-user-access-key " -- $cur) )
                ;;

            "iothub")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton list-product-abilities import-thing-model export-thing-model describe-thing-shadow update-thing-shadow invoke-thing-service query-device-page update-device add-device query-device-detail remove-device remove-device-by-id list-products create-product describe-product update-product delete-product " -- $cur) )
                ;;

            "sms")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton batch-send status-report reply " -- $cur) )
                ;;

            "resourcetag")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-resources describe-tags describe-keys describe-values tag-resources un-tag-resources query-resource " -- $cur) )
                ;;

            "jcq")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-access-point describe-topics create-topic describe-topic delete-topic describe-dead-letter-numbers describe-dead-letter-numbers-with-topic list-dead-letters delete-dead-letters resend-dead-letters describe-permission add-permission remove-permission describe-consumer-group-ids describe-subscriptions create-subscription describe-subscription modify-subscription-attribute delete-subscription clean-messages reset-consume-offset describe-messages describe-message describe-message-trace describe-messages-by-business-id " -- $cur) )
                ;;

            "ias")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton apps app-detail state create-app get-app update-app delete-app get-apps " -- $cur) )
                ;;

            "jdfusion")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-vpc-by-id delete-vpc-by-id get-vpcs create-vpc get-vm-instances-by-id delete-vm-instance-by-id get-vm-instances create-vm-instance stop-vm-instance-by-id start-vm-instance-by-id reboot-vm-instance-by-id get-vpc-vserver-groups create-vpc-vserver-group get-vserver-groups-by-id delete-vserver-group get-cloud-infos regist-cloud-info get-cloud-info-by-id unregist-cloud-info valid-cloud-info get-rds-databases-by-inst-id create-rds-database get-rds-database-by-inst-id-and-db-name delete-rds-database get-buckets create-bucket get-bucket-by-name delete-bucket get-bucket-files get-vpc-slb-by-id delete-vpc-slb-by-id get-vpc-slbs create-vpc-slb start-slb stop-slb delete-slbs-listener start-slb-listener stop-slb-listener get-rds-specification get-vm-instance-types get-vpc-network-interface-by-id delete-vpc-network-interface-by-id get-vpc-network-interfaces create-vpc-network-interface attach-vpc-network-interface-by-id detach-vpc-network-interface-by-id get-disks create-disk get-disk-by-id remove-disk-by-id attach-disk-to-vm-instance-by-disk-id detach-disk-to-vm-instance-by-disk-id get-rds-accounts-by-inst-id create-rds-accounts get-rds-accounts-by-inst-id-and-account-name delete-rds-account grant-rds-account revoke-rds-account grant-rds-accounts-by-task get-vpc-eips create-vpc-eip get-vpc-eip-by-id delete-vpc-eip-by-id associate-vpc-eip-by-id disassociate-vpc-eip-by-id get-task-info-history-by-id get-task-info-by-id get-transfer-tasks create-transfer-task get-transfer-task-by-id edit-transfer-task delete-transfer-task start-transfer-task stop-transfer-task get-transfer-task-progress get-transfer-task-failed-files get-vm-keypairs-by-name delete-vm-keypair-by-name get-vm-keypairs create-vm-keypair get-vpc-security-group-by-id delete-vpc-security-group-by-id get-vpc-security-groups create-vpc-security-group create-security-groups-rule delete-security-groups-rule get-lb-http-listener create-vpc-lbhttp-listener get-vm-images get-vpc-subnet-by-id delete-vpc-subnet-by-id get-vpc-subnets create-vpc-subnet get-rds-instances create-rds-instance get-rds-by-inst-id delete-rds-by-inst-id get-deployments create-deployment reverse-deployment get-deployments-by-id edit-deployment delete-deployment clone-deployment dryrun-deployment apply-deployment get-deployment-result get-deployment-versions get-deployments-version rollback-deployments-version get-deployments-results-by-id-record get-regions get-regions-available-zones get-channels create-channel delete-channel start-channel stop-channel get-datasources create-datasource delete-datasource " -- $cur) )
                ;;

            "detection")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-site-monitor create-site-monitor update-site-monitor delete-site-monitor enable-site-monitor validate-site-monitor-address get-site-monitor-data-points get-site-monitor-source test-site-monitor describe-agent-status describe-metric-data-am create-probe-task delete-probe-task describe-probe-task update-probe-task describe-probe-history discribe-probes probe-task-enable describe-probe-tasks " -- $cur) )
                ;;

            "iotlink")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton card-info real-name-query-iot gprs-status-by-imsi on-off-status-by-imsi life-status-by-imsi gprs-realtime-info-by-imsi gprs-status on-off-status life-status gprs-realtime-info open-iot-card close-iot-card open-iot-flow close-iot-flow search operate " -- $cur) )
                ;;

            "renewal")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton set-renewal query-instance renew-instance " -- $cur) )
                ;;

            "yunding")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton put-product-metric-data put-product-metric-data describe-subnets create-subnet describe-subnet delete-subnet assign-secondary-ips unassign-secondary-ips describe-network-interface delete-network-interface describe-network-interfaces create-network-interface describe-tasks describe-rds-instances describe-rds-instance describe-instance-info describe-rds-white-list modify-rds-white-list describe-rds-accounts create-rds-account delete-rds-account grant-rds-privilege revoke-privilege describe-rds-databases create-rds-database delete-rds-database describe-yd-rds-instances " -- $cur) )
                ;;

            "containerregistry")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton create-repository describe-repositories delete-repository check-repository-name describe-images delete-image describe-registries create-registry describe-registry delete-registry check-registry-name describe-quotas get-authorization-token describe-authorization-tokens release-authorization-token " -- $cur) )
                ;;

            "partner")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton query-my-customer-list get-total-consumption get-each-consumption describe-customer-bill-by-product " -- $cur) )
                ;;

            "lb")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-url-maps create-url-map describe-url-map update-url-map delete-url-map add-rules update-rules delete-rules describe-target-groups create-target-group describe-target-group update-target-group delete-target-group register-targets de-register-targets update-targets describe-targets describe-backends create-backend describe-backend update-backend delete-backend describe-target-health describe-load-balancers create-load-balancer describe-load-balancer update-load-balancer delete-load-balancer associate-elastic-ip disassociate-elastic-ip associate-security-group disassociate-security-group describe-listeners create-listener describe-listener update-listener delete-listener add-listener-certificates update-listener-certificates delete-listener-certificates " -- $cur) )
                ;;

            "industrydata")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-large-screen-data " -- $cur) )
                ;;

            "rds")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-binlogs describe-binlog-download-url clear-binlogs describe-accounts create-account describe-account-privilege delete-account grant-privilege revoke-privilege reset-password create-super-account grant-account-privilege describe-accounts-for-ops create-account-for-ops modify-account-for-ops describe-instances create-instance describe-instance-attributes delete-instance describe-backup-policy modify-backup-policy enable-enhanced-backup describe-backup-space describe-backup-charge modify-instance-name failover-instance reboot-instance enable-internet-access disable-internet-access restore-instance create-instance-from-backup modify-instance-spec create-instance-by-time create-roinstance modify-connection-mode describe-latest-restore-time modify-parameter-group exchange-instance-dns modify-instance-az describe-ssl enable-ssl disable-ssl restore-instance-by-time modify-active-directory modify-instance-maintain-time describe-instance-maintain-time switch-for-modifying-instance-spec describe-upgrade-versions describe-upgrade-plan upgrade-engine-version describe-import-files get-upload-key set-import-file-shared delete-import-file describe-logs update-log-download-urlinternal describe-log-download-url describe-databases create-database delete-database restore-database-from-backup restore-database-from-file restore-database-from-oss modify-database-comment enable-intercept disable-intercept describe-intercept-result describe-intercept describe-read-write-proxies create-read-write-proxy describe-read-write-proxy-attribute delete-read-write-proxy enable-read-write-proxy-internet-access disable-read-write-proxy-internet-access modify-read-write-proxy delete-parameter-group modify-parameter-group-attribute describe-parameter-groups create-parameter-group describe-parameter-group-parameters modify-parameter-group-parameters describe-parameter-modify-records copy-parameter-group describe-parameter-group-attached-instances describe-backups create-backup delete-backup describe-backup-download-url describe-tables describe-tde enable-tde describe-white-list modify-white-list describe-audit create-audit delete-audit describe-audit-options modify-audit describe-audit-files describe-audit-download-url enable-audit disable-audit describe-audit-result describe-azs alter-table-with-online-ddl describe-parameters modify-parameters describe-backup-synchronicities create-backup-synchronicity delete-backup-synchronicity create-instance-by-time-in-cross-region describe-error-logs describe-privilege describe-index-performance describe-query-performance describe-slow-log-attributes describe-slow-logs describe-active-query-performance describe-error-log " -- $cur) )
                ;;

            "kubernetes")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-node-groups create-node-group describe-node-group modify-node-group delete-node-group set-node-group-size set-auto-repair rollback-node-group-upgrade set-node-group-ca delete-node-instances describe-server-config describe-versions describe-node-version describe-upgradable-master-versions describe-upgradable-node-versions describe-quotas describe-clusters create-cluster describe-cluster modify-cluster delete-cluster set-user-metrics abort-upgrade describe-progress set-auto-upgrade upgrade-cluster set-addons " -- $cur) )
                ;;

            "ipanti")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-forward-rules create-forward-rule create-forward-rules describe-forward-rule modify-forward-rule delete-forward-rule switch-forward-rule-protect switch-forward-rule-origin describe-protection-rule-of-forward-rule modify-protection-rule-of-forward-rule describe-geo-areas describe-black-list-rule-of-forward-rule modify-black-list-rule-of-forward-rule enable-black-list-rule-of-forward-rule disable-black-list-rule-of-forward-rule describe-white-list-rule-of-forward-rule modify-white-list-rule-of-forward-rule enable-white-list-rule-of-forward-rule disable-white-list-rule-of-forward-rule describe-ddo-sgraph describe-fwd-graph describe-business-graph describe-ccgraph describe-status-graph describe-conn-stat-graph describe-ddo-sattack-logs describe-ddo-sip-attack-logs describe-ccattack-logs describe-ccattack-log-details describe-attack-statistics describe-attack-type-count describe-dispatch-rules create-dispatch-rule create-dispatch-rules modify-dispatch-rule delete-dispatch-rule switch-dispatch-rule-protect switch-dispatch-rule-origin describe-instance-acl modify-instance-acl recover-instance-acl describe-custom-pages create-custom-page modify-custom-page delete-custom-page modify-instance-custom-page modify-instance-custom-page-default enable-instance-custom-page disable-instance-custom-page describe-instances create-instance describe-instance modify-instance-name modify-epb describe-alarm-config modify-alarm-config describe-origin-white-ip-list describe-service-ip-list describe-instance-id-by-resource-id describe-name-list describe-protection-statistics describe-protection-outline check-name describe-vpc-ip-list describe-cps-ip-list describe-ccs-ip-list describe-ip-sets create-ip-set describe-ip-set delete-ip-set describe-ip-set-usage describe-web-rules create-web-rule create-web-rules describe-web-rule modify-web-rule delete-web-rule bind-cert switch-web-rule-protect switch-web-rule-origin enable-web-rule-cc disable-web-rule-cc enable-web-rule-ccobserver-mode disable-web-rule-ccobserver-mode describe-js-pages-of-web-rule create-js-page-of-web-rule create-js-pages-of-web-rule modify-js-page-of-web-rule delete-js-page-of-web-rule disable-web-rule-js-page enable-web-rule-js-page modify-web-rule-js-page-to-all modify-web-rule-js-page-to-custom describe-ccprotection-rules-of-web-rule create-ccprotection-rule-of-web-rule describe-ccprotection-rule-of-web-rule modify-ccprotection-rule-of-web-rule delete-ccprotection-rule-of-web-rule enable-ccprotection-rule-of-web-rule disable-ccprotection-rule-of-web-rule enable-web-rule-ccprotection-rule disable-web-rule-ccprotection-rule describe-ccprotection-config-of-web-rule modify-ccprotection-config-of-web-rule describe-ccprotection-default-config-of-web-rule modify-cert-info describe-web-rule-black-list-usage describe-black-list-rules-of-web-rule create-black-list-rule-of-web-rule describe-black-list-rule-of-web-rule modify-black-list-rule-of-web-rule delete-black-list-rule-of-web-rule enable-web-rule-black-list enable-black-list-rule-of-web-rule disable-web-rule-black-list disable-black-list-rule-of-web-rule describe-web-rule-white-list-usage describe-white-list-rules-of-web-rule create-white-list-rule-of-web-rule describe-white-list-rule-of-web-rule modify-white-list-rule-of-web-rule delete-white-list-rule-of-web-rule enable-web-rule-white-list enable-white-list-rule-of-web-rule disable-web-rule-white-list disable-white-list-rule-of-web-rule describe-web-rule-black-list-geo-areas describe-web-rule-white-list-geo-areas describe-web-rule-rsgeo-areas " -- $cur) )
                ;;

            "jmr")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton idata-cluster get-software-info get-jmr-version-list monitor-label-list describe-cluster describe-clusters release-cluster cluster-expansion cluster-reduction create-cluster " -- $cur) )
                ;;

            "deploy")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-apps describe-app describe-groups describe-group create-deploy describe-deploy " -- $cur) )
                ;;

            "sop")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-sensitive-op-setting get-security-token " -- $cur) )
                ;;

            "function")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton list-function create-function get-function update-function delete-function invoke async-invoke list-version create-version get-version delete-version list-alias create-alias get-alias update-alias delete-alias get-trigger " -- $cur) )
                ;;

            "jdccs")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-metrics describe-metric-data last-downsample describe-bandwidth-traffics describe-bandwidth-traffic describe-traffic-sampling describe-open-devices describe-open-devices-data describe-rangetime-cabinet-current describe-realtime-cabinet-current describe-alarms create-alarm describe-alarm update-alarm delete-alarm describe-alarm-history switch-alarm describe-tickets describe-ticket create-general-services-ticket describe-idcs describe-rooms describe-cabinets describe-cabinet describe-devices describe-device describe-ips describe-bandwidths describe-bandwidth describe-idc-overview " -- $cur) )
                ;;

            "logs")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-collect-info update-collect-info describe-collect-resources update-collect-resources create-collect-info create-parser describe-parser update-parser validate-parser histograms get-logs search describe-logtopics create-logtopic delete-logtopic describe-logtopic update-logtopic test-metric-task describe-metric-tasks create-metric-task describe-metric-task update-metric-task delete-metric-task create-parser describe-subscribe create-subscribe update-subscribe describe-logsets create-logset describe-logset update-logset delete-logset " -- $cur) )
                ;;

            "cps")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-ipv6address describe-ipv6addresses assign-ipv6addresses-bandwidth modify-ipv6address-bandwidth describe-certs create-cert describe-cert remove-cert modify-cert describe-alias-ips create-alias-ip delete-alias-ip describe-secondary-cidrs create-secondary-cidr delete-secondary-cidr describe-elastic-ips apply-elastic-ips describe-elastic-ip modify-elastic-ip-bandwidth describe-elastic-ip-name describe-server-groups create-server-group describe-server-group modify-server-group delete-server-group describe-keypairs create-keypairs import-keypairs describe-keypair delete-keypairs describe-load-balancers create-load-balancer modify-load-balancer describe-load-balancer start-load-balancer stop-load-balancer associate-elastic-ip-lb disassociate-elastic-ip-lb describe-slbs-name describe-servers add-servers modify-server remove-server describe-ipv6gateways describe-ipv6gateway modify-ipv6gateway describe-basic-subnet describe-subnets create-subnet assign-ipv6cidr describe-subnet modify-subnet delete-subnet describe-vpc modify-vpc delete-vpc describe-vpcs create-vpc assign-ipv6gateway describe-listeners create-listener modify-listener describe-listener delete-listener start-listener stop-listener describe-device-types describe-os describe-device-raids describe-instance describe-instances create-instances describe-instance-name assign-ipv6address modify-instance describe-instance-raid describe-instance-status restart-instance stop-instance start-instance restart-instances stop-instances start-instances reinstall-instance modify-bandwidth associate-elastic-ip disassociate-elastic-ip reset-password describe-available-private-ip describe-instance-monitor-info describe-event-logs describe-route-table describe-route-tables describe-regiones describe-cpslbregions " -- $cur) )
                ;;

            "httpdns")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-account-id create-account get-account-info operate-key get-domains add-domains del-domains " -- $cur) )
                ;;

            "disk")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-disks create-disks describe-disk modify-disk-attribute delete-disk restore-disk extend-disk describe-volumes-ignore-service-code describe-quota describe-snapshots create-snapshot delete-snapshots describe-snapshot modify-snapshot-attribute delete-snapshot describe-snapshots-capacity describe-snapshot-chain describe-soldout create-snapshot-policy update-snapshot-policy delete-snapshot-policy describe-snapshot-policies describe-snap-polices apply-snapshot-policies describe-snapshot-policy-disk-relations " -- $cur) )
                ;;

            "nc")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-secrets create-secret describe-secret delete-secret describe-quota describe-containers create-containers describe-container delete-container start-container stop-container modify-container-attribute associate-elastic-ip disassociate-elastic-ip get-logs " -- $cur) )
                ;;

            "vm")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-instance-templates create-instance-template describe-instance-template update-instance-template delete-instance-template verify-instance-template describe-instance-templates-customdata describe-keypairs create-keypair import-keypair delete-keypair attach-keypair detach-keypair describe-image delete-image describe-images describe-image-constraints describe-image-constraints-batch share-image un-share-image release-image un-release-image describe-image-members copy-images modify-image-attribute import-image export-image image-tasks describe-quotas describe-instances create-instances describe-brief-instances describe-instance delete-instance describe-instance-status describe-instance-private-ip-address stop-instance start-instance reboot-instance attach-network-interface detach-network-interface modify-instance-network-attribute associate-elastic-ip disassociate-elastic-ip create-image attach-disk detach-disk modify-instance-disk-attribute modify-instance-attribute modify-instance-vpc-attribute modify-instance-password describe-instance-vnc-url resize-instance rebuild-instance describe-instances-custom-data modify-instance-placement describe-instance-types " -- $cur) )
                ;;

            "iotcore")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton list-product-abilities import-thing-model export-thing-model invoke-thing-topic describe-thing-shadow update-thing-shadow invoke-thing-service add-device-links query-device-page update-device add-device query-device-detail remove-device list-products create-product describe-product update-product delete-product update-loo-device add-loo-device loongray-query-page query-admin-statistics remove-loongray-device register-device download-device-certificate delete-device describe-device describe-thing-type-list describe-thing-type describe-thing-model set-device-property invoke-function describe-event-list describe-function-list describe-property describe-property-snapshot create-device-topo describe-device-topo update-device-topo delete-device-topo describe-product-with-admin update-product-with-admin delete-product-with-admin list-products-with-admin create-admin-product describe-product-topics create-product-topic describe-product-topic get-device-group get-device-group-list find-device-group-link-page elevator-operating-status collector-read-message read-holding-registers collector-write-message " -- $cur) )
                ;;

            "zfs")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-mount-targets create-mount-target describe-mount-target delete-mount-target describe-file-systems create-file-system describe-file-system modify-file-system-attribute delete-file-system " -- $cur) )
                ;;

            "ams")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-streams-input describe-authenticate " -- $cur) )
                ;;

            "jdro")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-resource-type-list describe-resource-type-specification describe-stacks create-stack describe-stack delete-stack create-change-set execute-change-set describe-stack-events describe-stack-resources describe-stack-template validate-template " -- $cur) )
                ;;

            "vod")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton list-transcode-template-groups create-transcode-template-group get-transcode-template-group update-transcode-template-group delete-transcode-template-group delete-grouped-transcode-templates list-quality-detection-templates create-quality-detection-template get-quality-detection-template update-quality-detection-template delete-quality-detection-template create-video-upload-task refresh-video-upload-task create-image-upload-task create-live-to-vod-task list-videos get-video update-video delete-video batch-delete-videos batch-update-videos get-video-play-info delete-video-streams video-audit get-video-source-info submit-quality-detection-job batch-submit-quality-detection-jobs create-vedit-job submit-vedit-job list-vedit-projects create-vedit-project get-vedit-project update-vedit-project delete-vedit-project list-domains create-domain get-domain delete-domain enable-domain disable-domain set-default-domain set-header list-headers delete-header set-referer-rule get-referer-rule set-urlrule get-urlrule set-iprule get-iprule set-http-ssl get-http-ssl list-categories create-category list-all-categories get-category-with-children get-category update-category delete-category submit-snapshot-task list-snapshot-tasks list-transcode-templates create-transcode-template get-transcode-template update-transcode-template delete-transcode-template list-snapshot-templates create-snapshot-template get-snapshot-template update-snapshot-template delete-snapshot-template submit-transcode-job batch-submit-transcode-jobs get-transcode-summaries get-transcode-job-summaries get-transcode-task-summaries list-watermarks create-watermark get-watermark update-watermark delete-watermark submit-transcode-job batch-submit-transcode-jobs " -- $cur) )
                ;;

            "yundingdatapush")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-datapush-venders add-datapush-vender delete-datapush-vender describe-rds-instances create-order-sync " -- $cur) )
                ;;

            "ossopenapi")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-single-bucket-capacity get-back-source-configuration put-back-source-configuration delete-back-source-configuration get-historical-replicat-task abort-historical-replicat-task list-historical-replicat-tasks create-historical-replicat-task " -- $cur) )
                ;;

            "baseanti")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-ip-resources describe-elastic-ip-resources describe-cps-ip-resources describe-ccs-ip-resources describe-waf-ip-resources describe-ip-resource-info describe-ip-safety-info set-clean-threshold set-ip-clean-threshold describe-ip-clean-threshold-range describe-ip-resource-protect-info describe-ip-resource-flow describe-attack-logs describe-attack-statistics describe-attack-type-count describe-ip-monitor-flow " -- $cur) )
                ;;

            "mongodb")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-security-ips modify-security-ips describe-backups create-backup delete-backup backup-download-url describe-instances create-instance delete-instance reset-password modify-instance-spec modify-instance-name describe-backup-policy modify-backup-policy restore-instance describe-flavors describe-available-zones restart-instance create-sharding-instance modify-node-spec restart-node describe-backup-synchronicities create-backup-synchronicity delete-backup-synchronicities " -- $cur) )
                ;;

            "live")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-publish-stream-info-data describe-live-stream-history-user-num describe-live-publish-stream-num describe-live-stream-player-ranking-data describe-live-transcode-stream-list describe-live-transcode-stream-num describe-live-transcode-stream-player-user-num describe-live-transcode-stream-bandwidth describe-domain-online-stream describe-domains-log describe-url-ranking describe-live-stream-publish-info-by-page describe-live-stream-play-info-by-page describe-live-domain-certificate set-live-domain-certificate describe-live-restart-domain-certificate set-live-restart-domain-certificate add-live-stream-domain-transcode add-live-stream-app-transcode add-custom-live-stream-transcode-template describe-custom-live-stream-transcode-templates describe-system-live-stream-transcode-templates describe-live-stream-transcode-config delete-live-stream-domain-transcode delete-live-stream-app-transcode describe-custom-live-stream-transcode-template delete-custom-live-stream-transcode-template describe-transcode-binding add-custom-live-stream-quality-detection-template describe-custom-live-stream-quality-detection-templates add-live-stream-app-quality-detection add-live-stream-domain-quality-detection set-live-stream-quality-detection-notify-config delete-custom-live-stream-quality-detection-template delete-live-stream-app-quality-detection delete-live-stream-domain-quality-detection describe-live-stream-quality-detection-notify-config delete-live-stream-quality-detection-notify-config describe-quality-detection-binding describe-live-play-auth-key set-live-play-auth-key describe-live-restart-auth-key set-live-restart-auth-key add-custom-live-stream-watermark-template describe-custom-live-stream-watermark-templates add-live-stream-app-watermark add-live-stream-domain-watermark describe-custom-live-stream-watermark-config delete-custom-live-stream-watermark-template delete-live-stream-app-watermark delete-live-stream-domain-watermark describe-watermark-binding create-live-forward-task update-live-forward-task query-live-forward-task start-live-forward-task stop-live-forward-task delete-live-forward-task delete-live-recordings add-live-stream-domain-translate add-live-stream-app-translate add-live-stream-translate describe-system-live-stream-translate-templates describe-live-stream-translate-config describe-live-domain-translate-config delete-live-stream-domain-translate delete-live-stream-app-translate delete-live-stream-translate describe-translate-binding pause-live-stream-translate resume-live-stream-translate forbid-live-stream resume-live-stream interrupt-live-stream describe-live-stream-info set-live-stream-notify-config describe-live-stream-notify-config delete-live-stream-notify-config describe-live-stream-online-list describe-live-stream-publish-list describe-live-bill-data open-live-restart close-live-restart describe-live-restart-configs open-live-p2p close-live-p2p describe-live-p2p-configs add-custom-live-stream-snapshot-template describe-custom-live-stream-snapshot-config describe-custom-live-stream-snapshot-templates add-live-stream-app-snapshot add-live-stream-domain-snapshot set-live-stream-snapshot-notify-config delete-custom-live-stream-snapshot-template delete-live-stream-app-snapshot delete-live-stream-domain-snapshot describe-live-stream-snapshot-notify-config delete-live-stream-snapshot-notify-config describe-snapshot-binding describe-live-domains add-live-domain start-live-domain stop-live-domain describe-live-domain-detail delete-live-domain add-live-restart-domain describe-custom-live-stream-record-templates add-custom-live-stream-record-template add-live-stream-app-record add-live-stream-domain-record describe-custom-live-stream-record-config set-live-stream-record-notify-config delete-custom-live-stream-record-template delete-live-stream-app-record delete-live-stream-domain-record describe-live-stream-record-notify-config delete-live-stream-record-notify-config add-live-record-task describe-record-binding describe-live-app add-live-app stop-live-app describe-live-transcoding-duration-data describe-live-file-storage-data describe-live-stream-bandwidth-data describe-live-stream-publish-bandwidth-data describe-live-stream-traffic-data describe-live-stream-publish-traffic-data describe-live-snapshot-data describe-live-porn-data describe-live-statistic-group-by-stream describe-live-statistic-group-by-area describe-live-statistic-group-by-area-isp describe-live-publish-statistic-group-by-stream open-live-timeshift close-live-timeshift describe-live-timeshift-configs " -- $cur) )
                ;;

            "vpc")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-vpc-peerings create-vpc-peering describe-vpc-peering modify-vpc-peering delete-vpc-peering describe-route-tables create-route-table describe-route-table modify-route-table delete-route-table add-route-table-rules remove-route-table-rules modify-route-table-rules associate-route-table disassociate-route-table describe-subnets create-subnet describe-subnet modify-subnet delete-subnet describe-network-acls create-network-acl describe-network-acl modify-network-acl delete-network-acl associate-network-acl disassociate-network-acl add-network-acl-rules remove-network-acl-rules modify-network-acl-rules describe-vpcs create-vpc describe-vpc modify-vpc delete-vpc describe-network-interfaces create-network-interface describe-network-interface modify-network-interface delete-network-interface associate-elastic-ip disassociate-elastic-ip assign-secondary-ips unassign-secondary-ips describe-bandwidth-packages create-bandwidth-package describe-bandwidth-package modify-bandwidth-package delete-bandwidth-package add-bandwidth-package-ip remove-bandwidth-package-ip modify-bandwidth-package-ip-bandwidth describe-network-security-groups create-network-security-group describe-network-security-group modify-network-security-group delete-network-security-group add-network-security-group-rules remove-network-security-group-rules modify-network-security-group-rules describe-quota describe-elastic-ips create-elastic-ips describe-elastic-ip modify-elastic-ip delete-elastic-ip describe-edge-ip-providers " -- $cur) )
                ;;

            "monitor")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-alarms create-alarm describe-alarm update-alarm delete-alarms describe-alarm-contacts describe-metrics-for-alarm describe-products-for-alarm enable-alarms describe-alarm-history describe-metrics last-downsample describe-metric-data describe-tag-values describe-services put-product-metric-data put-product-metric-data put-custom-metric-data put-custom-metric-data describe-custom-metric-data " -- $cur) )
                ;;

            "xdata")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton list-instance-info list-table-info create-table get-table-info delete-table execute-ras-query execute-py-spark-query get-ras-query-state get-py-spark-execute-state get-ras-query-log get-ras-query-result get-py-spark-execute-result cancel-ras-query cancel-py-spark-job list-database-info get-database-info create-database delete-database " -- $cur) )
                ;;


            "configure")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help add delete show-current show-all use" -- $cur) )
                ;;
        esac

    # SETUP THE THIRD LEVEL
    elif [ $COMP_CWORD -gt 2 ]; then
        service=${COMP_WORDS[1]}
        prev=${COMP_WORDS[2]}

	    case "$service" in
	        "vqd")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "set-callback")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --callback-type --http-url --callback-events " -- $cur) )
                        ;;
                    "query-callback")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "list-vqd-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-vqd-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-name --threshold --detections " -- $cur) )
                        ;;
                    "get-vqd-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-id " -- $cur) )
                        ;;
                    "update-vqd-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-id --template-name --threshold --detections " -- $cur) )
                        ;;
                    "delete-vqd-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-id " -- $cur) )
                        ;;
                    "submit-vqd-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --media --template-id " -- $cur) )
                        ;;
                    "batch-submit-vqd-tasks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --media-list --template-id " -- $cur) )
                        ;;
                    "list-vqd-tasks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --filters " -- $cur) )
                        ;;
                    "get-vqd-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-id " -- $cur) )
                        ;;
                    "delete-vqd-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-id " -- $cur) )
                        ;;
                    "query-vqd-task-result")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-id " -- $cur) )
                        ;;
                    "batch-delete-vqd-tasks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-ids " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "streamcomputer")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "query-namespaces")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --keyword " -- $cur) )
                        ;;
                    "query-namespace-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-id " -- $cur) )
                        ;;
                    "create-namespace")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-str " -- $cur) )
                        ;;
                    "update-namespace")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-str " -- $cur) )
                        ;;
                    "delete-namespace")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-id " -- $cur) )
                        ;;
                    "describe-storage")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --storage-id " -- $cur) )
                        ;;
                    "add-or-update-storage")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --storage-str " -- $cur) )
                        ;;
                    "delete-storage")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --storage-id " -- $cur) )
                        ;;
                    "get-storage-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --storage-type --namespace-id " -- $cur) )
                        ;;
                    "describe-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --job-id --namespace-id " -- $cur) )
                        ;;
                    "add-or-update-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --job-str " -- $cur) )
                        ;;
                    "delete-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-id --job-id " -- $cur) )
                        ;;
                    "get-job-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-id " -- $cur) )
                        ;;
                    "start-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-id --job-id " -- $cur) )
                        ;;
                    "stop-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-id --job-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "ssl")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-certs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --domain-name --cert-ids " -- $cur) )
                        ;;
                    "describe-cert")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --cert-id --page-number --page-size " -- $cur) )
                        ;;
                    "delete-certs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --cert-id " -- $cur) )
                        ;;
                    "upload-cert")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --cert-name --key-file --cert-file --alias-name " -- $cur) )
                        ;;
                    "download-cert")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --cert-id --server-type " -- $cur) )
                        ;;
                    "update-cert-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --cert-id --cert-name " -- $cur) )
                        ;;
                    "update-cert")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --cert-id --key-file --cert-file " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "domainservice")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-resource-record")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --page-number --page-size --search " -- $cur) )
                        ;;
                    "create-resource-record")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --req " -- $cur) )
                        ;;
                    "modify-resource-record")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --resource-record-id --req " -- $cur) )
                        ;;
                    "delete-resource-record")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --resource-record-id " -- $cur) )
                        ;;
                    "modify-resource-record-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --resource-record-id --action " -- $cur) )
                        ;;
                    "describe-view-tree")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --load-mode --pack-id --view-id " -- $cur) )
                        ;;
                    "batch-set-resource-records")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --req " -- $cur) )
                        ;;
                    "describe-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --domain-name --domain-id " -- $cur) )
                        ;;
                    "create-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pack-id --domain-name --domain-id --buy-type --time-span --time-unit --billing-type " -- $cur) )
                        ;;
                    "modify-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --domain-name " -- $cur) )
                        ;;
                    "delete-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id " -- $cur) )
                        ;;
                    "describe-domain-query-count")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --domain-name --start --end " -- $cur) )
                        ;;
                    "describe-domain-query-traffic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --domain-name --start --end " -- $cur) )
                        ;;
                    "describe-action-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --start-time --end-time --key-word --success --type " -- $cur) )
                        ;;
                    "describe-user-view")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --view-id --view-name --page-number --page-size " -- $cur) )
                        ;;
                    "create-user-view")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --req " -- $cur) )
                        ;;
                    "delete-user-view")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --req " -- $cur) )
                        ;;
                    "describe-user-view-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --view-id --view-name --page-number --page-size " -- $cur) )
                        ;;
                    "create-user-view-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --req " -- $cur) )
                        ;;
                    "delete-user-view-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --req " -- $cur) )
                        ;;
                    "describe-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --page-index --page-size --search-value " -- $cur) )
                        ;;
                    "create-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --sub-domain-name " -- $cur) )
                        ;;
                    "modify-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --update-monitor " -- $cur) )
                        ;;
                    "describe-monitor-target")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --sub-domain-name " -- $cur) )
                        ;;
                    "create-monitor-target")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --sub-domain-name --targets " -- $cur) )
                        ;;
                    "modify-monitor-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --monitor-id --action --switch-target " -- $cur) )
                        ;;
                    "delete-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --monitor-id " -- $cur) )
                        ;;
                    "describe-monitor-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --page-index --page-size --search-value " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "oss")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "list-buckets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "put-bucket")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucketname " -- $cur) )
                        ;;
                    "delete-bucket")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucketname " -- $cur) )
                        ;;
                    "head-bucket")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucketname " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "redis")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-spec-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-available-resource")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-available-resource2")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-cache-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --sorts --tag-filters --resource-group-ids " -- $cur) )
                        ;;
                    "create-cache-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance --charge " -- $cur) )
                        ;;
                    "describe-cache-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "modify-cache-instance-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --cache-instance-name --cache-instance-description " -- $cur) )
                        ;;
                    "delete-cache-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "modify-cache-instance-class")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --cache-instance-class --shard-number " -- $cur) )
                        ;;
                    "reset-cache-instance-password")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --password " -- $cur) )
                        ;;
                    "describe-instance-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "modify-instance-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --instance-config " -- $cur) )
                        ;;
                    "describe-analysis-time")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "modify-analysis-time")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --analysis-time " -- $cur) )
                        ;;
                    "describe-cache-analysis-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --date " -- $cur) )
                        ;;
                    "create-cache-analysis")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "describe-cache-analysis-result")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --task-id " -- $cur) )
                        ;;
                    "describe-client-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "describe-client-ip-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --ip " -- $cur) )
                        ;;
                    "describe-backups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --page-number --page-size --start-time --end-time --base-id " -- $cur) )
                        ;;
                    "create-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --file-name --backup-type " -- $cur) )
                        ;;
                    "describe-backup-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "modify-backup-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --auto-backup --backup-time --backup-period " -- $cur) )
                        ;;
                    "restore-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --base-id " -- $cur) )
                        ;;
                    "describe-download-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --base-id " -- $cur) )
                        ;;
                    "describe-cluster-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "describe-ip-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "modify-ip-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --ip-white-list " -- $cur) )
                        ;;
                    "describe-slow-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --page-number --page-size --start-time --end-time --shard-id --shard-addr " -- $cur) )
                        ;;
                    "describe-task-progress-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --task-type " -- $cur) )
                        ;;
                    "get-disable-commands")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "set-disable-commands")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --disable-commands " -- $cur) )
                        ;;
                    "describe-accounts")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "create-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --account-name --account-password --account-privilege --account-description " -- $cur) )
                        ;;
                    "modify-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --account-name --account-password --account-privilege --account-description " -- $cur) )
                        ;;
                    "delete-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --account-name " -- $cur) )
                        ;;
                    "modify-accounts")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --accounts " -- $cur) )
                        ;;
                    "start-clear-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --clear-type --key-pattern --key-filter --qps-limit " -- $cur) )
                        ;;
                    "stop-clear-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "describe-clear-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "describe-big-key-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --date " -- $cur) )
                        ;;
                    "create-big-key-analysis")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --string-size --list-size --hash-size --set-size --zset-size --top " -- $cur) )
                        ;;
                    "describe-big-key-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --task-id " -- $cur) )
                        ;;
                    "describe-big-key-analysis-time")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "modify-big-key-analysis-time")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --analysis-time " -- $cur) )
                        ;;
                    "stop-cache-analysis")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "describe-analysis-threshold")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "modify-analysis-threshold")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --string-size --list-size --hash-size --set-size --zset-size --top " -- $cur) )
                        ;;
                    "create-big-key-analysis2")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --string-size --list-size --hash-size --set-size --zset-size " -- $cur) )
                        ;;
                    "describe-big-key-list2")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --page-number --page-size " -- $cur) )
                        ;;
                    "describe-big-key-detail2")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --task-id " -- $cur) )
                        ;;
                    "describe-big-key-analysis-time2")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "modify-big-key-analysis-time2")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --analysis-time " -- $cur) )
                        ;;
                    "describe-analysis-threshold2")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "modify-analysis-threshold2")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --string-size --list-size --hash-size --set-size --zset-size " -- $cur) )
                        ;;
                    "describe-hot-key-result2")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "describe-hot-key-detail2")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --node-id --page-number --page-size " -- $cur) )
                        ;;
                    "describe-instance-class")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --redis-version " -- $cur) )
                        ;;
                    "describe-available-region")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-user-quota")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "billing")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "query-bill-summary")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --app-code --service-code --resource-ids --tags --page-index --page-size " -- $cur) )
                        ;;
                    "query-bill-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --app-code --service-code --billing-type --resource-ids --tags --page-index --page-size " -- $cur) )
                        ;;
                    "calculate-total-price")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cmd --order-list --operate-time --promotion-info --client-type --package-count --process-type --renew-mode --unify-expire-day --total-price-rule " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "portal")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --url --lang --ak " -- $cur) )
                        ;;
                    "describe-products-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --ak " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "clouddnsservice")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "search-rr")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --page-number --page-size " -- $cur) )
                        ;;
                    "get-view-tree")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --load-mode --pack-id --view-id " -- $cur) )
                        ;;
                    "add-rr")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --req " -- $cur) )
                        ;;
                    "update-rr")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --req " -- $cur) )
                        ;;
                    "operate-rr")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --ids --action " -- $cur) )
                        ;;
                    "batch-set-dns-resolve")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --req " -- $cur) )
                        ;;
                    "get-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --domain-name " -- $cur) )
                        ;;
                    "add-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pack-id --domain-name --domain-id --buy-type --time-span --time-unit --billing-type " -- $cur) )
                        ;;
                    "del-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id " -- $cur) )
                        ;;
                    "update-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-name --id " -- $cur) )
                        ;;
                    "get-domain-query-count")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --domain-name --start --end " -- $cur) )
                        ;;
                    "get-domain-query-traffic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --domain-name --start --end " -- $cur) )
                        ;;
                    "get-action-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --start-time --end-time --key-word --success --type " -- $cur) )
                        ;;
                    "add-user-view")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --req " -- $cur) )
                        ;;
                    "del-user-view")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --req " -- $cur) )
                        ;;
                    "get-user-view")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --view-id --view-name --page-number --page-size " -- $cur) )
                        ;;
                    "add-user-view-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --req " -- $cur) )
                        ;;
                    "del-user-view-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --req " -- $cur) )
                        ;;
                    "get-user-view-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --view-id --view-name --page-number --page-size " -- $cur) )
                        ;;
                    "get-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --page-index --page-size --search-value " -- $cur) )
                        ;;
                    "add-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --sub-domain-name " -- $cur) )
                        ;;
                    "get-targets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --sub-domain-name " -- $cur) )
                        ;;
                    "add-monitor-target")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --sub-domain-name --targets " -- $cur) )
                        ;;
                    "operate-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --action --ids --switch-target " -- $cur) )
                        ;;
                    "update-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --update-monitor " -- $cur) )
                        ;;
                    "get-monitor-alarm-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --page-index --page-size --search-value " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "cdn")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "query-forbidden-info-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --query-domain --forbidden-url --page-number --page-size " -- $cur) )
                        ;;
                    "create-forbidden-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --forbidden-type --forbidden-domain --forbidden-url --reason --link-other --share-cache-domain-flag --token " -- $cur) )
                        ;;
                    "delete-forbidden-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --forbidden-type --forbidden-domain --forbidden-url --share-cache-domain-flag --token " -- $cur) )
                        ;;
                    "query-un-forbidden-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --url --task-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-live-domain-prefecth-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --url-list --prefetch-time --action " -- $cur) )
                        ;;
                    "query-live-prefetch-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --url-list " -- $cur) )
                        ;;
                    "query-area-isp-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "query-area-isp-list-v2")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "query-mix-statistics-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --fields --area --isp --period --scheme --cache-type " -- $cur) )
                        ;;
                    "query-mix-statistics-with-area-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --fields --area --isp --period --cache-type " -- $cur) )
                        ;;
                    "query-mix-traffic-group-sum")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --fields --area --isp --period --group-by --cache-type " -- $cur) )
                        ;;
                    "query-statistics-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --sub-domain --fields --area --isp --origin --period --abroad --cache-type " -- $cur) )
                        ;;
                    "query-statistics-data-group-by-area")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --sub-domain --fields --area --isp --origin --period --group-by --scheme --abroad --cache-type " -- $cur) )
                        ;;
                    "query-statistics-data-group-sum")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --sub-domain --fields --area --isp --origin --period --group-by --abroad --cache-type " -- $cur) )
                        ;;
                    "query-live-statistics-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --app-name --stream-name --sub-domain --fields --area --isp --req-method --scheme --cache-level --period --cache-type " -- $cur) )
                        ;;
                    "query-live-statistics-area-data-group-by")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --app-name --fields --area --isp --stream-name --period --group-by --sub-domain --scheme --req-method --cache-level --cache-type " -- $cur) )
                        ;;
                    "query-live-traffic-group-sum")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --sub-domain --app-name --stream-name --fields --area --isp --scheme --period --group-by --req-method --cache-level --cache-type " -- $cur) )
                        ;;
                    "query-statistics-top-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --sub-domain --size --top-by " -- $cur) )
                        ;;
                    "query-statistics-top-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --sub-domain --size --top-by " -- $cur) )
                        ;;
                    "query-dir-bandwidth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --dirs --regions --cache-type " -- $cur) )
                        ;;
                    "query-dir-stats-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --dirs --cache-type " -- $cur) )
                        ;;
                    "query-customized-dir-band-width")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --dir " -- $cur) )
                        ;;
                    "query-stream-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --start-time --end-time --app-name --stream-name --page-num --page-size " -- $cur) )
                        ;;
                    "query-domain-temp-inst-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --inst-name --page-number --page-size " -- $cur) )
                        ;;
                    "query-domain-temp-pro-keys")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "modify-domain-temp-inst")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --temp-id --inst-id --inst-name --inst-pro-info-map " -- $cur) )
                        ;;
                    "query-domain-temp-inst")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --inst-id " -- $cur) )
                        ;;
                    "del-domain-temp-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --inst-id " -- $cur) )
                        ;;
                    "get-domain-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-word --page-number --page-size --status --type --accelerate-region " -- $cur) )
                        ;;
                    "get-domain-list-by-filter")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-word --page-number --page-size --status --type --accelerate-region --filter-by --tag-filters " -- $cur) )
                        ;;
                    "get-domain-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "create-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --source-type --cdn-type --back-source-type --daily-band-width --quaility --max-file-size --min-file-size --sum-file-size --avg-file-size --default-source-host --http-type --ip-source --domain-source --oss-source --accelerate-region --temp-inst-id " -- $cur) )
                        ;;
                    "delete-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "start-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "stop-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "query-oss-buckets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "batch-create")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domains --source-type --cdn-type --back-source-type --daily-band-width --quaility --max-file-size --min-file-size --sum-file-size --avg-file-size --default-source-host --http-type --ip-source --domain-source --oss-source --accelerate-region --temp-inst-id " -- $cur) )
                        ;;
                    "query-domain-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "config-service-notice")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --id --notice-type --notice-way --notice-to --notice-cc --notice-content --notice-period --notice-status " -- $cur) )
                        ;;
                    "query-service-notice")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --notice-type --notice-way " -- $cur) )
                        ;;
                    "query-online-billing-type")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "set-online-billing-type")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --all-type " -- $cur) )
                        ;;
                    "query-domain-config-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-id " -- $cur) )
                        ;;
                    "check-whether-ip-belong-to-jcloud")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --ips " -- $cur) )
                        ;;
                    "query-service-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-list " -- $cur) )
                        ;;
                    "get-all-upper-node-ip-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "query-domain-group-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --share-cache --page-number --page-size --primary-domain --domain-group-name " -- $cur) )
                        ;;
                    "query-domain-group-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --id " -- $cur) )
                        ;;
                    "query-domains-not-in-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "update-domain-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --id --domains --primary-domain --share-cache --domain-group-name " -- $cur) )
                        ;;
                    "create-domain-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --share-cache --primary-domain --domain-group-name --domains " -- $cur) )
                        ;;
                    "batch-delete-domain-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --ids " -- $cur) )
                        ;;
                    "query-waf-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-waf-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --switch-status " -- $cur) )
                        ;;
                    "query-waf-white-rule-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-waf-white-rule-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --switch-status " -- $cur) )
                        ;;
                    "querywaf-white-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --rule-type --id --page-size --page-index " -- $cur) )
                        ;;
                    "create-waf-white-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --rule-type --match-op --val --actions " -- $cur) )
                        ;;
                    "update-waf-white-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --id --rule-type --match-op --val --actions " -- $cur) )
                        ;;
                    "enable-waf-white-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ids --rule-type " -- $cur) )
                        ;;
                    "disable-waf-white-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ids --rule-type " -- $cur) )
                        ;;
                    "delete-waf-white-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ids --rule-type " -- $cur) )
                        ;;
                    "query-waf-black-rule-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-waf-black-rule-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --switch-status " -- $cur) )
                        ;;
                    "querywaf-black-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --rule-type --id --page-size --page-index " -- $cur) )
                        ;;
                    "create-waf-black-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --rule-type --match-op --val --at-op --at-val " -- $cur) )
                        ;;
                    "update-waf-black-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --id --rule-type --match-op --val --at-op --at-val " -- $cur) )
                        ;;
                    "enable-waf-black-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ids --rule-type " -- $cur) )
                        ;;
                    "disable-waf-black-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ids --rule-type " -- $cur) )
                        ;;
                    "delete-waf-black-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ids --rule-type " -- $cur) )
                        ;;
                    "query-ccprotect-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-ccprotect-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --switch-status " -- $cur) )
                        ;;
                    "query-ccprotect-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --id --page-size --page-index " -- $cur) )
                        ;;
                    "create-ccprotect-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --uri --detect-period --single-ip-limit --block-type --block-time " -- $cur) )
                        ;;
                    "update-ccprotect-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --id --uri --detect-period --single-ip-limit --block-type --block-time " -- $cur) )
                        ;;
                    "enable-ccprotect-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ids " -- $cur) )
                        ;;
                    "disable-ccprotect-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ids " -- $cur) )
                        ;;
                    "delete-ccprotect-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ids " -- $cur) )
                        ;;
                    "query-web-protect-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-web-protect-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --switch-status " -- $cur) )
                        ;;
                    "query-web-protect-settings")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "update-web-protect-settings")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --waf-mode --waf-level --redirection " -- $cur) )
                        ;;
                    "query-waf-regions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --skip-type " -- $cur) )
                        ;;
                    "query-ip-black-setting-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "bat-create-prefetch-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --tasks " -- $cur) )
                        ;;
                    "update-prefetch-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --url --region --isp --copy-num " -- $cur) )
                        ;;
                    "query-prefetch-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --url --region --isp --status --file-id --page-number --page-size --task-type --domain " -- $cur) )
                        ;;
                    "stop-prefetch-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --urls --region --isp " -- $cur) )
                        ;;
                    "operate-purge-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --urls --opt-type " -- $cur) )
                        ;;
                    "query-purge-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --url --status --file-id --page-number --page-size --domain " -- $cur) )
                        ;;
                    "query-net-protection-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "set-net-protection-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --src-new-conn-limit-enable --dst-new-conn-limit-enable --datagram-range-min --datagram-range-max --dst-new-conn-limit-value --src-new-conn-limit-value --geo-black --ip-black --ip-white " -- $cur) )
                        ;;
                    "query-net-protection-rules-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "set-net-protection-rules-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --switch-status " -- $cur) )
                        ;;
                    "query-geo-areas")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "query-attack-type-count")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time " -- $cur) )
                        ;;
                    "query-ddos-graph")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time " -- $cur) )
                        ;;
                    "search-attack-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --page-number --page-size --sort-field --sort-rule " -- $cur) )
                        ;;
                    "preview-certificate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --content " -- $cur) )
                        ;;
                    "query-default-http-header-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "query-ip-black-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-ip-black-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ips --ip-list-type " -- $cur) )
                        ;;
                    "operate-ip-black-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status " -- $cur) )
                        ;;
                    "query-custom-error-page")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-custom-error-page")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --error-page-configs " -- $cur) )
                        ;;
                    "create-cache-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --weight --ttl --contents --cache-type " -- $cur) )
                        ;;
                    "update-cache-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --weight --ttl --contents --cache-type --config-id " -- $cur) )
                        ;;
                    "delete-cache-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --config-id " -- $cur) )
                        ;;
                    "set-cache-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --cache-rules " -- $cur) )
                        ;;
                    "query-http-header")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --edge-type " -- $cur) )
                        ;;
                    "set-http-header")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --edge-type --header-type --header-name --header-value " -- $cur) )
                        ;;
                    "delete-http-header")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --edge-type --header-type --header-name " -- $cur) )
                        ;;
                    "set-video-draft")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status " -- $cur) )
                        ;;
                    "set-range")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status " -- $cur) )
                        ;;
                    "set-ignore-query-string")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status " -- $cur) )
                        ;;
                    "set-filter-args")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --retain-args --status " -- $cur) )
                        ;;
                    "query-filter-args")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "query-user-agent")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-user-agent-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --user-agent-type --user-agent-list " -- $cur) )
                        ;;
                    "query-accesskey-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-accesskey-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --accesskey-type --accesskey-key --accesskey-keep " -- $cur) )
                        ;;
                    "set-refer")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --refer-type --refer-list --allow-no-refer-header --allow-null-refer-header " -- $cur) )
                        ;;
                    "query-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --cycle --monitor-path --http-request-header " -- $cur) )
                        ;;
                    "stop-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-source")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --source-type --back-source-type --accelerate-region --ip-source --domain-source --oss-source --default-source-host " -- $cur) )
                        ;;
                    "operate-share-cache")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status " -- $cur) )
                        ;;
                    "set-http-type")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --http-type --certificate --rsa-key --jump-type --cert-from --ssl-cert-id --sync-to-ssl --cert-name " -- $cur) )
                        ;;
                    "query-follow-redirect")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-follow-redirect")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status " -- $cur) )
                        ;;
                    "query-follow-source-protocol")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-follow-source-protocol")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status " -- $cur) )
                        ;;
                    "set-domain-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --http-type --back-source-type --jump-type --jcdn-time-anti --hdr-ctrl --toutiao-header " -- $cur) )
                        ;;
                    "query-domain-all-config-classify")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "execute-domain-copy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --copy-domains --config-keys " -- $cur) )
                        ;;
                    "query-extra-cache-time")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-extra-cache-time")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --http-code --cache-time " -- $cur) )
                        ;;
                    "delete-extra-cache-time")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --http-code " -- $cur) )
                        ;;
                    "batch-set-extra-cache-time")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --content " -- $cur) )
                        ;;
                    "set-gzip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status --gzip-types " -- $cur) )
                        ;;
                    "config-back-source-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --before-regex --after-regex " -- $cur) )
                        ;;
                    "query-back-source-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "config-url-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --before-regex --after-regex " -- $cur) )
                        ;;
                    "query-url-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "config-http2")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status " -- $cur) )
                        ;;
                    "query-http2")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "config-back-source-path")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --configs " -- $cur) )
                        ;;
                    "query-back-source-path")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-accelerate-region")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --accelerate-region " -- $cur) )
                        ;;
                    "config-back-source-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status --rules " -- $cur) )
                        ;;
                    "query-back-source-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "config-back-source-oss")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status --access-key --secret-key --bucket --suffix --domain2 " -- $cur) )
                        ;;
                    "query-back-source-oss")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "speed-limit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --limit-rate " -- $cur) )
                        ;;
                    "query-band")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --area --isp --period " -- $cur) )
                        ;;
                    "query-band-with-area")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --area --isp --period " -- $cur) )
                        ;;
                    "query-cdn-user-quota")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "query-refresh-task-by-ids")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-ids --keyword " -- $cur) )
                        ;;
                    "set-refresh-limit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-users --refresh-count --prefetch-count --dir-count " -- $cur) )
                        ;;
                    "query-refresh-limit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-users --page-number --page-size " -- $cur) )
                        ;;
                    "query-refresh-task-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-id " -- $cur) )
                        ;;
                    "create-refresh-task-for-callback")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-type --url-items " -- $cur) )
                        ;;
                    "create-refresh-task-for-callback-v2")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-type --url-items " -- $cur) )
                        ;;
                    "query-refresh-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --keyword --task-id --task-status --task-type --page-number --page-size --account-type --sub-users " -- $cur) )
                        ;;
                    "create-refresh-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-type --urls " -- $cur) )
                        ;;
                    "get-ssl-cert-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --domain " -- $cur) )
                        ;;
                    "get-ssl-cert-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --ssl-cert-id " -- $cur) )
                        ;;
                    "upload-cert")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --cert-name --key-file --cert-file --alias-name " -- $cur) )
                        ;;
                    "query-avg-bandwidth-for-pcdn")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --starttime --stoptime --clientid --page --size " -- $cur) )
                        ;;
                    "query-device-status-for-pcdn")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --mac-addr " -- $cur) )
                        ;;
                    "query-jdbox-statistics-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --fields --area --isp --period --category --mac-addr --plugin-pin " -- $cur) )
                        ;;
                    "query-jdbox-statistics-data-with-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --group-by --fields --area --isp --period --category --mac-addr --plugin-pin " -- $cur) )
                        ;;
                    "query-jbox-avg-bandwidth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --starttime --stoptime --plugin-pin --clientid --page --size " -- $cur) )
                        ;;
                    "query-domains-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domains --start-time --end-time --interval --log-type " -- $cur) )
                        ;;
                    "query-domain-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --start-time --end-time --interval --log-type --page-size --page-number " -- $cur) )
                        ;;
                    "waf-query-pv-for-area-and-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain " -- $cur) )
                        ;;
                    "waf-query-pv")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain " -- $cur) )
                        ;;
                    "waf-query-attack-details")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --sort-field --sort-rule --page-number --page-size " -- $cur) )
                        ;;
                    "set-auth-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --enable-url-auth --auth-key --age --enc-algorithm --time-format --uri-type --rule " -- $cur) )
                        ;;
                    "set-source-auth-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --enable --origin-role --auth-type --tos-auth-info --oss-auth-info " -- $cur) )
                        ;;
                    "set-live-domain-back-source")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --source-type --back-source-type --default-source-host --domain-source --ip-source " -- $cur) )
                        ;;
                    "set-live-domain-ip-black-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ips --ip-list-type " -- $cur) )
                        ;;
                    "set-live-domain-refer")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --refer-type --refer-list --allow-no-refer-header --allow-null-refer-header " -- $cur) )
                        ;;
                    "operate-live-domain-ip-black-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --black-ips-enable " -- $cur) )
                        ;;
                    "set-live-domain-back-source-host")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --source-host " -- $cur) )
                        ;;
                    "set-live-domain-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --accesskey-type --accesskey-key --auth-life-time " -- $cur) )
                        ;;
                    "set-protocol-convert")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --certificate --rsa-key --cert-from --ssl-cert-id --sync-to-ssl --cert-name --protocol-converts " -- $cur) )
                        ;;
                    "delete-forbidden-stream")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --delete-streams " -- $cur) )
                        ;;
                    "query-push-domain-orapp-or-stream")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --app --stream --limit " -- $cur) )
                        ;;
                    "query-live-domain-ip-black-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "batch-create-live-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain --publish-domain --source-type --back-http-type --default-source-host --site-type --back-source-type --ip-source --domain-source --accelerate-region " -- $cur) )
                        ;;
                    "query-live-domain-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "query-live-domain-apps")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "streambus")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-topic-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --keyword " -- $cur) )
                        ;;
                    "describe-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "add-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-model " -- $cur) )
                        ;;
                    "update-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-model " -- $cur) )
                        ;;
                    "delete-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "get-consumer-group-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-id " -- $cur) )
                        ;;
                    "create-consumer-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --consumer-group-str " -- $cur) )
                        ;;
                    "delete-consumer-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-id --consumer-group-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "apigateway")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "query-user-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --order-by --api-group-id " -- $cur) )
                        ;;
                    "create-user-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain --protocol --api-group-id " -- $cur) )
                        ;;
                    "delete-user-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-ids --api-group-id " -- $cur) )
                        ;;
                    "create-backend-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --backend-config-id --base-group-id --environment --backend-url --backend-service-type --header-params --query-params --description --create-time --sort --user-sort --jdsf-id --jdsf-param --jdsf-region --jdsf-pin " -- $cur) )
                        ;;
                    "describe-backend-configs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --environment --page-number --page-size --filters " -- $cur) )
                        ;;
                    "describe-backend-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --backend-config-id " -- $cur) )
                        ;;
                    "update-backend-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --backend-config-id --base-group-id --environment --backend-url --backend-service-type --header-params --query-params --description --create-time --sort --user-sort --jdsf-id --jdsf-param --jdsf-region --jdsf-pin " -- $cur) )
                        ;;
                    "delete-backend-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --backend-config-id " -- $cur) )
                        ;;
                    "query-uc-access-keys")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "query-keys")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --order-by --user-type --key-id " -- $cur) )
                        ;;
                    "create-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-name --key-desc " -- $cur) )
                        ;;
                    "reset-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-id " -- $cur) )
                        ;;
                    "update-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-id --key-name --key-desc " -- $cur) )
                        ;;
                    "query-key-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-id " -- $cur) )
                        ;;
                    "describe-api-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --tag-filters " -- $cur) )
                        ;;
                    "create-api-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --group-name --description --prefix --key-check --auth-type --prefix-strip --group-type --jdsf-name --jdsf-registry-name --jdsf-id " -- $cur) )
                        ;;
                    "check-group-name-exist")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --group-name " -- $cur) )
                        ;;
                    "describe-api-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id " -- $cur) )
                        ;;
                    "modify-api-group-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --group-name --description --prefix --key-check --auth-type --prefix-strip --group-type --jdsf-name --jdsf-registry-name --jdsf-id " -- $cur) )
                        ;;
                    "delete-api-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id " -- $cur) )
                        ;;
                    "describe-is-deploy-api-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters " -- $cur) )
                        ;;
                    "query-rate-limit-policies")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-rate-limit-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --rate-limit-policy-view " -- $cur) )
                        ;;
                    "check-policy-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --policy-name " -- $cur) )
                        ;;
                    "query-rate-limit-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --policy-id " -- $cur) )
                        ;;
                    "update-rate-limit-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --policy-id --rate-limit-policy-view " -- $cur) )
                        ;;
                    "delete-rate-limit-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --policy-id " -- $cur) )
                        ;;
                    "query-bind-group-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --policy-id " -- $cur) )
                        ;;
                    "bind-group-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --policy-id --deployment-ids " -- $cur) )
                        ;;
                    "query-policy-group-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --policy-id " -- $cur) )
                        ;;
                    "query-subscription-keys")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-subscription-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --description --name " -- $cur) )
                        ;;
                    "query-subscription-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subscription-key-id " -- $cur) )
                        ;;
                    "update-subscription-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subscription-key-id --description --name " -- $cur) )
                        ;;
                    "delete-subscription-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subscription-key-id " -- $cur) )
                        ;;
                    "query-access-keys")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --description --access-key-type --access-key " -- $cur) )
                        ;;
                    "check-key-exist")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key --access-key-type " -- $cur) )
                        ;;
                    "query-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key-id " -- $cur) )
                        ;;
                    "update-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key-id --description --access-key-type --access-key " -- $cur) )
                        ;;
                    "delete-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key-id " -- $cur) )
                        ;;
                    "query-bind-group-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key-id " -- $cur) )
                        ;;
                    "bind-group-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key-id --deployment-ids " -- $cur) )
                        ;;
                    "query-key-group-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key-id " -- $cur) )
                        ;;
                    "check-pin")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pin " -- $cur) )
                        ;;
                    "query-apis")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-apis")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --api " -- $cur) )
                        ;;
                    "check-api-name-exist")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --api-name " -- $cur) )
                        ;;
                    "query-api")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --api-id --filters " -- $cur) )
                        ;;
                    "update-api")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --api-id --api " -- $cur) )
                        ;;
                    "delete-api")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --api-id " -- $cur) )
                        ;;
                    "update-api-by-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --api-name --api " -- $cur) )
                        ;;
                    "delete-api-by-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --api-name " -- $cur) )
                        ;;
                    "describe-deployments")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --filters " -- $cur) )
                        ;;
                    "deploy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --environment --backend-service-type --backend-url --description --jdsf-name --jdsf-registry-name --jdsf-id " -- $cur) )
                        ;;
                    "describe-deployment")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --deployment-id " -- $cur) )
                        ;;
                    "offline")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --deployment-id " -- $cur) )
                        ;;
                    "batch-offline")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --deployment-ids " -- $cur) )
                        ;;
                    "describe-revisions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-revision")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --base-revision --revision-note " -- $cur) )
                        ;;
                    "get-revision-ids")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id " -- $cur) )
                        ;;
                    "check-revision-exist")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision " -- $cur) )
                        ;;
                    "query-revision")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "modify-revision")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision-id --revision-note " -- $cur) )
                        ;;
                    "delete-revision")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision-id " -- $cur) )
                        ;;
                    "query-access-auths")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-access-auth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-auth-view " -- $cur) )
                        ;;
                    "check-auth-exist")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key --auth-user-type " -- $cur) )
                        ;;
                    "query-access-auth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-auth-id " -- $cur) )
                        ;;
                    "update-access-auth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-auth-id --access-auth-view " -- $cur) )
                        ;;
                    "delete-access-auth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-auth-id " -- $cur) )
                        ;;
                    "query-bind-group-auth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-auth-id " -- $cur) )
                        ;;
                    "bind-group-auth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-auth-id --deployment-ids " -- $cur) )
                        ;;
                    "query-auth-group-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --auth-user-type " -- $cur) )
                        ;;
                    "authorized-api-group-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "sts")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "assume-role")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --assume-role-info " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "nativecontainer")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-secrets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --secret-type --data " -- $cur) )
                        ;;
                    "describe-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "delete-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "describe-quota")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --resource-type " -- $cur) )
                        ;;
                    "describe-containers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --tags " -- $cur) )
                        ;;
                    "create-containers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-spec --max-count --client-token " -- $cur) )
                        ;;
                    "describe-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "delete-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "start-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "stop-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "modify-container-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --name --description " -- $cur) )
                        ;;
                    "associate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --elastic-ip-id " -- $cur) )
                        ;;
                    "disassociate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --elastic-ip-id " -- $cur) )
                        ;;
                    "get-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --tail-lines --since-seconds --limit-bytes " -- $cur) )
                        ;;
                    "rebuild-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --image --secret --command --args --tty --working-dir --envs " -- $cur) )
                        ;;
                    "resize-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --instance-type " -- $cur) )
                        ;;
                    "exec-create")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --command --tty " -- $cur) )
                        ;;
                    "exec-get-exit-code")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --exec-id " -- $cur) )
                        ;;
                    "resize-tty")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --height --width --exec-id " -- $cur) )
                        ;;
                    "describe-instance-types")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "pod")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-secrets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --secret-type --data " -- $cur) )
                        ;;
                    "describe-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "delete-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "create-config-file")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --data " -- $cur) )
                        ;;
                    "describe-config-file")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "delete-config-file")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "update-config-file")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --name --data " -- $cur) )
                        ;;
                    "describe-quota")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --resource-type " -- $cur) )
                        ;;
                    "describe-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --container-name " -- $cur) )
                        ;;
                    "attach")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --container-name " -- $cur) )
                        ;;
                    "exec-create")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --container-name --command --tty " -- $cur) )
                        ;;
                    "exec-get-exit-code")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --container-name --exec-id " -- $cur) )
                        ;;
                    "resize-tty")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --container-name --height --width --exec-id " -- $cur) )
                        ;;
                    "describe-pods")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --tags " -- $cur) )
                        ;;
                    "create-pods")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-spec --max-count --client-token " -- $cur) )
                        ;;
                    "check-pod-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-name --max-count " -- $cur) )
                        ;;
                    "describe-pod")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id " -- $cur) )
                        ;;
                    "delete-pod")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id " -- $cur) )
                        ;;
                    "start-pod")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id " -- $cur) )
                        ;;
                    "stop-pod")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id " -- $cur) )
                        ;;
                    "modify-pod-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --description " -- $cur) )
                        ;;
                    "associate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --elastic-ip-id " -- $cur) )
                        ;;
                    "disassociate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --elastic-ip-id " -- $cur) )
                        ;;
                    "get-container-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --container-name --tail-lines --since-seconds --limit-bytes --start-time --end-time " -- $cur) )
                        ;;
                    "rebuild-pod")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --containers " -- $cur) )
                        ;;
                    "resize-pod")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --instance-type --container-resources " -- $cur) )
                        ;;
                    "describe-instance-types")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "datastar")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-large-screen-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --region --industry --start-date --end-date --first-index --second-index " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "kms")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-key-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size " -- $cur) )
                        ;;
                    "create-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-cfg " -- $cur) )
                        ;;
                    "describe-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id " -- $cur) )
                        ;;
                    "update-key-description")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --key-cfg " -- $cur) )
                        ;;
                    "enable-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id " -- $cur) )
                        ;;
                    "disable-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id " -- $cur) )
                        ;;
                    "schedule-key-deletion")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --delay-days " -- $cur) )
                        ;;
                    "cancel-key-deletion")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id " -- $cur) )
                        ;;
                    "key-rotation")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id " -- $cur) )
                        ;;
                    "encrypt")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --plaintext " -- $cur) )
                        ;;
                    "decrypt")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --ciphertext-blob " -- $cur) )
                        ;;
                    "get-public-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id " -- $cur) )
                        ;;
                    "sign")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --plaintext " -- $cur) )
                        ;;
                    "validate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --plaintext --signature " -- $cur) )
                        ;;
                    "generate-data-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id " -- $cur) )
                        ;;
                    "describe-key-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --page-number --page-size " -- $cur) )
                        ;;
                    "enable-key-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --version " -- $cur) )
                        ;;
                    "disable-key-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --version " -- $cur) )
                        ;;
                    "schedule-key-version-deletion")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --version --delay-days " -- $cur) )
                        ;;
                    "cancel-key-version-deletion")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --version " -- $cur) )
                        ;;
                    "describe-secret-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size " -- $cur) )
                        ;;
                    "create-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-cfg " -- $cur) )
                        ;;
                    "describe-secret-version-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id --page-number --page-size " -- $cur) )
                        ;;
                    "update-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id --secret-desc-cfg " -- $cur) )
                        ;;
                    "enable-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id " -- $cur) )
                        ;;
                    "disable-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id " -- $cur) )
                        ;;
                    "delete-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id " -- $cur) )
                        ;;
                    "create-secret-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id --secret-version-cfg " -- $cur) )
                        ;;
                    "describe-secret-version-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id --version " -- $cur) )
                        ;;
                    "update-secret-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id --version --secret-time-cfg " -- $cur) )
                        ;;
                    "enable-secret-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id --version " -- $cur) )
                        ;;
                    "disable-secret-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id --version " -- $cur) )
                        ;;
                    "delete-secret-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id --version " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "elite")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "jdx-query-delivery-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --order-number " -- $cur) )
                        ;;
                    "get-store-service")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --buyer-pin --business-data --query-all " -- $cur) )
                        ;;
                    "jdx-query-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-no --page-size " -- $cur) )
                        ;;
                    "list-sale-service")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-no --page-size --deliver-number --deliver-status --create-dt-start --create-dt-end " -- $cur) )
                        ;;
                    "get-sale-service-by-deliver-number")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --deliver-number " -- $cur) )
                        ;;
                    "confirm-sale-service-delivery")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --confirm-delivery-info " -- $cur) )
                        ;;
                    "jdx-report-order")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --report-order-info " -- $cur) )
                        ;;
                    "jdx-create-order")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --create-order-info " -- $cur) )
                        ;;
                    "jdx-query-price")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --query-price-param " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "iam")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "create-sub-user")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --create-sub-user-info " -- $cur) )
                        ;;
                    "describe-sub-user")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user " -- $cur) )
                        ;;
                    "update-sub-user")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user --update-sub-user-info " -- $cur) )
                        ;;
                    "delete-sub-user")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user " -- $cur) )
                        ;;
                    "describe-sub-users")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --keyword --sort " -- $cur) )
                        ;;
                    "describe-sub-user-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user " -- $cur) )
                        ;;
                    "describe-attached-sub-user-policies")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user " -- $cur) )
                        ;;
                    "detach-sub-user-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user --policy-name " -- $cur) )
                        ;;
                    "attach-sub-user-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user --policy-name " -- $cur) )
                        ;;
                    "create-permission")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --create-permission-info " -- $cur) )
                        ;;
                    "describe-permission-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --permission-id " -- $cur) )
                        ;;
                    "update-permission")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --permission-id --update-permission-info " -- $cur) )
                        ;;
                    "describe-permissions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --keyword --query-type " -- $cur) )
                        ;;
                    "describe-sub-user-permissions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --sub-user --page-number --page-size " -- $cur) )
                        ;;
                    "add-permissions-to-sub-user")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --sub-user --add-permissions-info " -- $cur) )
                        ;;
                    "remove-permission-of-sub-user")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --permission-id --sub-user " -- $cur) )
                        ;;
                    "enable-sub-user-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user --access-key " -- $cur) )
                        ;;
                    "disable-sub-user-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user --access-key " -- $cur) )
                        ;;
                    "delete-sub-user-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user --access-key " -- $cur) )
                        ;;
                    "create-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --create-policy-info " -- $cur) )
                        ;;
                    "describe-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --policy-name " -- $cur) )
                        ;;
                    "update-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --policy-name --update-policy-info " -- $cur) )
                        ;;
                    "delete-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --policy-name " -- $cur) )
                        ;;
                    "update-policy-description")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --policy-name --update-policy-description-info " -- $cur) )
                        ;;
                    "describe-policies")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --keyword --query-type --sort " -- $cur) )
                        ;;
                    "create-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --create-group-info " -- $cur) )
                        ;;
                    "describe-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name " -- $cur) )
                        ;;
                    "update-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name --update-group-info " -- $cur) )
                        ;;
                    "delete-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name " -- $cur) )
                        ;;
                    "describe-group-sub-users")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name --page-number --page-size " -- $cur) )
                        ;;
                    "describe-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --keyword --sort " -- $cur) )
                        ;;
                    "describe-attached-group-policies")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name " -- $cur) )
                        ;;
                    "detach-group-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name --policy-name " -- $cur) )
                        ;;
                    "attach-group-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name --policy-name " -- $cur) )
                        ;;
                    "remove-sub-user-from-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name --sub-user " -- $cur) )
                        ;;
                    "add-sub-user-to-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name --sub-user " -- $cur) )
                        ;;
                    "create-role")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --create-role-info " -- $cur) )
                        ;;
                    "describe-role")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --role-name " -- $cur) )
                        ;;
                    "delete-role")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --role-name " -- $cur) )
                        ;;
                    "update-assume-role-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --role-name --update-assume-role-policy-info " -- $cur) )
                        ;;
                    "describe-roles")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --role-name --type --sort " -- $cur) )
                        ;;
                    "attach-role-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --role-name --policy-name " -- $cur) )
                        ;;
                    "detach-role-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --role-name --policy-name " -- $cur) )
                        ;;
                    "describe-role-policies")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --role-name --page-number --page-size --keyword --sort " -- $cur) )
                        ;;
                    "describe-user-access-keys")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-user-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "enabled-user-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key " -- $cur) )
                        ;;
                    "disabled-user-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key " -- $cur) )
                        ;;
                    "delete-user-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "iothub")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "list-product-abilities")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --product-key --page-number --page-size --filters " -- $cur) )
                        ;;
                    "import-thing-model")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --product-key --thing-model " -- $cur) )
                        ;;
                    "export-thing-model")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --product-key " -- $cur) )
                        ;;
                    "describe-thing-shadow")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --identifier --product-key " -- $cur) )
                        ;;
                    "update-thing-shadow")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --identifier --product-key --state --version " -- $cur) )
                        ;;
                    "invoke-thing-service")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --identifier --product-key --name --input " -- $cur) )
                        ;;
                    "query-device-page")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --device-name --status --product-key --device-type --now-page --page-size --order --direction --parent-id " -- $cur) )
                        ;;
                    "update-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --device-id --model --manufacturer --description --status " -- $cur) )
                        ;;
                    "add-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --device-name --product-key --model --manufacturer --description " -- $cur) )
                        ;;
                    "query-device-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --device-name --region-id --product-key " -- $cur) )
                        ;;
                    "remove-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --device-name --region-id --product-key " -- $cur) )
                        ;;
                    "remove-device-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --device-id " -- $cur) )
                        ;;
                    "list-products")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --product-name --product-type --product-description " -- $cur) )
                        ;;
                    "describe-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --product-key " -- $cur) )
                        ;;
                    "update-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --product-key --product-name --product-description --dynamic-register " -- $cur) )
                        ;;
                    "delete-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --product-key " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "sms")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "batch-send")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --template-id --sign-id --phone-list --params " -- $cur) )
                        ;;
                    "status-report")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --sequence-number --phone-list " -- $cur) )
                        ;;
                    "reply")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --app-id --data-date --phone-list " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "resourcetag")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --resource-vo " -- $cur) )
                        ;;
                    "describe-tags")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --tag-keys-vo " -- $cur) )
                        ;;
                    "describe-keys")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --tag-keys-vo " -- $cur) )
                        ;;
                    "describe-values")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --tag-values-vo " -- $cur) )
                        ;;
                    "tag-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --tag-resources " -- $cur) )
                        ;;
                    "un-tag-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --un-tag-resources " -- $cur) )
                        ;;
                    "query-resource")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --query-resource " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "jcq")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-access-point")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name " -- $cur) )
                        ;;
                    "describe-topics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-size --page-number --topic-filter --tag-filters " -- $cur) )
                        ;;
                    "create-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --type --description " -- $cur) )
                        ;;
                    "describe-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name " -- $cur) )
                        ;;
                    "delete-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name " -- $cur) )
                        ;;
                    "describe-dead-letter-numbers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --consumer-group-id --page-number --page-size " -- $cur) )
                        ;;
                    "describe-dead-letter-numbers-with-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id --page-number --page-size " -- $cur) )
                        ;;
                    "list-dead-letters")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id --page-number --page-size --start-time --end-time " -- $cur) )
                        ;;
                    "delete-dead-letters")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id --message-ids " -- $cur) )
                        ;;
                    "resend-dead-letters")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id --message-ids " -- $cur) )
                        ;;
                    "describe-permission")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name " -- $cur) )
                        ;;
                    "add-permission")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --permission --target-user-id " -- $cur) )
                        ;;
                    "remove-permission")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --permission --target-user-id " -- $cur) )
                        ;;
                    "describe-consumer-group-ids")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-subscriptions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-filter --page-size --page-number " -- $cur) )
                        ;;
                    "create-subscription")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id --message-invisible-time-in-seconds --dlq-enable --max-retry-times " -- $cur) )
                        ;;
                    "describe-subscription")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id " -- $cur) )
                        ;;
                    "modify-subscription-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id --max-retry-times --message-invisible-time-in-seconds --dlq-enable " -- $cur) )
                        ;;
                    "delete-subscription")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id " -- $cur) )
                        ;;
                    "clean-messages")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id " -- $cur) )
                        ;;
                    "reset-consume-offset")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id --time " -- $cur) )
                        ;;
                    "describe-messages")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --start-time --end-time --page-size --page-number " -- $cur) )
                        ;;
                    "describe-message")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --message-id " -- $cur) )
                        ;;
                    "describe-message-trace")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --message-id " -- $cur) )
                        ;;
                    "describe-messages-by-business-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --business-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "ias")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "apps")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pin --app-name --client-id --multi-tenant --state --scope --start-time --end-time --account-type --page-index --page-size --offset " -- $cur) )
                        ;;
                    "app-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-id " -- $cur) )
                        ;;
                    "state")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-app")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-name --token-endpoint-auth-method --grant-types --redirect-uris --client-uri --logo-uri --tos-uri --policy-uri --scope --jwks-uri --jwks --contacts --extension --access-token-validity-seconds --refresh-token-validity-seconds --multi-tenant --secret --user-type " -- $cur) )
                        ;;
                    "get-app")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-id " -- $cur) )
                        ;;
                    "update-app")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-id --client-name --token-endpoint-auth-method --grant-types --redirect-uris --client-uri --logo-uri --tos-uri --policy-uri --scope --jwks-uri --jwks --contacts --extension --access-token-validity-seconds --refresh-token-validity-seconds --multi-tenant --secret --user-type " -- $cur) )
                        ;;
                    "delete-app")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-id " -- $cur) )
                        ;;
                    "get-apps")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "jdfusion")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-vpc-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "delete-vpc-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-vpcs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc " -- $cur) )
                        ;;
                    "get-vm-instances-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "delete-vm-instance-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-vm-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-vm-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vm " -- $cur) )
                        ;;
                    "stop-vm-instance-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "start-vm-instance-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "reboot-vm-instance-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-vpc-vserver-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --slbid " -- $cur) )
                        ;;
                    "create-vpc-vserver-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vserver-group " -- $cur) )
                        ;;
                    "get-vserver-groups-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "delete-vserver-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-cloud-infos")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --driver " -- $cur) )
                        ;;
                    "regist-cloud-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cloud " -- $cur) )
                        ;;
                    "get-cloud-info-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cloud-id " -- $cur) )
                        ;;
                    "unregist-cloud-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cloud-id " -- $cur) )
                        ;;
                    "valid-cloud-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cloud-id " -- $cur) )
                        ;;
                    "get-rds-databases-by-inst-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id " -- $cur) )
                        ;;
                    "create-rds-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id --database " -- $cur) )
                        ;;
                    "get-rds-database-by-inst-id-and-db-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id --db-name " -- $cur) )
                        ;;
                    "delete-rds-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id --db-name " -- $cur) )
                        ;;
                    "get-buckets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-bucket")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucket " -- $cur) )
                        ;;
                    "get-bucket-by-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "delete-bucket")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "get-bucket-files")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --marker " -- $cur) )
                        ;;
                    "get-vpc-slb-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "delete-vpc-slb-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-vpc-slbs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-vpc-slb")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --slb " -- $cur) )
                        ;;
                    "start-slb")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "stop-slb")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "delete-slbs-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --listener-port " -- $cur) )
                        ;;
                    "start-slb-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --listener-port " -- $cur) )
                        ;;
                    "stop-slb-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --listener-port " -- $cur) )
                        ;;
                    "get-rds-specification")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --engine " -- $cur) )
                        ;;
                    "get-vm-instance-types")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --az " -- $cur) )
                        ;;
                    "get-vpc-network-interface-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "delete-vpc-network-interface-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-vpc-network-interfaces")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vm-id " -- $cur) )
                        ;;
                    "create-vpc-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --net-interface " -- $cur) )
                        ;;
                    "attach-vpc-network-interface-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --attach " -- $cur) )
                        ;;
                    "detach-vpc-network-interface-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --detach " -- $cur) )
                        ;;
                    "get-disks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vm-id " -- $cur) )
                        ;;
                    "create-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk " -- $cur) )
                        ;;
                    "get-disk-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "remove-disk-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "attach-disk-to-vm-instance-by-disk-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --attach " -- $cur) )
                        ;;
                    "detach-disk-to-vm-instance-by-disk-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --detach " -- $cur) )
                        ;;
                    "get-rds-accounts-by-inst-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id " -- $cur) )
                        ;;
                    "create-rds-accounts")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id --account " -- $cur) )
                        ;;
                    "get-rds-accounts-by-inst-id-and-account-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id --account-name " -- $cur) )
                        ;;
                    "delete-rds-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id --account-name " -- $cur) )
                        ;;
                    "grant-rds-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id --account-name --db-privilege-info " -- $cur) )
                        ;;
                    "revoke-rds-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id --account-name --db-name " -- $cur) )
                        ;;
                    "grant-rds-accounts-by-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id --account-name --info " -- $cur) )
                        ;;
                    "get-vpc-eips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-vpc-eip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --allocate " -- $cur) )
                        ;;
                    "get-vpc-eip-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "delete-vpc-eip-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "associate-vpc-eip-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --associate " -- $cur) )
                        ;;
                    "disassociate-vpc-eip-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --unassociate " -- $cur) )
                        ;;
                    "get-task-info-history-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --task " -- $cur) )
                        ;;
                    "get-task-info-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --task --file-name " -- $cur) )
                        ;;
                    "get-transfer-tasks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-transfer-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --task " -- $cur) )
                        ;;
                    "get-transfer-task-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "edit-transfer-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --task " -- $cur) )
                        ;;
                    "delete-transfer-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "start-transfer-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "stop-transfer-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-transfer-task-progress")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-transfer-task-failed-files")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-vm-keypairs-by-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "delete-vm-keypair-by-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "get-vm-keypairs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-vm-keypair")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --keypair " -- $cur) )
                        ;;
                    "get-vpc-security-group-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "delete-vpc-security-group-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-vpc-security-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-vpc-security-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --security-group " -- $cur) )
                        ;;
                    "create-security-groups-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --sg-rule " -- $cur) )
                        ;;
                    "delete-security-groups-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --rule-type --protocol --from-port --to-port --nic-type --policy --priority --cidr-ip " -- $cur) )
                        ;;
                    "get-lb-http-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --slbid " -- $cur) )
                        ;;
                    "create-vpc-lbhttp-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --http-listener " -- $cur) )
                        ;;
                    "get-vm-images")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-source " -- $cur) )
                        ;;
                    "get-vpc-subnet-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "delete-vpc-subnet-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-vpc-subnets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-vpc-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet " -- $cur) )
                        ;;
                    "get-rds-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-rds-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance " -- $cur) )
                        ;;
                    "get-rds-by-inst-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id " -- $cur) )
                        ;;
                    "delete-rds-by-inst-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id " -- $cur) )
                        ;;
                    "get-deployments")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-deployment")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --deployment " -- $cur) )
                        ;;
                    "reverse-deployment")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --reverse " -- $cur) )
                        ;;
                    "get-deployments-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "edit-deployment")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --deployment " -- $cur) )
                        ;;
                    "delete-deployment")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "clone-deployment")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --deployment " -- $cur) )
                        ;;
                    "dryrun-deployment")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "apply-deployment")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --apply " -- $cur) )
                        ;;
                    "get-deployment-result")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-deployment-versions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-deployments-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --version_id " -- $cur) )
                        ;;
                    "rollback-deployments-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --version_id " -- $cur) )
                        ;;
                    "get-deployments-results-by-id-record")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --record " -- $cur) )
                        ;;
                    "get-regions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "get-regions-available-zones")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --region " -- $cur) )
                        ;;
                    "get-channels")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-channel")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --channel " -- $cur) )
                        ;;
                    "delete-channel")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "start-channel")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "stop-channel")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-datasources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-datasource")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --datasource " -- $cur) )
                        ;;
                    "delete-datasource")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "detection")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-site-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --name-or-addr --name --id --task-type --page-number --page-size --with-stats --with-deleted --time-interval --filters " -- $cur) )
                        ;;
                    "create-site-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --address --advance-checked --created-time --cycle --default-source --dns-option --enabled --ftp-option --hawkeye-id --http-option --id --is-deleted --name --pin --ping-option --pop3option --port --smtp-option --source --stats --task-type --tcp-option --udp-option --updated-time " -- $cur) )
                        ;;
                    "update-site-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --address --advance-checked --created-time --cycle --default-source --dns-option --enabled --ftp-option --hawkeye-id --http-option --id --is-deleted --name --pin --ping-option --pop3option --port --smtp-option --source --stats --task-type --tcp-option --udp-option --updated-time " -- $cur) )
                        ;;
                    "delete-site-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --filters " -- $cur) )
                        ;;
                    "enable-site-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --list " -- $cur) )
                        ;;
                    "validate-site-monitor-address")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --address " -- $cur) )
                        ;;
                    "get-site-monitor-data-points")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --id --start-time --end-time " -- $cur) )
                        ;;
                    "get-site-monitor-source")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "test-site-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --address --advance-checked --created-time --cycle --default-source --dns-option --enabled --ftp-option --hawkeye-id --http-option --id --is-deleted --name --pin --ping-option --pop3option --port --smtp-option --source --stats --task-type --tcp-option --udp-option --updated-time " -- $cur) )
                        ;;
                    "describe-agent-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --filters " -- $cur) )
                        ;;
                    "describe-metric-data-am")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --resource-id --start-time --end-time --time-interval " -- $cur) )
                        ;;
                    "create-probe-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --client-token --create-probe-task-spec " -- $cur) )
                        ;;
                    "delete-probe-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --probe-task-ids " -- $cur) )
                        ;;
                    "describe-probe-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --probe-task-id " -- $cur) )
                        ;;
                    "update-probe-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --probe-task-id --http-body --http-cookie --http-header --http-type --name --probes " -- $cur) )
                        ;;
                    "describe-probe-history")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --probe-task-id --probe-id --start-time --end-time " -- $cur) )
                        ;;
                    "discribe-probes")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --probe-task-id --filters " -- $cur) )
                        ;;
                    "probe-task-enable")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --enabled --task-id " -- $cur) )
                        ;;
                    "describe-probe-tasks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --name --type --time-interval --with-stats --with-deleted --enabled --filters " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "iotlink")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "card-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --iccid " -- $cur) )
                        ;;
                    "real-name-query-iot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --iccid " -- $cur) )
                        ;;
                    "gprs-status-by-imsi")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --imsi " -- $cur) )
                        ;;
                    "on-off-status-by-imsi")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --imsi " -- $cur) )
                        ;;
                    "life-status-by-imsi")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --imsi " -- $cur) )
                        ;;
                    "gprs-realtime-info-by-imsi")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --imsi " -- $cur) )
                        ;;
                    "gprs-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --iccid " -- $cur) )
                        ;;
                    "on-off-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --iccid " -- $cur) )
                        ;;
                    "life-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --iccid " -- $cur) )
                        ;;
                    "gprs-realtime-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --iccid " -- $cur) )
                        ;;
                    "open-iot-card")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --iccids " -- $cur) )
                        ;;
                    "close-iot-card")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --iccids " -- $cur) )
                        ;;
                    "open-iot-flow")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --iccids " -- $cur) )
                        ;;
                    "close-iot-flow")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --iccids " -- $cur) )
                        ;;
                    "search")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --request-type --request-param " -- $cur) )
                        ;;
                    "operate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --request-type --request-param " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "renewal")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "set-renewal")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --set-renewal-param " -- $cur) )
                        ;;
                    "query-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --query-instance-param " -- $cur) )
                        ;;
                    "renew-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --renew-instance-param " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "yunding")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "put-product-metric-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --app-code --service-code --region --resource-id --data-points " -- $cur) )
                        ;;
                    "put-product-metric-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --app-code --service-code --region --resource-id --data-points " -- $cur) )
                        ;;
                    "describe-subnets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --type --filters " -- $cur) )
                        ;;
                    "create-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --subnet-name --address-prefix --route-table-id --description --ip-mask-len " -- $cur) )
                        ;;
                    "describe-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id " -- $cur) )
                        ;;
                    "delete-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id " -- $cur) )
                        ;;
                    "assign-secondary-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --force --secondary-ips --secondary-ip-count --secondary-ip-mask-len --secondary-ip-address " -- $cur) )
                        ;;
                    "unassign-secondary-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --secondary-ips --secondary-cidrs " -- $cur) )
                        ;;
                    "describe-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id " -- $cur) )
                        ;;
                    "delete-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id " -- $cur) )
                        ;;
                    "describe-network-interfaces")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id --az --network-interface-name --primary-ip-address --secondary-ip-addresses --secondary-ip-count --security-groups --sanity-check --description " -- $cur) )
                        ;;
                    "describe-tasks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id " -- $cur) )
                        ;;
                    "describe-rds-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --type " -- $cur) )
                        ;;
                    "describe-rds-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-instance-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-rds-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-rds-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --ips " -- $cur) )
                        ;;
                    "describe-rds-accounts")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-rds-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --account-password " -- $cur) )
                        ;;
                    "delete-rds-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name " -- $cur) )
                        ;;
                    "grant-rds-privilege")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --account-privileges " -- $cur) )
                        ;;
                    "revoke-privilege")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --db-names " -- $cur) )
                        ;;
                    "describe-rds-databases")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --page-number --page-size " -- $cur) )
                        ;;
                    "create-rds-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --character-set-name " -- $cur) )
                        ;;
                    "delete-rds-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name " -- $cur) )
                        ;;
                    "describe-yd-rds-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --app-key " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "containerregistry")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "create-repository")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --repository-name --description " -- $cur) )
                        ;;
                    "describe-repositories")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters --registry-name --page-number --page-size " -- $cur) )
                        ;;
                    "delete-repository")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --repository-name --force " -- $cur) )
                        ;;
                    "check-repository-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --repository-name " -- $cur) )
                        ;;
                    "describe-images")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters --page-number --page-size " -- $cur) )
                        ;;
                    "delete-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --repository-name --image-digest --image-tag --image-tag-status " -- $cur) )
                        ;;
                    "describe-registries")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-registry")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --description " -- $cur) )
                        ;;
                    "describe-registry")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name " -- $cur) )
                        ;;
                    "delete-registry")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name " -- $cur) )
                        ;;
                    "check-registry-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name " -- $cur) )
                        ;;
                    "describe-quotas")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters " -- $cur) )
                        ;;
                    "get-authorization-token")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --expired-after-hours " -- $cur) )
                        ;;
                    "describe-authorization-tokens")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --filters --page-number --page-size " -- $cur) )
                        ;;
                    "release-authorization-token")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --authorization-token --force-all " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "partner")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "query-my-customer-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --customer-pin --alias-name --login-name --start-rel-time --end-rel-time --page-index --page-size " -- $cur) )
                        ;;
                    "get-total-consumption")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time " -- $cur) )
                        ;;
                    "get-each-consumption")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --pin --page-size --page-index " -- $cur) )
                        ;;
                    "describe-customer-bill-by-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pin --start-time --end-time --page-size --page-index " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "lb")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-url-maps")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-url-map")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --url-map-name --load-balancer-id --description " -- $cur) )
                        ;;
                    "describe-url-map")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --url-map-id " -- $cur) )
                        ;;
                    "update-url-map")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --url-map-id --description --url-map-name " -- $cur) )
                        ;;
                    "delete-url-map")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --url-map-id " -- $cur) )
                        ;;
                    "add-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --url-map-id --rule-specs " -- $cur) )
                        ;;
                    "update-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --url-map-id --rule-update-specs " -- $cur) )
                        ;;
                    "delete-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --url-map-id --rule-ids " -- $cur) )
                        ;;
                    "describe-target-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-target-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --target-group-name --load-balancer-id --description --type " -- $cur) )
                        ;;
                    "describe-target-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --target-group-id " -- $cur) )
                        ;;
                    "update-target-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --target-group-id --description --target-group-name " -- $cur) )
                        ;;
                    "delete-target-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --target-group-id " -- $cur) )
                        ;;
                    "register-targets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --target-group-id --target-specs " -- $cur) )
                        ;;
                    "de-register-targets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --target-group-id --target-ids " -- $cur) )
                        ;;
                    "update-targets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --target-group-id --target-update-specs " -- $cur) )
                        ;;
                    "describe-targets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --target-group-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "describe-backends")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-backend")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backend-name --load-balancer-id --protocol --port --health-check-spec --algorithm --target-group-ids --ag-ids --proxy-protocol --description --session-stickiness --session-sticky-timeout --connection-draining-seconds --http-cookie-expire-seconds --http-forwarded-protocol --http-forwarded-port --http-forwarded-host --http-forwarded-vip --http-forwarded-client-port " -- $cur) )
                        ;;
                    "describe-backend")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backend-id " -- $cur) )
                        ;;
                    "update-backend")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backend-id --backend-name --health-check-spec --algorithm --target-group-ids --ag-ids --proxy-protocol --description --session-stickiness --session-sticky-timeout --connection-draining-seconds --http-cookie-expire-seconds --http-forwarded-protocol --http-forwarded-port --http-forwarded-host --http-forwarded-vip --http-forwarded-client-port --close-health-check " -- $cur) )
                        ;;
                    "delete-backend")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backend-id " -- $cur) )
                        ;;
                    "describe-target-health")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backend-id " -- $cur) )
                        ;;
                    "describe-load-balancers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --tags " -- $cur) )
                        ;;
                    "create-load-balancer")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-name --subnet-id --type --azs --charge-spec --elastic-ip --private-ip-address --security-group-ids --description --delete-protection --user-tags " -- $cur) )
                        ;;
                    "describe-load-balancer")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id " -- $cur) )
                        ;;
                    "update-load-balancer")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id --load-balancer-name --action --description --domain-enable --delete-protection --private-ip-address " -- $cur) )
                        ;;
                    "delete-load-balancer")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id " -- $cur) )
                        ;;
                    "associate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id --elastic-ip-id " -- $cur) )
                        ;;
                    "disassociate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id --elastic-ip-id " -- $cur) )
                        ;;
                    "associate-security-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id --security-group-ids " -- $cur) )
                        ;;
                    "disassociate-security-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id --security-group-ids " -- $cur) )
                        ;;
                    "describe-listeners")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --listener-name --protocol --hsts-enable --hsts-max-age --port --backend-id --load-balancer-id --url-map-id --action --certificate-specs --connection-idle-time-seconds --description " -- $cur) )
                        ;;
                    "describe-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --listener-id " -- $cur) )
                        ;;
                    "update-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --listener-id --listener-name --status --hsts-enable --hsts-max-age --certificate-specs --connection-idle-time-seconds --backend-id --url-map-id --description " -- $cur) )
                        ;;
                    "delete-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --listener-id " -- $cur) )
                        ;;
                    "add-listener-certificates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --listener-id --certificates " -- $cur) )
                        ;;
                    "update-listener-certificates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --listener-id --certificates " -- $cur) )
                        ;;
                    "delete-listener-certificates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --listener-id --certificate-bind-ids " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "industrydata")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-large-screen-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --region --industry --start-date --end-date --first-index --second-index " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "rds")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-binlogs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size --start-time --end-time " -- $cur) )
                        ;;
                    "describe-binlog-download-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --binlog-backup-id --seconds " -- $cur) )
                        ;;
                    "clear-binlogs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-accounts")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --account-password --notes " -- $cur) )
                        ;;
                    "describe-account-privilege")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name " -- $cur) )
                        ;;
                    "delete-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name " -- $cur) )
                        ;;
                    "grant-privilege")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --account-privileges " -- $cur) )
                        ;;
                    "revoke-privilege")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --db-names " -- $cur) )
                        ;;
                    "reset-password")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --account-password " -- $cur) )
                        ;;
                    "create-super-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --account-password " -- $cur) )
                        ;;
                    "grant-account-privilege")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --database-privileges --global-privileges " -- $cur) )
                        ;;
                    "describe-accounts-for-ops")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "create-account-for-ops")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --expired-time " -- $cur) )
                        ;;
                    "modify-account-for-ops")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --expired-time --global-privileges " -- $cur) )
                        ;;
                    "describe-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --tag-filters " -- $cur) )
                        ;;
                    "create-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-spec " -- $cur) )
                        ;;
                    "describe-instance-attributes")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "delete-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-backup-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-backup-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --start-window --binlog-retention-period --binlog-usage-limit --binlog-space-protection --retention-period --cycle-mode " -- $cur) )
                        ;;
                    "enable-enhanced-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-backup-space")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-backup-charge")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --engine " -- $cur) )
                        ;;
                    "modify-instance-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --instance-name " -- $cur) )
                        ;;
                    "failover-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "reboot-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --reboot-master --reboot-slave --force " -- $cur) )
                        ;;
                    "enable-internet-access")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "disable-internet-access")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "restore-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --backup-id " -- $cur) )
                        ;;
                    "create-instance-from-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backup-id --engine --instance-spec " -- $cur) )
                        ;;
                    "modify-instance-spec")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --new-instance-class --new-instance-storage-gb --new-instance-storage-type --storage-encrypted --subnet-id --effective-time --postpone-time " -- $cur) )
                        ;;
                    "create-instance-by-time")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --restore-time --instance-spec " -- $cur) )
                        ;;
                    "create-roinstance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --instance-name --instance-class --instance-storage-type --instance-storage-gb --az-id --vpc-id --subnet-id --parameter-group --storage-encrypted --count --ro-instance-proxy --tag-spec " -- $cur) )
                        ;;
                    "modify-connection-mode")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --connection-mode " -- $cur) )
                        ;;
                    "describe-latest-restore-time")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-parameter-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --parameter-group-id " -- $cur) )
                        ;;
                    "exchange-instance-dns")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --target-instance-id " -- $cur) )
                        ;;
                    "modify-instance-az")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --new-az-id " -- $cur) )
                        ;;
                    "describe-ssl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "enable-ssl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "disable-ssl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "restore-instance-by-time")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --restore-time --restore-schema " -- $cur) )
                        ;;
                    "modify-active-directory")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --ad-resource-id --force-restart " -- $cur) )
                        ;;
                    "modify-instance-maintain-time")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --maintain-time --maintain-period " -- $cur) )
                        ;;
                    "describe-instance-maintain-time")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "switch-for-modifying-instance-spec")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-upgrade-versions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-upgrade-plan")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "upgrade-engine-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --upgrade-schedule --new-version " -- $cur) )
                        ;;
                    "describe-import-files")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "get-upload-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "set-import-file-shared")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --file-name --shared " -- $cur) )
                        ;;
                    "delete-import-file")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --file-name --shared-file-gid " -- $cur) )
                        ;;
                    "describe-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "update-log-download-urlinternal")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --log-id --seconds " -- $cur) )
                        ;;
                    "describe-log-download-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --log-id --seconds " -- $cur) )
                        ;;
                    "describe-databases")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --page-number --page-size " -- $cur) )
                        ;;
                    "create-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --character-set-name " -- $cur) )
                        ;;
                    "delete-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name " -- $cur) )
                        ;;
                    "restore-database-from-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --backup-id --backup-file-name " -- $cur) )
                        ;;
                    "restore-database-from-file")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --shared-file-gid --file-name " -- $cur) )
                        ;;
                    "restore-database-from-oss")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --oss-url " -- $cur) )
                        ;;
                    "modify-database-comment")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --comment " -- $cur) )
                        ;;
                    "enable-intercept")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "disable-intercept")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-intercept-result")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "describe-intercept")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-read-write-proxies")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "create-read-write-proxy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --delay-threshold --load-balancer-policy --health-check-spec " -- $cur) )
                        ;;
                    "describe-read-write-proxy-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --read-write-proxy-id " -- $cur) )
                        ;;
                    "delete-read-write-proxy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --read-write-proxy-id " -- $cur) )
                        ;;
                    "enable-read-write-proxy-internet-access")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --read-write-proxy-id " -- $cur) )
                        ;;
                    "disable-read-write-proxy-internet-access")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --read-write-proxy-id " -- $cur) )
                        ;;
                    "modify-read-write-proxy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --read-write-proxy-id --delay-threshold --load-balancer-policy --health-check-spec " -- $cur) )
                        ;;
                    "delete-parameter-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --parameter-group-id " -- $cur) )
                        ;;
                    "modify-parameter-group-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --parameter-group-id --parameter-group-name --description " -- $cur) )
                        ;;
                    "describe-parameter-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-parameter-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --engine --engine-version --parameter-group-name --description " -- $cur) )
                        ;;
                    "describe-parameter-group-parameters")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --parameter-group-id " -- $cur) )
                        ;;
                    "modify-parameter-group-parameters")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --parameter-group-id --parameters " -- $cur) )
                        ;;
                    "describe-parameter-modify-records")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --parameter-group-id --page-number --page-size --start-time --end-time " -- $cur) )
                        ;;
                    "copy-parameter-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --parameter-group-id --parameter-group-name --description " -- $cur) )
                        ;;
                    "describe-parameter-group-attached-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --parameter-group-id --page-number --page-size " -- $cur) )
                        ;;
                    "describe-backups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --auto --backup-type-filter --db-name-filter --backup-time-range-start-filter --backup-time-range-end-filter --page-number --page-size " -- $cur) )
                        ;;
                    "create-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --backup-spec " -- $cur) )
                        ;;
                    "delete-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backup-id " -- $cur) )
                        ;;
                    "describe-backup-download-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backup-id --file-name --url-expiration-second " -- $cur) )
                        ;;
                    "describe-tables")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --page-number --page-size " -- $cur) )
                        ;;
                    "describe-tde")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "enable-tde")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --ips " -- $cur) )
                        ;;
                    "describe-audit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "create-audit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --enabled " -- $cur) )
                        ;;
                    "delete-audit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-audit-options")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --name " -- $cur) )
                        ;;
                    "modify-audit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --add --drop " -- $cur) )
                        ;;
                    "describe-audit-files")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-audit-download-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --file-name " -- $cur) )
                        ;;
                    "enable-audit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "disable-audit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-audit-result")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --start-time --end-time --db-name --account-name --page-number --page-size --filters " -- $cur) )
                        ;;
                    "describe-azs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --engine " -- $cur) )
                        ;;
                    "alter-table-with-online-ddl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --database --table --command " -- $cur) )
                        ;;
                    "describe-parameters")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-parameters")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --parameters " -- $cur) )
                        ;;
                    "describe-backup-synchronicities")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-backup-synchronicity")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --dest-region " -- $cur) )
                        ;;
                    "delete-backup-synchronicity")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --service-id " -- $cur) )
                        ;;
                    "create-instance-by-time-in-cross-region")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --restore-time --service-id --instance-spec " -- $cur) )
                        ;;
                    "describe-error-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-privilege")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --engine --instance-id --all-admin-privileges " -- $cur) )
                        ;;
                    "describe-index-performance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --query-type --db --page-number --page-size " -- $cur) )
                        ;;
                    "describe-query-performance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --query-type --threshold --page-number --page-size " -- $cur) )
                        ;;
                    "describe-slow-log-attributes")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --start-time --end-time --db-name --page-number --page-size --sorts --filters " -- $cur) )
                        ;;
                    "describe-slow-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --start-time --end-time --db-name --page-number --page-size --filters --sorts " -- $cur) )
                        ;;
                    "describe-active-query-performance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db --threshold --page-number --page-size " -- $cur) )
                        ;;
                    "describe-error-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --start-time --end-time --db-name --page-number --page-size " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "kubernetes")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-node-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --tags --filters " -- $cur) )
                        ;;
                    "create-node-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --description --cluster-id --node-config --azs --initial-node-count --vpc-id --node-cidr --auto-repair --ca-config --node-group-network " -- $cur) )
                        ;;
                    "describe-node-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --node-group-id " -- $cur) )
                        ;;
                    "modify-node-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --node-group-id --name --description " -- $cur) )
                        ;;
                    "delete-node-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --node-group-id " -- $cur) )
                        ;;
                    "set-node-group-size")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --node-group-id --expect-count " -- $cur) )
                        ;;
                    "set-auto-repair")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --node-group-id --enabled " -- $cur) )
                        ;;
                    "rollback-node-group-upgrade")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --node-group-id " -- $cur) )
                        ;;
                    "set-node-group-ca")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --node-group-id --ca-config " -- $cur) )
                        ;;
                    "delete-node-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --node-group-id --instance-ids " -- $cur) )
                        ;;
                    "describe-server-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-versions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --master-version " -- $cur) )
                        ;;
                    "describe-node-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --node-version " -- $cur) )
                        ;;
                    "describe-upgradable-master-versions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id " -- $cur) )
                        ;;
                    "describe-upgradable-node-versions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id --node-group-ids " -- $cur) )
                        ;;
                    "describe-quotas")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters " -- $cur) )
                        ;;
                    "describe-clusters")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-cluster")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --description --basic-auth --client-certificate --version --azs --node-group --master-cidr --access-key --secret-key --user-metrics --addons-config " -- $cur) )
                        ;;
                    "describe-cluster")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id " -- $cur) )
                        ;;
                    "modify-cluster")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id --name --description " -- $cur) )
                        ;;
                    "delete-cluster")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id " -- $cur) )
                        ;;
                    "set-user-metrics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id --enabled " -- $cur) )
                        ;;
                    "abort-upgrade")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id " -- $cur) )
                        ;;
                    "describe-progress")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id --node-group-ids " -- $cur) )
                        ;;
                    "set-auto-upgrade")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id --auto-upgrade --maintenance-window " -- $cur) )
                        ;;
                    "upgrade-cluster")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id --scope --node-group-ids --version " -- $cur) )
                        ;;
                    "set-addons")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id --addons-config " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "ipanti")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-forward-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size --search-type --search-value --sorts " -- $cur) )
                        ;;
                    "create-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-spec " -- $cur) )
                        ;;
                    "create-forward-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-spec-list " -- $cur) )
                        ;;
                    "describe-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "modify-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id --forward-rule-spec " -- $cur) )
                        ;;
                    "delete-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "switch-forward-rule-protect")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "switch-forward-rule-origin")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "describe-protection-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "modify-protection-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id --forward-protection-rule-spec " -- $cur) )
                        ;;
                    "describe-geo-areas")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-black-list-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "modify-black-list-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id --modify-spec " -- $cur) )
                        ;;
                    "enable-black-list-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "disable-black-list-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "describe-white-list-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "modify-white-list-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id --modify-spec " -- $cur) )
                        ;;
                    "enable-white-list-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "disable-white-list-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "describe-ddo-sgraph")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --instance-id --service-ip " -- $cur) )
                        ;;
                    "describe-fwd-graph")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --instance-id " -- $cur) )
                        ;;
                    "describe-business-graph")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --instance-id --service-ip " -- $cur) )
                        ;;
                    "describe-ccgraph")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --instance-id --sub-domain " -- $cur) )
                        ;;
                    "describe-status-graph")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --instance-id --sub-domain " -- $cur) )
                        ;;
                    "describe-conn-stat-graph")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --instance-id --service-ip " -- $cur) )
                        ;;
                    "describe-ddo-sattack-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --start-time --end-time --instance-id " -- $cur) )
                        ;;
                    "describe-ddo-sip-attack-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --start-time --end-time --instance-id --service-ip " -- $cur) )
                        ;;
                    "describe-ccattack-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --start-time --end-time --instance-id " -- $cur) )
                        ;;
                    "describe-ccattack-log-details")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --start-time --end-time --instance-id --sub-domain --attack-id " -- $cur) )
                        ;;
                    "describe-attack-statistics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --instance-id --service-ip --type " -- $cur) )
                        ;;
                    "describe-attack-type-count")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --instance-id --service-ip " -- $cur) )
                        ;;
                    "describe-dispatch-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size --name --inner-ip --service-ip " -- $cur) )
                        ;;
                    "create-dispatch-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --create-dispatch-rule-spec " -- $cur) )
                        ;;
                    "create-dispatch-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --dispatch-rule-spec-list " -- $cur) )
                        ;;
                    "modify-dispatch-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --dispatch-rule-id --modify-dispatch-rule-spec " -- $cur) )
                        ;;
                    "delete-dispatch-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --dispatch-rule-id " -- $cur) )
                        ;;
                    "switch-dispatch-rule-protect")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --dispatch-rule-id " -- $cur) )
                        ;;
                    "switch-dispatch-rule-origin")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --dispatch-rule-id " -- $cur) )
                        ;;
                    "describe-instance-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-instance-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --instance-acl-spec " -- $cur) )
                        ;;
                    "recover-instance-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-custom-pages")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --status " -- $cur) )
                        ;;
                    "create-custom-page")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --custom-page-spec " -- $cur) )
                        ;;
                    "modify-custom-page")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-id --custom-page-spec " -- $cur) )
                        ;;
                    "delete-custom-page")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-id " -- $cur) )
                        ;;
                    "modify-instance-custom-page")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-id " -- $cur) )
                        ;;
                    "modify-instance-custom-page-default")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "enable-instance-custom-page")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "disable-instance-custom-page")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --name " -- $cur) )
                        ;;
                    "create-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --create-instance-spec --auto-renewal-spec --auto-pay " -- $cur) )
                        ;;
                    "describe-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-instance-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --rename-instance-spec " -- $cur) )
                        ;;
                    "modify-epb")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --modify-instance-epbspec " -- $cur) )
                        ;;
                    "describe-alarm-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-alarm-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --alarm-config-spec " -- $cur) )
                        ;;
                    "describe-origin-white-ip-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-service-ip-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size " -- $cur) )
                        ;;
                    "describe-instance-id-by-resource-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --resource-id " -- $cur) )
                        ;;
                    "describe-name-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --name --page-number --page-size " -- $cur) )
                        ;;
                    "describe-protection-statistics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-protection-outline")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "check-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "describe-vpc-ip-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size " -- $cur) )
                        ;;
                    "describe-cps-ip-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size " -- $cur) )
                        ;;
                    "describe-ccs-ip-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size " -- $cur) )
                        ;;
                    "describe-ip-sets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-ip-set")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --ip-set-spec " -- $cur) )
                        ;;
                    "describe-ip-set")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --ip-set-id " -- $cur) )
                        ;;
                    "delete-ip-set")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --ip-set-id " -- $cur) )
                        ;;
                    "describe-ip-set-usage")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-web-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size --search-type --search-value " -- $cur) )
                        ;;
                    "create-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-spec " -- $cur) )
                        ;;
                    "create-web-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-spec-list " -- $cur) )
                        ;;
                    "describe-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "modify-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-rule-spec " -- $cur) )
                        ;;
                    "delete-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "bind-cert")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --cert-id " -- $cur) )
                        ;;
                    "switch-web-rule-protect")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "switch-web-rule-origin")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "enable-web-rule-cc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "disable-web-rule-cc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "enable-web-rule-ccobserver-mode")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "disable-web-rule-ccobserver-mode")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "describe-js-pages-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-js-page-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --js-page-spec " -- $cur) )
                        ;;
                    "create-js-pages-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --js-pages-spec " -- $cur) )
                        ;;
                    "modify-js-page-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --js-page-id --js-page-spec " -- $cur) )
                        ;;
                    "delete-js-page-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --js-page-id " -- $cur) )
                        ;;
                    "disable-web-rule-js-page")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "enable-web-rule-js-page")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "modify-web-rule-js-page-to-all")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "modify-web-rule-js-page-to-custom")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "describe-ccprotection-rules-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "create-ccprotection-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --cc-protection-rule-spec " -- $cur) )
                        ;;
                    "describe-ccprotection-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --cc-protection-rule-id " -- $cur) )
                        ;;
                    "modify-ccprotection-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --cc-protection-rule-id --cc-protection-rule-spec " -- $cur) )
                        ;;
                    "delete-ccprotection-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --cc-protection-rule-id " -- $cur) )
                        ;;
                    "enable-ccprotection-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --cc-protection-rule-id " -- $cur) )
                        ;;
                    "disable-ccprotection-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --cc-protection-rule-id " -- $cur) )
                        ;;
                    "enable-web-rule-ccprotection-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "disable-web-rule-ccprotection-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "describe-ccprotection-config-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "modify-ccprotection-config-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --cc-protection-config-spec " -- $cur) )
                        ;;
                    "describe-ccprotection-default-config-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "modify-cert-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --cert-info-modify-spec " -- $cur) )
                        ;;
                    "describe-web-rule-black-list-usage")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "describe-black-list-rules-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-black-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-black-list-rule-spec " -- $cur) )
                        ;;
                    "describe-black-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-black-list-rule-id " -- $cur) )
                        ;;
                    "modify-black-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-black-list-rule-id --web-black-list-rule-spec " -- $cur) )
                        ;;
                    "delete-black-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-black-list-rule-id " -- $cur) )
                        ;;
                    "enable-web-rule-black-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "enable-black-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-black-list-rule-id " -- $cur) )
                        ;;
                    "disable-web-rule-black-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "disable-black-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-black-list-rule-id " -- $cur) )
                        ;;
                    "describe-web-rule-white-list-usage")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "describe-white-list-rules-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-white-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-white-list-rule-spec " -- $cur) )
                        ;;
                    "describe-white-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-white-list-rule-id " -- $cur) )
                        ;;
                    "modify-white-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-white-list-rule-id --web-white-list-rule-spec " -- $cur) )
                        ;;
                    "delete-white-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-white-list-rule-id " -- $cur) )
                        ;;
                    "enable-web-rule-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "enable-white-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-white-list-rule-id " -- $cur) )
                        ;;
                    "disable-web-rule-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "disable-white-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-white-list-rule-id " -- $cur) )
                        ;;
                    "describe-web-rule-black-list-geo-areas")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-web-rule-white-list-geo-areas")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-web-rule-rsgeo-areas")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "jmr")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "idata-cluster")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --data-center " -- $cur) )
                        ;;
                    "get-software-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --version " -- $cur) )
                        ;;
                    "get-jmr-version-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "monitor-label-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id " -- $cur) )
                        ;;
                    "describe-cluster")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id " -- $cur) )
                        ;;
                    "describe-clusters")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --data-center --status --cluster-name --order-by --page-num --page-size " -- $cur) )
                        ;;
                    "release-cluster")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id " -- $cur) )
                        ;;
                    "cluster-expansion")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-expansion --client-token " -- $cur) )
                        ;;
                    "cluster-reduction")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-reduction --client-token " -- $cur) )
                        ;;
                    "create-cluster")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-spec --client-token " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "deploy")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-apps")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "describe-app")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --app-id " -- $cur) )
                        ;;
                    "describe-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "describe-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --group-id " -- $cur) )
                        ;;
                    "create-deploy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --group-id --desc --deploy-source --deploy-cmd --cmd-source --cmd-type --product-type --download-url --md5 --compile-project --compile-series --oss-space --oss-dir --file-type " -- $cur) )
                        ;;
                    "describe-deploy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --deploy-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "sop")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-sensitive-op-setting")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --action " -- $cur) )
                        ;;
                    "get-security-token")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --get-security-token-info " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "function")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "list-function")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --list-all --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-function")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --description --entrance --memory --run-time --over-time --version --code --environment --log-set-id --log-topic-id --vpc-id --subnet-id " -- $cur) )
                        ;;
                    "get-function")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name " -- $cur) )
                        ;;
                    "update-function")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --description --entrance --memory --run-time --over-time --version --code --environment --log-set-id --log-topic-id --vpc-id --subnet-id " -- $cur) )
                        ;;
                    "delete-function")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name " -- $cur) )
                        ;;
                    "invoke")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --version-name --event " -- $cur) )
                        ;;
                    "async-invoke")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --version-name --event " -- $cur) )
                        ;;
                    "list-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name " -- $cur) )
                        ;;
                    "create-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --description " -- $cur) )
                        ;;
                    "get-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --version-name " -- $cur) )
                        ;;
                    "delete-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --version-name " -- $cur) )
                        ;;
                    "list-alias")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name " -- $cur) )
                        ;;
                    "create-alias")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --alias-name --description --version " -- $cur) )
                        ;;
                    "get-alias")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --alias-name " -- $cur) )
                        ;;
                    "update-alias")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --alias-name --description --version " -- $cur) )
                        ;;
                    "delete-alias")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --alias-name " -- $cur) )
                        ;;
                    "get-trigger")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --version-name --trigger-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "jdccs")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-metrics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "describe-metric-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --metric --resource-id --start-time --end-time --time-interval --ip --port " -- $cur) )
                        ;;
                    "last-downsample")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --metric --resource-id " -- $cur) )
                        ;;
                    "describe-bandwidth-traffics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --page-number --page-size --bandwidth-name " -- $cur) )
                        ;;
                    "describe-bandwidth-traffic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --bandwidth-id " -- $cur) )
                        ;;
                    "describe-traffic-sampling")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --resource-id --start-time --end-time " -- $cur) )
                        ;;
                    "describe-open-devices")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "describe-open-devices-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --device-codes --device-type " -- $cur) )
                        ;;
                    "describe-rangetime-cabinet-current")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --resource-id --start-time --end-time --time-interval " -- $cur) )
                        ;;
                    "describe-realtime-cabinet-current")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --resource-id " -- $cur) )
                        ;;
                    "describe-alarms")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --resource-type --resource-id --idc --status --filters " -- $cur) )
                        ;;
                    "create-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --resource-type --resource-id --name --metric --period --statistic-method --operator --threshold --times --notice-period --status --notice-method --notice-obj --user-id --group-id " -- $cur) )
                        ;;
                    "describe-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --alarm-id " -- $cur) )
                        ;;
                    "update-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --alarm-id --name --metric --period --statistic-method --operator --threshold --times --notice-period --status --notice-method --user-id --group-id " -- $cur) )
                        ;;
                    "delete-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --alarm-id " -- $cur) )
                        ;;
                    "describe-alarm-history")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --alarm-id --idc --start-time --end-time " -- $cur) )
                        ;;
                    "switch-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --alarm-id --status " -- $cur) )
                        ;;
                    "describe-tickets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --type --ticket-type-name --status --ticket-no --ticket-template-name --description --start-time --end-time --filters --sorts " -- $cur) )
                        ;;
                    "describe-ticket")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --ticket-no " -- $cur) )
                        ;;
                    "create-general-services-ticket")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --phone --email --idc --is-external-idc --count --external-idc-address --external-idc-contact-person --external-idc-contact-phone --remarks --attach " -- $cur) )
                        ;;
                    "describe-idcs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --all --include-external-idc " -- $cur) )
                        ;;
                    "describe-rooms")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --page-number --page-size --all --filters " -- $cur) )
                        ;;
                    "describe-cabinets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --page-number --page-size --cabinet-type --cabinet-open-status --cabinet-no --filters --sorts " -- $cur) )
                        ;;
                    "describe-cabinet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --cabinet-id " -- $cur) )
                        ;;
                    "describe-devices")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --page-number --page-size --cabinet-id --device-type --asset-status --asset-belong --device-no --sn-no --filters --sorts " -- $cur) )
                        ;;
                    "describe-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --device-id " -- $cur) )
                        ;;
                    "describe-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --page-number --page-size --line-type --status --cidr-addr --filters --sorts " -- $cur) )
                        ;;
                    "describe-bandwidths")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --page-number --page-size --line-type --charge-type --bandwidth-name --related-ip --filters --sorts " -- $cur) )
                        ;;
                    "describe-bandwidth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --bandwidth-id " -- $cur) )
                        ;;
                    "describe-idc-overview")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "logs")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-collect-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --collect-info-uid " -- $cur) )
                        ;;
                    "update-collect-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --collect-info-uid --ag-resource --enabled --filter-enabled --log-custom-target --log-custom-target-conf --log-file --log-filters --log-path --logtopic-enabled --regexp-str --resource-mode --resource-type --resources --tag-resource " -- $cur) )
                        ;;
                    "describe-collect-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --collect-info-uid --page-number --page-size " -- $cur) )
                        ;;
                    "update-collect-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --collect-info-uid --action --resources " -- $cur) )
                        ;;
                    "create-collect-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logtopic-uid --ag-resource --app-code --enabled --filter-enabled --log-custom-target --log-custom-target-conf --log-file --log-filters --log-path --logtopic-enabled --regexp-str --resource-mode --resource-type --resources --service-code --tag-resource --template-uid " -- $cur) )
                        ;;
                    "create-parser")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logtopic-uid --parser-fields --parser-mode --parser-pattern --parser-sample --pipelines " -- $cur) )
                        ;;
                    "describe-parser")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logtopic-uid " -- $cur) )
                        ;;
                    "update-parser")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logtopic-uid --parser-fields --parser-mode --parser-pattern --parser-sample --pipelines " -- $cur) )
                        ;;
                    "validate-parser")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --parser-mode --parser-pattern --parser-sample --pipelines " -- $cur) )
                        ;;
                    "histograms")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid --action --expr --case-sensitive --start-time --end-time " -- $cur) )
                        ;;
                    "get-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid --task-id --expr --start-time --end-time --sort --filters " -- $cur) )
                        ;;
                    "search")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid --action --expr --case-sensitive --start-time --end-time --page-number --page-size --sort --filters " -- $cur) )
                        ;;
                    "describe-logtopics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --page-number --page-size --name --app-name " -- $cur) )
                        ;;
                    "create-logtopic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --name --description " -- $cur) )
                        ;;
                    "delete-logtopic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uids " -- $cur) )
                        ;;
                    "describe-logtopic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logtopic-uid " -- $cur) )
                        ;;
                    "update-logtopic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logtopic-uid --description " -- $cur) )
                        ;;
                    "test-metric-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid --aggregate --content --data-field --filter-content --filter-open --filter-type --metric --setting-type --sql-spec " -- $cur) )
                        ;;
                    "describe-metric-tasks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid --page-number --page-size " -- $cur) )
                        ;;
                    "create-metric-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid --aggregate --custom-unit --data-field --filter-content --filter-open --filter-type --interval --metric --name --setting-type --sql-spec --unit " -- $cur) )
                        ;;
                    "describe-metric-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid --logmetrictask-uid " -- $cur) )
                        ;;
                    "update-metric-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid --logmetrictask-uid --aggregate --custom-unit --data-field --filter-content --filter-open --filter-type --metric --name --setting-type --sql-spec --unit " -- $cur) )
                        ;;
                    "delete-metric-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid --logmetrictask-uid " -- $cur) )
                        ;;
                    "create-parser")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logtopic-uid --parser-fields --parser-mode --parser-pattern --parser-sample --pipelines " -- $cur) )
                        ;;
                    "describe-subscribe")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid " -- $cur) )
                        ;;
                    "create-subscribe")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid " -- $cur) )
                        ;;
                    "update-subscribe")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid --status " -- $cur) )
                        ;;
                    "describe-logsets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --name " -- $cur) )
                        ;;
                    "create-logset")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --description --life-cycle " -- $cur) )
                        ;;
                    "describe-logset")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid " -- $cur) )
                        ;;
                    "update-logset")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --description --life-cycle " -- $cur) )
                        ;;
                    "delete-logset")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uids " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "cps")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-ipv6address")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ipv6address-id " -- $cur) )
                        ;;
                    "describe-ipv6addresses")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --ipv6gateway-id --ipv6address --enable-internet --filters " -- $cur) )
                        ;;
                    "assign-ipv6addresses-bandwidth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --ipv6address-spec " -- $cur) )
                        ;;
                    "modify-ipv6address-bandwidth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ipv6address-id --client-token --bandwidth " -- $cur) )
                        ;;
                    "describe-certs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --name --filters " -- $cur) )
                        ;;
                    "create-cert")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --cert-spec " -- $cur) )
                        ;;
                    "describe-cert")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cert-id " -- $cur) )
                        ;;
                    "remove-cert")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cert-id " -- $cur) )
                        ;;
                    "modify-cert")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cert-id --name " -- $cur) )
                        ;;
                    "describe-alias-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --subnet-id --instance-id --cidr --filters " -- $cur) )
                        ;;
                    "create-alias-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --alias-ip-spec " -- $cur) )
                        ;;
                    "delete-alias-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --alias-ip-id --client-token " -- $cur) )
                        ;;
                    "describe-secondary-cidrs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id " -- $cur) )
                        ;;
                    "create-secondary-cidr")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --secondary-cidr-spec " -- $cur) )
                        ;;
                    "delete-secondary-cidr")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --secondary-cidr-id --client-token " -- $cur) )
                        ;;
                    "describe-elastic-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --status --include-lb --charge-mode --instance-id --subnet-id --filters " -- $cur) )
                        ;;
                    "apply-elastic-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --elastic-ip-spec " -- $cur) )
                        ;;
                    "describe-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --elastic-ip-id " -- $cur) )
                        ;;
                    "modify-elastic-ip-bandwidth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --elastic-ip-id --client-token --bandwidth " -- $cur) )
                        ;;
                    "describe-elastic-ip-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --elastic-ip-id " -- $cur) )
                        ;;
                    "describe-server-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --name --load-balancer-id --filters " -- $cur) )
                        ;;
                    "create-server-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --server-group-spec " -- $cur) )
                        ;;
                    "describe-server-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --server-group-id " -- $cur) )
                        ;;
                    "modify-server-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --server-group-id --name " -- $cur) )
                        ;;
                    "delete-server-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --server-group-id " -- $cur) )
                        ;;
                    "describe-keypairs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --name --filters " -- $cur) )
                        ;;
                    "create-keypairs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --name " -- $cur) )
                        ;;
                    "import-keypairs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --name --public-key " -- $cur) )
                        ;;
                    "describe-keypair")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --keypair-id " -- $cur) )
                        ;;
                    "delete-keypairs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --keypair-id " -- $cur) )
                        ;;
                    "describe-load-balancers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --status --name --vpc-id --bind-eip --filters " -- $cur) )
                        ;;
                    "create-load-balancer")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --load-balancer-spec " -- $cur) )
                        ;;
                    "modify-load-balancer")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id --name --description " -- $cur) )
                        ;;
                    "describe-load-balancer")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id " -- $cur) )
                        ;;
                    "start-load-balancer")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id --client-token " -- $cur) )
                        ;;
                    "stop-load-balancer")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id --client-token " -- $cur) )
                        ;;
                    "associate-elastic-ip-lb")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id --client-token --elastic-ip-id " -- $cur) )
                        ;;
                    "disassociate-elastic-ip-lb")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id --client-token --elastic-ip-id " -- $cur) )
                        ;;
                    "describe-slbs-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id " -- $cur) )
                        ;;
                    "describe-servers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --server-group-id --page-number --page-size --listener-id --filters " -- $cur) )
                        ;;
                    "add-servers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --server-group-id --client-token --server-spec " -- $cur) )
                        ;;
                    "modify-server")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --server-group-id --server-id --weight " -- $cur) )
                        ;;
                    "remove-server")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --server-group-id --server-id " -- $cur) )
                        ;;
                    "describe-ipv6gateways")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --ipv6gateway-name --filters " -- $cur) )
                        ;;
                    "describe-ipv6gateway")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ipv6gateway-id " -- $cur) )
                        ;;
                    "modify-ipv6gateway")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ipv6gateway-id --client-token --ipv6gateway-name " -- $cur) )
                        ;;
                    "describe-basic-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --az " -- $cur) )
                        ;;
                    "describe-subnets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --az --name --vpc-id --filters " -- $cur) )
                        ;;
                    "create-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --subnet-spec " -- $cur) )
                        ;;
                    "assign-ipv6cidr")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id --client-token --ipv6cidr " -- $cur) )
                        ;;
                    "describe-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id " -- $cur) )
                        ;;
                    "modify-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id --name --description " -- $cur) )
                        ;;
                    "delete-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id --client-token " -- $cur) )
                        ;;
                    "describe-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id " -- $cur) )
                        ;;
                    "modify-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --name --description " -- $cur) )
                        ;;
                    "delete-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --client-token " -- $cur) )
                        ;;
                    "describe-vpcs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --name --filters " -- $cur) )
                        ;;
                    "create-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --vpc-spec " -- $cur) )
                        ;;
                    "assign-ipv6gateway")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --client-token " -- $cur) )
                        ;;
                    "describe-listeners")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --name --load-balancer-id --filters " -- $cur) )
                        ;;
                    "create-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --listener-spec " -- $cur) )
                        ;;
                    "modify-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --listener-id --algorithm --sticky-session --real-ip --name --description --health-check --health-check-timeout --health-check-interval --healthy-threshold --unhealthy-threshold --server-group-id --sticky-session-timeout --cookie-type --health-check-uri --health-check-http-code --certificate-id --headers " -- $cur) )
                        ;;
                    "describe-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --listener-id " -- $cur) )
                        ;;
                    "delete-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --listener-id " -- $cur) )
                        ;;
                    "start-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --listener-id --client-token " -- $cur) )
                        ;;
                    "stop-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --listener-id --client-token " -- $cur) )
                        ;;
                    "describe-device-types")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --az " -- $cur) )
                        ;;
                    "describe-os")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --device-type --os-type " -- $cur) )
                        ;;
                    "describe-device-raids")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --device-type --volume-type " -- $cur) )
                        ;;
                    "describe-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --az --name --network-type --device-type --subnet-id --keypair-id --enable-internet --private-ip --interface-mode --filters " -- $cur) )
                        ;;
                    "create-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --instance-spec " -- $cur) )
                        ;;
                    "describe-instance-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "assign-ipv6address")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token --ipv6address --subnet-id " -- $cur) )
                        ;;
                    "modify-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --name --description " -- $cur) )
                        ;;
                    "describe-instance-raid")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-instance-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "restart-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token " -- $cur) )
                        ;;
                    "stop-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token " -- $cur) )
                        ;;
                    "start-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token " -- $cur) )
                        ;;
                    "restart-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --instance-ids " -- $cur) )
                        ;;
                    "stop-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --instance-ids " -- $cur) )
                        ;;
                    "start-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --instance-ids " -- $cur) )
                        ;;
                    "reinstall-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token --instance-spec " -- $cur) )
                        ;;
                    "modify-bandwidth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token --bandwidth " -- $cur) )
                        ;;
                    "associate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token --elastic-ip-id --target-ip --subnet-id " -- $cur) )
                        ;;
                    "disassociate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token --elastic-ip-id " -- $cur) )
                        ;;
                    "reset-password")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token --password " -- $cur) )
                        ;;
                    "describe-available-private-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --subnet-id " -- $cur) )
                        ;;
                    "describe-instance-monitor-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --start-time --end-time --filters " -- $cur) )
                        ;;
                    "describe-event-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size " -- $cur) )
                        ;;
                    "describe-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id " -- $cur) )
                        ;;
                    "describe-route-tables")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --name --vpc-id --filters " -- $cur) )
                        ;;
                    "describe-regiones")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --network-type " -- $cur) )
                        ;;
                    "describe-cpslbregions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "httpdns")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-account-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "get-account-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "operate-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --action --key " -- $cur) )
                        ;;
                    "get-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-index --page-size --domain-name " -- $cur) )
                        ;;
                    "add-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-names " -- $cur) )
                        ;;
                    "del-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-names " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "disk")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-disks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --tags --filters " -- $cur) )
                        ;;
                    "create-disks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-spec --max-count --user-tags --client-token " -- $cur) )
                        ;;
                    "describe-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-id " -- $cur) )
                        ;;
                    "modify-disk-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-id --name --description " -- $cur) )
                        ;;
                    "delete-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-id " -- $cur) )
                        ;;
                    "restore-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-id --snapshot-id " -- $cur) )
                        ;;
                    "extend-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-id --disk-size-gb --iops " -- $cur) )
                        ;;
                    "describe-volumes-ignore-service-code")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --tags --filter-groups " -- $cur) )
                        ;;
                    "describe-quota")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --type " -- $cur) )
                        ;;
                    "describe-snapshots")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --snapshot-source --filters " -- $cur) )
                        ;;
                    "create-snapshot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --snapshot-spec --client-token " -- $cur) )
                        ;;
                    "delete-snapshots")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --snapshot-ids " -- $cur) )
                        ;;
                    "describe-snapshot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --snapshot-id " -- $cur) )
                        ;;
                    "modify-snapshot-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --snapshot-id --name --description --expire-time " -- $cur) )
                        ;;
                    "delete-snapshot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --snapshot-id " -- $cur) )
                        ;;
                    "describe-snapshots-capacity")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-snapshot-chain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-id --snapshot-id " -- $cur) )
                        ;;
                    "describe-soldout")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-snapshot-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --interval --effective-time --snapshot-lifecycle --contact-info --status " -- $cur) )
                        ;;
                    "update-snapshot-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --policy-id --name --interval --effective-time --snapshot-lifecycle --contact-info --status " -- $cur) )
                        ;;
                    "delete-snapshot-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --policy-id " -- $cur) )
                        ;;
                    "describe-snapshot-policies")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --policy-id --status --order --page-number --page-size " -- $cur) )
                        ;;
                    "describe-snap-polices")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filter-groups --order --page-number --page-size " -- $cur) )
                        ;;
                    "apply-snapshot-policies")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --relations " -- $cur) )
                        ;;
                    "describe-snapshot-policy-disk-relations")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-id --disk-region --policy-id --page-number --page-size " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "nc")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-secrets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --secret-type --data " -- $cur) )
                        ;;
                    "describe-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "delete-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "describe-quota")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --resource-type " -- $cur) )
                        ;;
                    "describe-containers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-containers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-spec --max-count " -- $cur) )
                        ;;
                    "describe-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "delete-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "start-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "stop-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "modify-container-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --name --description " -- $cur) )
                        ;;
                    "associate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --elastic-ip-id " -- $cur) )
                        ;;
                    "disassociate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --elastic-ip-id " -- $cur) )
                        ;;
                    "get-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --tail-lines --since-seconds --limit-bytes " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "vm")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-instance-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-instance-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-template-data --name --description " -- $cur) )
                        ;;
                    "describe-instance-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-template-id " -- $cur) )
                        ;;
                    "update-instance-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-template-id --name --description --instance-template-data " -- $cur) )
                        ;;
                    "delete-instance-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-template-id " -- $cur) )
                        ;;
                    "verify-instance-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-template-id " -- $cur) )
                        ;;
                    "describe-instance-templates-customdata")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters " -- $cur) )
                        ;;
                    "describe-keypairs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-keypair")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-name " -- $cur) )
                        ;;
                    "import-keypair")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-name --public-key " -- $cur) )
                        ;;
                    "delete-keypair")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-name " -- $cur) )
                        ;;
                    "attach-keypair")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-name --instance-ids --pass-word-auth " -- $cur) )
                        ;;
                    "detach-keypair")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-name --instance-ids " -- $cur) )
                        ;;
                    "describe-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id " -- $cur) )
                        ;;
                    "delete-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id --delete-snapshot " -- $cur) )
                        ;;
                    "describe-images")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-source --offline --platform --ids --image-name --root-device-type --launch-permission --status --service-code --architecture --page-number --page-size " -- $cur) )
                        ;;
                    "describe-image-constraints")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id " -- $cur) )
                        ;;
                    "describe-image-constraints-batch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ids " -- $cur) )
                        ;;
                    "share-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id --pins " -- $cur) )
                        ;;
                    "un-share-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id --pins " -- $cur) )
                        ;;
                    "release-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id " -- $cur) )
                        ;;
                    "un-release-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id " -- $cur) )
                        ;;
                    "describe-image-members")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id " -- $cur) )
                        ;;
                    "copy-images")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --source-image-ids --destination-region " -- $cur) )
                        ;;
                    "modify-image-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id --name --description " -- $cur) )
                        ;;
                    "import-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --architecture --os-type --platform --disk-format --system-disk-size-gb --image-url --os-version --image-name --description --force-import --client-token " -- $cur) )
                        ;;
                    "export-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id --role-name --oss-url --oss-prefix --client-token " -- $cur) )
                        ;;
                    "image-tasks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --task-action --task-ids --task-status --start-time --end-time --page-number --page-size " -- $cur) )
                        ;;
                    "describe-quotas")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters --image-id " -- $cur) )
                        ;;
                    "describe-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --tags --filters " -- $cur) )
                        ;;
                    "create-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-spec --max-count --client-token " -- $cur) )
                        ;;
                    "describe-brief-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --tags --filters " -- $cur) )
                        ;;
                    "describe-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "delete-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-instance-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "describe-instance-private-ip-address")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "stop-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --charge-on-stopped " -- $cur) )
                        ;;
                    "start-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "reboot-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "attach-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --network-interface-id --auto-delete " -- $cur) )
                        ;;
                    "detach-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --network-interface-id " -- $cur) )
                        ;;
                    "modify-instance-network-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --networks " -- $cur) )
                        ;;
                    "associate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --elastic-ip-id " -- $cur) )
                        ;;
                    "disassociate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --elastic-ip-id " -- $cur) )
                        ;;
                    "create-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --name --description --data-disks " -- $cur) )
                        ;;
                    "attach-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --disk-id --device-name --auto-delete " -- $cur) )
                        ;;
                    "detach-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --disk-id --force " -- $cur) )
                        ;;
                    "modify-instance-disk-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --data-disks " -- $cur) )
                        ;;
                    "modify-instance-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --name --description --hostname --metadata --userdata " -- $cur) )
                        ;;
                    "modify-instance-vpc-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --subnet-id --assign-ipv6 --private-ip-address --security-groups " -- $cur) )
                        ;;
                    "modify-instance-password")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --password " -- $cur) )
                        ;;
                    "describe-instance-vnc-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "resize-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --instance-type --force " -- $cur) )
                        ;;
                    "rebuild-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --password --image-id --key-names --hostname --metadata --userdata --pass-word-auth --image-inherit " -- $cur) )
                        ;;
                    "describe-instances-custom-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "modify-instance-placement")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --ag-id --balance --clear-local-disk " -- $cur) )
                        ;;
                    "describe-instance-types")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --service-name --filters " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "iotcore")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "list-product-abilities")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key --page-number --page-size --filters " -- $cur) )
                        ;;
                    "import-thing-model")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key --thing-model " -- $cur) )
                        ;;
                    "export-thing-model")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key " -- $cur) )
                        ;;
                    "invoke-thing-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --identifier --product-key --topic-short-name --topic-message " -- $cur) )
                        ;;
                    "describe-thing-shadow")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --identifier --product-key " -- $cur) )
                        ;;
                    "update-thing-shadow")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --identifier --product-key --state --version " -- $cur) )
                        ;;
                    "invoke-thing-service")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --identifier --product-key --name --input " -- $cur) )
                        ;;
                    "add-device-links")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --parent-id --product-key --children " -- $cur) )
                        ;;
                    "query-device-page")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --device-name --status --product-key --device-type --now-page --page-size --order --direction --parent-id --order-id --device-collector-type " -- $cur) )
                        ;;
                    "update-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --device-id --model --manufacturer --description --status " -- $cur) )
                        ;;
                    "add-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --device-name --product-key --model --manufacturer --description " -- $cur) )
                        ;;
                    "query-device-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --device-name --instance-id --region-id --product-key " -- $cur) )
                        ;;
                    "remove-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --device-name --instance-id --region-id --product-key " -- $cur) )
                        ;;
                    "list-products")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-name --product-type --product-description " -- $cur) )
                        ;;
                    "describe-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key " -- $cur) )
                        ;;
                    "update-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key --product-name --product-description --dynamic-register " -- $cur) )
                        ;;
                    "delete-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key " -- $cur) )
                        ;;
                    "update-loo-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --device-id --model --manufacturer --description --status --identifier --device-name " -- $cur) )
                        ;;
                    "add-loo-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --pre-order-id --user-pin-param --device-name --product-key --model --manufacturer --identifier --description " -- $cur) )
                        ;;
                    "loongray-query-page")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --device-name --manufacturer --model --status --product-key --device-type --now-page --page-size --order --direction --parent-id --order-id --device-collector-type --query-user-pin " -- $cur) )
                        ;;
                    "query-admin-statistics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --product-key --parent-id --device-collector-type --query-user-pin " -- $cur) )
                        ;;
                    "remove-loongray-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --device-name --instance-id --region-id --product-key " -- $cur) )
                        ;;
                    "register-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --device-info-vo " -- $cur) )
                        ;;
                    "download-device-certificate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --device-id " -- $cur) )
                        ;;
                    "delete-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --device-id " -- $cur) )
                        ;;
                    "describe-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --device-id " -- $cur) )
                        ;;
                    "describe-thing-type-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --device-meta-id --device-meta-name --node-type --page-no --page-size " -- $cur) )
                        ;;
                    "describe-thing-type")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --device-meta-id " -- $cur) )
                        ;;
                    "describe-thing-model")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --thing-type-code --thing-model-version " -- $cur) )
                        ;;
                    "set-device-property")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --device-property-vo " -- $cur) )
                        ;;
                    "invoke-function")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --device-function-vo " -- $cur) )
                        ;;
                    "describe-event-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --event-report-page-bo " -- $cur) )
                        ;;
                    "describe-function-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --function-call-page-bo " -- $cur) )
                        ;;
                    "describe-property")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --device-id " -- $cur) )
                        ;;
                    "describe-property-snapshot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --device-snapshot-request-vo " -- $cur) )
                        ;;
                    "create-device-topo")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --device-topo-info-vo " -- $cur) )
                        ;;
                    "describe-device-topo")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --device-topo-page-bo " -- $cur) )
                        ;;
                    "update-device-topo")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --device-topo-info-vo " -- $cur) )
                        ;;
                    "delete-device-topo")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --device-topo-info-vo " -- $cur) )
                        ;;
                    "describe-product-with-admin")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key " -- $cur) )
                        ;;
                    "update-product-with-admin")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key --product-name --product-description --dynamic-register " -- $cur) )
                        ;;
                    "delete-product-with-admin")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key " -- $cur) )
                        ;;
                    "list-products-with-admin")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-admin-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-name --product-type --product-description --coll-device-type " -- $cur) )
                        ;;
                    "describe-product-topics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-product-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key --topic-short-name --topic-operation --topic-description " -- $cur) )
                        ;;
                    "describe-product-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key --topic-id " -- $cur) )
                        ;;
                    "get-device-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --group-name --query-user-pin --tag --page-number --page-size " -- $cur) )
                        ;;
                    "get-device-group-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --query-user-pin " -- $cur) )
                        ;;
                    "find-device-group-link-page")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --product-key --device-name --device-collector-type --group-name --user-pin --tag --group-id --manufacturer --model --order-id --status --page-number --page-size --order --direction " -- $cur) )
                        ;;
                    "elevator-operating-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --identifier " -- $cur) )
                        ;;
                    "collector-read-message")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --identifier --protocol " -- $cur) )
                        ;;
                    "read-holding-registers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --identifier --address-of-first-register --number-of-registers " -- $cur) )
                        ;;
                    "collector-write-message")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --identifier --protocol --data " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "zfs")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-mount-targets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-mount-target")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --file-system-id --subnet-id --vpc-id --security-group-id --client-token " -- $cur) )
                        ;;
                    "describe-mount-target")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --mount-target-id " -- $cur) )
                        ;;
                    "delete-mount-target")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --mount-target-id " -- $cur) )
                        ;;
                    "describe-file-systems")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --tags --filters " -- $cur) )
                        ;;
                    "create-file-system")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --description --client-token --file-system-type --service-code " -- $cur) )
                        ;;
                    "describe-file-system")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --file-system-id " -- $cur) )
                        ;;
                    "modify-file-system-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --file-system-id --name --description " -- $cur) )
                        ;;
                    "delete-file-system")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --file-system-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "ams")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-streams-input")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --stream-id --start-time --end-time " -- $cur) )
                        ;;
                    "describe-authenticate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --p-id --ver " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "jdro")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-resource-type-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --product --search " -- $cur) )
                        ;;
                    "describe-resource-type-specification")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --resource-type " -- $cur) )
                        ;;
                    "describe-stacks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --stack-name --action --status --create-start-time --create-end-time --update-start-time --update-end-time --sort-field --sort-by " -- $cur) )
                        ;;
                    "create-stack")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --environment --template " -- $cur) )
                        ;;
                    "describe-stack")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --stack-id " -- $cur) )
                        ;;
                    "delete-stack")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --stack-id " -- $cur) )
                        ;;
                    "create-change-set")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --stack-id --environment --template " -- $cur) )
                        ;;
                    "execute-change-set")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --stack-id --changeset-id " -- $cur) )
                        ;;
                    "describe-stack-events")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --stack-id --page-number --page-size --start-time --end-time " -- $cur) )
                        ;;
                    "describe-stack-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --stack-id --page-number --page-size --search --product " -- $cur) )
                        ;;
                    "describe-stack-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --stack-id " -- $cur) )
                        ;;
                    "validate-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --environment --template --validate-mode " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "vod")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "list-transcode-template-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-transcode-template-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name --templates " -- $cur) )
                        ;;
                    "get-transcode-template-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-id " -- $cur) )
                        ;;
                    "update-transcode-template-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-id --group-name --templates " -- $cur) )
                        ;;
                    "delete-transcode-template-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-id " -- $cur) )
                        ;;
                    "delete-grouped-transcode-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-id --template-ids " -- $cur) )
                        ;;
                    "list-quality-detection-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size " -- $cur) )
                        ;;
                    "create-quality-detection-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --name --template-type --detections " -- $cur) )
                        ;;
                    "get-quality-detection-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-id " -- $cur) )
                        ;;
                    "update-quality-detection-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-id --name --detections " -- $cur) )
                        ;;
                    "delete-quality-detection-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-id " -- $cur) )
                        ;;
                    "create-video-upload-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --http-method --title --file-name --file-size --cover-url --description --category-id --tags --transcode-template-group-id --transcode-template-ids --watermark-ids --user-data " -- $cur) )
                        ;;
                    "refresh-video-upload-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-id " -- $cur) )
                        ;;
                    "create-image-upload-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --http-method --file-name --file-size " -- $cur) )
                        ;;
                    "create-live-to-vod-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --title --file-name --file-size --cover-url --description --category-id --tags --transcode-template-group-id --transcode-template-ids --watermark-ids --publish-domain --app-name --stream-name --record-times --record-file-type --task-external-id --priority " -- $cur) )
                        ;;
                    "list-videos")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --filters --sorts " -- $cur) )
                        ;;
                    "get-video")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-id " -- $cur) )
                        ;;
                    "update-video")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-id --name --category-id --tags --cover-url --description " -- $cur) )
                        ;;
                    "delete-video")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-id " -- $cur) )
                        ;;
                    "batch-delete-videos")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-ids " -- $cur) )
                        ;;
                    "batch-update-videos")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --bulk-items " -- $cur) )
                        ;;
                    "get-video-play-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-id " -- $cur) )
                        ;;
                    "delete-video-streams")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-id --task-ids " -- $cur) )
                        ;;
                    "video-audit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-id --audit-result " -- $cur) )
                        ;;
                    "get-video-source-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-id " -- $cur) )
                        ;;
                    "submit-quality-detection-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --media-id --template-ids " -- $cur) )
                        ;;
                    "batch-submit-quality-detection-jobs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --bulk-items " -- $cur) )
                        ;;
                    "create-vedit-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --project-name --description --timeline --media-metadata --user-data " -- $cur) )
                        ;;
                    "submit-vedit-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --project-id --media-metadata --user-data " -- $cur) )
                        ;;
                    "list-vedit-projects")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-vedit-project")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --project-name --description --timeline " -- $cur) )
                        ;;
                    "get-vedit-project")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --project-id " -- $cur) )
                        ;;
                    "update-vedit-project")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --project-id --project-name --description --timeline " -- $cur) )
                        ;;
                    "delete-vedit-project")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --project-id " -- $cur) )
                        ;;
                    "list-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --sorts " -- $cur) )
                        ;;
                    "create-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --name " -- $cur) )
                        ;;
                    "get-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "delete-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "enable-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "disable-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "set-default-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "set-header")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id --header-name --header-value --header-type " -- $cur) )
                        ;;
                    "list-headers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "delete-header")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id --header-name --header-type " -- $cur) )
                        ;;
                    "set-referer-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id --config --enabled " -- $cur) )
                        ;;
                    "get-referer-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "set-urlrule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id --config --enabled " -- $cur) )
                        ;;
                    "get-urlrule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "set-iprule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id --config --enabled " -- $cur) )
                        ;;
                    "get-iprule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "set-http-ssl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id --source --title --ssl-cert --ssl-key --jump-type --enabled " -- $cur) )
                        ;;
                    "get-http-ssl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "list-categories")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --sorts " -- $cur) )
                        ;;
                    "create-category")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --name --parent-id --description " -- $cur) )
                        ;;
                    "list-all-categories")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --flat-mode --tree-mode " -- $cur) )
                        ;;
                    "get-category-with-children")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --category-id " -- $cur) )
                        ;;
                    "get-category")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --category-id " -- $cur) )
                        ;;
                    "update-category")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --category-id --name --parent-id --description " -- $cur) )
                        ;;
                    "delete-category")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --category-id " -- $cur) )
                        ;;
                    "submit-snapshot-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-ids --template-ids " -- $cur) )
                        ;;
                    "list-snapshot-tasks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --filters " -- $cur) )
                        ;;
                    "list-transcode-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-transcode-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --name --video --audio --encapsulation --out-file --definition --template-type " -- $cur) )
                        ;;
                    "get-transcode-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-id " -- $cur) )
                        ;;
                    "update-transcode-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-id --name --video --audio --encapsulation --out-file --definition --template-type " -- $cur) )
                        ;;
                    "delete-transcode-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-id " -- $cur) )
                        ;;
                    "list-snapshot-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-snapshot-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-name --snapshot-type --image-sample-config --image-sprite-config " -- $cur) )
                        ;;
                    "get-snapshot-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-id " -- $cur) )
                        ;;
                    "update-snapshot-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-id --template-name --snapshot-type --image-sample-config --image-sprite-config " -- $cur) )
                        ;;
                    "delete-snapshot-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-id " -- $cur) )
                        ;;
                    "submit-transcode-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-id --template-group-id --template-ids --watermark-ids " -- $cur) )
                        ;;
                    "batch-submit-transcode-jobs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --bulk-items " -- $cur) )
                        ;;
                    "get-transcode-summaries")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-ids " -- $cur) )
                        ;;
                    "get-transcode-job-summaries")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --job-ids " -- $cur) )
                        ;;
                    "get-transcode-task-summaries")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-ids " -- $cur) )
                        ;;
                    "list-watermarks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size " -- $cur) )
                        ;;
                    "create-watermark")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --name --img-url --width --height --size-unit --width-ref --height-ref --position --offset-x --offset-y --offset-unit " -- $cur) )
                        ;;
                    "get-watermark")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --watermark-id " -- $cur) )
                        ;;
                    "update-watermark")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --watermark-id --name --img-url --width --height --size-unit --width-ref --height-ref --position --offset-x --offset-y --offset-unit " -- $cur) )
                        ;;
                    "delete-watermark")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --watermark-id " -- $cur) )
                        ;;
                    "submit-transcode-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-id --template-ids --watermark-ids " -- $cur) )
                        ;;
                    "batch-submit-transcode-jobs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --bulk-items " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "yundingdatapush")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-datapush-venders")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --appkey --page-number --page-size --yd-rds-instance-id --rds-instance-name --vender-id --vender-name " -- $cur) )
                        ;;
                    "add-datapush-vender")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --datapush-vender " -- $cur) )
                        ;;
                    "delete-datapush-vender")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --appkey --yd-rds-instance-id --vender-id " -- $cur) )
                        ;;
                    "describe-rds-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --appkey " -- $cur) )
                        ;;
                    "create-order-sync")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --order-sync-spec " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "ossopenapi")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-single-bucket-capacity")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucket-name --capacity-types --begin-time --end-time --period-type --method " -- $cur) )
                        ;;
                    "get-back-source-configuration")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucket-name " -- $cur) )
                        ;;
                    "put-back-source-configuration")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucket-name --back-source-rules " -- $cur) )
                        ;;
                    "delete-back-source-configuration")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucket-name " -- $cur) )
                        ;;
                    "get-historical-replicat-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucket-name --task-id " -- $cur) )
                        ;;
                    "abort-historical-replicat-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucket-name --task-id " -- $cur) )
                        ;;
                    "list-historical-replicat-tasks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucket-name --marker --limit " -- $cur) )
                        ;;
                    "create-historical-replicat-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucket-name --action --bucket-name --bucket-region --target-bucket-name --target-bucket-region --storage-class --prefix-set " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "baseanti")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-ip-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip " -- $cur) )
                        ;;
                    "describe-elastic-ip-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --ip " -- $cur) )
                        ;;
                    "describe-cps-ip-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --ip " -- $cur) )
                        ;;
                    "describe-ccs-ip-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --ip " -- $cur) )
                        ;;
                    "describe-waf-ip-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --ip " -- $cur) )
                        ;;
                    "describe-ip-resource-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip " -- $cur) )
                        ;;
                    "describe-ip-safety-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip " -- $cur) )
                        ;;
                    "set-clean-threshold")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip --clean-threshold-spec " -- $cur) )
                        ;;
                    "set-ip-clean-threshold")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip-clean-threshold-spec " -- $cur) )
                        ;;
                    "describe-ip-clean-threshold-range")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip " -- $cur) )
                        ;;
                    "describe-ip-resource-protect-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip --start --limit " -- $cur) )
                        ;;
                    "describe-ip-resource-flow")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip --end-time " -- $cur) )
                        ;;
                    "describe-attack-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --start-time --end-time --ip " -- $cur) )
                        ;;
                    "describe-attack-statistics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --ip " -- $cur) )
                        ;;
                    "describe-attack-type-count")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --ip " -- $cur) )
                        ;;
                    "describe-ip-monitor-flow")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --ip " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "mongodb")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-security-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-security-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --modify-mode --security-ips " -- $cur) )
                        ;;
                    "describe-backups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --backup-name --backup-method " -- $cur) )
                        ;;
                    "delete-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backup-id " -- $cur) )
                        ;;
                    "backup-download-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backup-id " -- $cur) )
                        ;;
                    "describe-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --tag-filters --sorts " -- $cur) )
                        ;;
                    "create-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-spec --charge-spec " -- $cur) )
                        ;;
                    "delete-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "reset-password")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-password " -- $cur) )
                        ;;
                    "modify-instance-spec")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --instance-class --instance-storage-gb " -- $cur) )
                        ;;
                    "modify-instance-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --instance-name " -- $cur) )
                        ;;
                    "describe-backup-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-backup-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --preferred-backup-time " -- $cur) )
                        ;;
                    "restore-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --backup-id " -- $cur) )
                        ;;
                    "describe-flavors")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-available-zones")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "restart-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "create-sharding-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --sharding-instance-spec --charge-spec " -- $cur) )
                        ;;
                    "modify-node-spec")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --node-id --node-type --node-storage-gb " -- $cur) )
                        ;;
                    "restart-node")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --node-id " -- $cur) )
                        ;;
                    "describe-backup-synchronicities")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-backup-synchronicity")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --src-region --dst-region " -- $cur) )
                        ;;
                    "delete-backup-synchronicities")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --service-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "live")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-publish-stream-info-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-stream-history-user-num")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --isp-name --location-name --protocol-type --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-publish-stream-num")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --protocol-type --isp-name --location-name --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-stream-player-ranking-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --protocol-type --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-transcode-stream-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name " -- $cur) )
                        ;;
                    "describe-live-transcode-stream-num")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name " -- $cur) )
                        ;;
                    "describe-live-transcode-stream-player-user-num")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --isp-name --location-name --protocol-type --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-transcode-stream-bandwidth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --isp-name --location-name --protocol-type --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-domain-online-stream")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --page-num --page-size --start-time --end-time " -- $cur) )
                        ;;
                    "describe-domains-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domains --interval --start-time --end-time " -- $cur) )
                        ;;
                    "describe-url-ranking")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --size --rankfield --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-stream-publish-info-by-page")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --start-time --end-time --page-number --page-size " -- $cur) )
                        ;;
                    "describe-live-stream-play-info-by-page")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --start-time --end-time --page-number --page-size " -- $cur) )
                        ;;
                    "describe-live-domain-certificate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain " -- $cur) )
                        ;;
                    "set-live-domain-certificate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain --cert-status --cert --key --title " -- $cur) )
                        ;;
                    "describe-live-restart-domain-certificate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --restart-domain " -- $cur) )
                        ;;
                    "set-live-restart-domain-certificate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --restart-domain --cert-status --cert --key --title " -- $cur) )
                        ;;
                    "add-live-stream-domain-transcode")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "add-live-stream-app-transcode")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "add-custom-live-stream-transcode-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-name --video-codec --video-code-rate --video-frame-rate --width --height --template --audio-codec --audio-format --audio-sample-rate --audio-channel --audio-code-rate --jdchd --audio-comfort " -- $cur) )
                        ;;
                    "describe-custom-live-stream-transcode-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "describe-system-live-stream-transcode-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "describe-live-stream-transcode-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "delete-live-stream-domain-transcode")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "delete-live-stream-app-transcode")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "describe-custom-live-stream-transcode-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "delete-custom-live-stream-transcode-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "describe-transcode-binding")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "add-custom-live-stream-quality-detection-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template --modules " -- $cur) )
                        ;;
                    "describe-custom-live-stream-quality-detection-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "add-live-stream-app-quality-detection")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "add-live-stream-domain-quality-detection")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "set-live-stream-quality-detection-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --notify-url " -- $cur) )
                        ;;
                    "delete-custom-live-stream-quality-detection-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "delete-live-stream-app-quality-detection")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "delete-live-stream-domain-quality-detection")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "describe-live-stream-quality-detection-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "delete-live-stream-quality-detection-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "describe-quality-detection-binding")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "describe-live-play-auth-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain " -- $cur) )
                        ;;
                    "set-live-play-auth-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain --auth-status --auth-key " -- $cur) )
                        ;;
                    "describe-live-restart-auth-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --restart-domain " -- $cur) )
                        ;;
                    "set-live-restart-auth-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --restart-domain --auth-status --auth-key " -- $cur) )
                        ;;
                    "add-custom-live-stream-watermark-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --position --offset-unit --offset-x --offset-y --size-unit --width --height --template --upload-id --url " -- $cur) )
                        ;;
                    "describe-custom-live-stream-watermark-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "add-live-stream-app-watermark")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "add-live-stream-domain-watermark")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "describe-custom-live-stream-watermark-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "delete-custom-live-stream-watermark-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "delete-live-stream-app-watermark")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "delete-live-stream-domain-watermark")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "describe-watermark-binding")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "create-live-forward-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --source-url --push-url --start-mode --start-time --end-time --callback-events --callback-url --name " -- $cur) )
                        ;;
                    "update-live-forward-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-id --source-url --push-url --start-time --end-time --callback-events --callback-url --name " -- $cur) )
                        ;;
                    "query-live-forward-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "start-live-forward-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-ids " -- $cur) )
                        ;;
                    "stop-live-forward-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-ids " -- $cur) )
                        ;;
                    "delete-live-forward-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-ids " -- $cur) )
                        ;;
                    "delete-live-recordings")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --file-url --completely " -- $cur) )
                        ;;
                    "add-live-stream-domain-translate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "add-live-stream-app-translate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "add-live-stream-translate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --stream-name --template " -- $cur) )
                        ;;
                    "describe-system-live-stream-translate-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "describe-live-stream-translate-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "describe-live-domain-translate-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --filters " -- $cur) )
                        ;;
                    "delete-live-stream-domain-translate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "delete-live-stream-app-translate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "delete-live-stream-translate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --stream-name --template " -- $cur) )
                        ;;
                    "describe-translate-binding")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "pause-live-stream-translate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --stream-name " -- $cur) )
                        ;;
                    "resume-live-stream-translate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --stream-name " -- $cur) )
                        ;;
                    "forbid-live-stream")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --stream-name --forbid-time " -- $cur) )
                        ;;
                    "resume-live-stream")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --stream-name " -- $cur) )
                        ;;
                    "interrupt-live-stream")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --stream-name " -- $cur) )
                        ;;
                    "describe-live-stream-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --stream-name " -- $cur) )
                        ;;
                    "set-live-stream-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --notify-url " -- $cur) )
                        ;;
                    "describe-live-stream-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "delete-live-stream-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "describe-live-stream-online-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --page-num --page-size --app-name " -- $cur) )
                        ;;
                    "describe-live-stream-publish-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --page-num --page-size --app-name --stream-name --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-bill-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --filters " -- $cur) )
                        ;;
                    "open-live-restart")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --restart-domain " -- $cur) )
                        ;;
                    "close-live-restart")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --restart-domain " -- $cur) )
                        ;;
                    "describe-live-restart-configs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --restart-domain " -- $cur) )
                        ;;
                    "open-live-p2p")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain " -- $cur) )
                        ;;
                    "close-live-p2p")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain " -- $cur) )
                        ;;
                    "describe-live-p2p-configs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --play-domain " -- $cur) )
                        ;;
                    "add-custom-live-stream-snapshot-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --format --width --height --fill-type --snapshot-interval --save-mode --save-bucket --save-endpoint --template " -- $cur) )
                        ;;
                    "describe-custom-live-stream-snapshot-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "describe-custom-live-stream-snapshot-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "add-live-stream-app-snapshot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "add-live-stream-domain-snapshot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "set-live-stream-snapshot-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --notify-url " -- $cur) )
                        ;;
                    "delete-custom-live-stream-snapshot-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "delete-live-stream-app-snapshot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "delete-live-stream-domain-snapshot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "describe-live-stream-snapshot-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "delete-live-stream-snapshot-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "describe-snapshot-binding")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "describe-live-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --publish-domain " -- $cur) )
                        ;;
                    "add-live-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --play-domain " -- $cur) )
                        ;;
                    "start-live-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "stop-live-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "describe-live-domain-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "delete-live-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "add-live-restart-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain --restart-domain " -- $cur) )
                        ;;
                    "describe-custom-live-stream-record-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "add-custom-live-stream-record-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --record-period --save-bucket --save-endpoint --record-file-type --template " -- $cur) )
                        ;;
                    "add-live-stream-app-record")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "add-live-stream-domain-record")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "describe-custom-live-stream-record-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "set-live-stream-record-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --notify-url " -- $cur) )
                        ;;
                    "delete-custom-live-stream-record-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "delete-live-stream-app-record")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "delete-live-stream-domain-record")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "describe-live-stream-record-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "delete-live-stream-record-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "add-live-record-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --stream-name --record-times --save-bucket --save-endpoint --record-file-type --save-object --task-external-id " -- $cur) )
                        ;;
                    "describe-record-binding")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "describe-live-app")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "add-live-app")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name " -- $cur) )
                        ;;
                    "stop-live-app")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name " -- $cur) )
                        ;;
                    "describe-live-transcoding-duration-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --grade --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-file-storage-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-stream-bandwidth-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --isp-name --location-name --protocol-type --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-stream-publish-bandwidth-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --isp-name --location-name --protocol-type --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-stream-traffic-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --isp-name --location-name --protocol-type --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-stream-publish-traffic-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --isp-name --location-name --protocol-type --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-snapshot-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --stream-name --shot-mode --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-porn-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --stream-name --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-statistic-group-by-stream")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --isp-name --location-name --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-statistic-group-by-area")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --isp-name --location-name --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-statistic-group-by-area-isp")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --isp-name --location-name --protocol-type --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-publish-statistic-group-by-stream")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --isp-name --location-name --period --start-time --end-time " -- $cur) )
                        ;;
                    "open-live-timeshift")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain " -- $cur) )
                        ;;
                    "close-live-timeshift")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain " -- $cur) )
                        ;;
                    "describe-live-timeshift-configs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --play-domain " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "vpc")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-vpc-peerings")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-vpc-peering")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-peering-name --vpc-id --remote-vpc-id --description " -- $cur) )
                        ;;
                    "describe-vpc-peering")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-peering-id " -- $cur) )
                        ;;
                    "modify-vpc-peering")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-peering-id --vpc-peering-name --description " -- $cur) )
                        ;;
                    "delete-vpc-peering")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-peering-id " -- $cur) )
                        ;;
                    "describe-route-tables")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --route-table-name --description " -- $cur) )
                        ;;
                    "describe-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id " -- $cur) )
                        ;;
                    "modify-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id --route-table-name --description " -- $cur) )
                        ;;
                    "delete-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id " -- $cur) )
                        ;;
                    "add-route-table-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id --route-table-rule-specs " -- $cur) )
                        ;;
                    "remove-route-table-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id --rule-ids " -- $cur) )
                        ;;
                    "modify-route-table-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id --modify-route-table-rule-specs " -- $cur) )
                        ;;
                    "associate-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id --subnet-ids " -- $cur) )
                        ;;
                    "disassociate-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id --subnet-id " -- $cur) )
                        ;;
                    "describe-subnets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --subnet-name --address-prefix --route-table-id --description --ip-mask-len " -- $cur) )
                        ;;
                    "describe-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id " -- $cur) )
                        ;;
                    "modify-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id --subnet-name --description --ip-mask-len " -- $cur) )
                        ;;
                    "delete-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id " -- $cur) )
                        ;;
                    "describe-network-acls")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-network-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --network-acl-name --description " -- $cur) )
                        ;;
                    "describe-network-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id " -- $cur) )
                        ;;
                    "modify-network-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id --network-acl-name --description " -- $cur) )
                        ;;
                    "delete-network-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id " -- $cur) )
                        ;;
                    "associate-network-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id --subnet-ids " -- $cur) )
                        ;;
                    "disassociate-network-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id --subnet-id " -- $cur) )
                        ;;
                    "add-network-acl-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id --network-acl-rule-specs " -- $cur) )
                        ;;
                    "remove-network-acl-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id --rule-ids " -- $cur) )
                        ;;
                    "modify-network-acl-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id --modify-network-acl-rule-specs " -- $cur) )
                        ;;
                    "describe-vpcs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-name --address-prefix --description --az-type --az " -- $cur) )
                        ;;
                    "describe-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id " -- $cur) )
                        ;;
                    "modify-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --vpc-name --description " -- $cur) )
                        ;;
                    "delete-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id " -- $cur) )
                        ;;
                    "describe-network-interfaces")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id --az --network-interface-name --primary-ip-address --secondary-ip-addresses --secondary-ip-count --security-groups --sanity-check --description " -- $cur) )
                        ;;
                    "describe-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id " -- $cur) )
                        ;;
                    "modify-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --network-interface-name --description --security-groups " -- $cur) )
                        ;;
                    "delete-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id " -- $cur) )
                        ;;
                    "associate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --elastic-ip-id --private-ip-address --elastic-ip-address " -- $cur) )
                        ;;
                    "disassociate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --elastic-ip-id --elastic-ip-address " -- $cur) )
                        ;;
                    "assign-secondary-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --force --secondary-ips --secondary-ip-count --secondary-ip-mask-len --secondary-ip-address " -- $cur) )
                        ;;
                    "unassign-secondary-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --secondary-ips --secondary-cidrs " -- $cur) )
                        ;;
                    "describe-bandwidth-packages")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --tags --resource-group-ids " -- $cur) )
                        ;;
                    "create-bandwidth-package")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --description --bandwidth-mbps --provider --charge-spec --user-tags --resource-group-id " -- $cur) )
                        ;;
                    "describe-bandwidth-package")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bandwidth-package-id " -- $cur) )
                        ;;
                    "modify-bandwidth-package")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bandwidth-package-id --bandwidth-mbps --name --description " -- $cur) )
                        ;;
                    "delete-bandwidth-package")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bandwidth-package-id " -- $cur) )
                        ;;
                    "add-bandwidth-package-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bandwidth-package-id --bandwidth-package-ipspecs " -- $cur) )
                        ;;
                    "remove-bandwidth-package-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bandwidth-package-id --bandwidth-package-ipspecs " -- $cur) )
                        ;;
                    "modify-bandwidth-package-ip-bandwidth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bandwidth-package-id --bandwidth-package-ipspecs " -- $cur) )
                        ;;
                    "describe-network-security-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-network-security-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --network-security-group-name --description " -- $cur) )
                        ;;
                    "describe-network-security-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-security-group-id " -- $cur) )
                        ;;
                    "modify-network-security-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-security-group-id --network-security-group-name --description " -- $cur) )
                        ;;
                    "delete-network-security-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-security-group-id " -- $cur) )
                        ;;
                    "add-network-security-group-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-security-group-id --network-security-group-rule-specs " -- $cur) )
                        ;;
                    "remove-network-security-group-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-security-group-id --rule-ids " -- $cur) )
                        ;;
                    "modify-network-security-group-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-security-group-id --modify-security-group-rule-specs " -- $cur) )
                        ;;
                    "describe-quota")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --type --parent-resource-id " -- $cur) )
                        ;;
                    "describe-elastic-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --tags --resource-group-ids " -- $cur) )
                        ;;
                    "create-elastic-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --max-count --elastic-ip-address --elastic-ip-spec --user-tags --ip-type --resource-group-id --dry-run " -- $cur) )
                        ;;
                    "describe-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --elastic-ip-id " -- $cur) )
                        ;;
                    "modify-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --elastic-ip-id --bandwidth-mbps " -- $cur) )
                        ;;
                    "delete-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --elastic-ip-id " -- $cur) )
                        ;;
                    "describe-edge-ip-providers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "monitor")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-alarms")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --data-owner --service-code --product --dimension --rule-name --rule-type --enabled --rule-status --filters " -- $cur) )
                        ;;
                    "create-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --auto-scaling-policy-id --base-contact --client-token --data-owner --dimension --enabled --multi-web-hook --notice-option --product --resource-option --rule-name --rule-option --rule-type --tags --web-hook-option " -- $cur) )
                        ;;
                    "describe-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --alarm-id " -- $cur) )
                        ;;
                    "update-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --alarm-id --auto-scaling-policy-id --base-contact --data-owner --dimension --enabled --multi-web-hook --notice-option --product --resource-option --rule-name --rule-option --rule-type --tags --web-hook-option " -- $cur) )
                        ;;
                    "delete-alarms")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --alarm-id " -- $cur) )
                        ;;
                    "describe-alarm-contacts")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --alarm-id --page-number --page-size --reference-type " -- $cur) )
                        ;;
                    "describe-metrics-for-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --service-code --product --dimension --metric-type " -- $cur) )
                        ;;
                    "describe-products-for-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --service-code --product " -- $cur) )
                        ;;
                    "enable-alarms")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --alarm-ids --state " -- $cur) )
                        ;;
                    "describe-alarm-history")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --data-owner --service-code --product --dimension --region --is-alarming --status --start-time --end-time --rule-type --rule-name --filters " -- $cur) )
                        ;;
                    "describe-metrics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --service-code --dimension --type " -- $cur) )
                        ;;
                    "last-downsample")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --metric --service-code --dimension --resource-id --tags --start-time --end-time --time-interval --aggr-type --down-aggr-type --time-offset " -- $cur) )
                        ;;
                    "describe-metric-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --metric --aggr-type --down-sample-type --start-time --end-time --time-interval --tags --group-by --rate --service-code --dimension --resource-id " -- $cur) )
                        ;;
                    "describe-tag-values")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --tag-key --service-code --resource-id --metric --start-time --end-time --time-interval --tags " -- $cur) )
                        ;;
                    "describe-services")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --filters --product-type " -- $cur) )
                        ;;
                    "put-product-metric-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --app-code --service-code --region --resource-id --data-points " -- $cur) )
                        ;;
                    "put-product-metric-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --app-code --service-code --region --resource-id --data-points " -- $cur) )
                        ;;
                    "put-custom-metric-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --metric-data-list " -- $cur) )
                        ;;
                    "put-custom-metric-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --metric-data-list " -- $cur) )
                        ;;
                    "describe-custom-metric-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-uid --end-time --query --start-time --time-interval " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "xdata")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "list-instance-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "list-table-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-name --database-name " -- $cur) )
                        ;;
                    "create-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-name --db-model-dbtable " -- $cur) )
                        ;;
                    "get-table-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --table-name --instance-name --database-name " -- $cur) )
                        ;;
                    "delete-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --table-name --instance-name --database-name " -- $cur) )
                        ;;
                    "execute-ras-query")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --database-name --sql --user-name --queue-name --source --call-back-url --instance-name --instance-owner-name --is-explain " -- $cur) )
                        ;;
                    "execute-py-spark-query")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --script --user-name --instance-name --instance-owner-name --script-type " -- $cur) )
                        ;;
                    "get-ras-query-state")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "get-py-spark-execute-state")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "get-ras-query-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "get-ras-query-result")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "get-py-spark-execute-result")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "cancel-ras-query")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "cancel-py-spark-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "list-database-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-name " -- $cur) )
                        ;;
                    "get-database-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --database-name --instance-name " -- $cur) )
                        ;;
                    "create-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --database-name --instance-name --description " -- $cur) )
                        ;;
                    "delete-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --database-name --instance-name " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;


            "configure")
                case "$prev" in
                # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                "add")
                    COMPREPLY=( $(compgen -W "-h --help --access-key --region-id --secret-key --endpoint --profile --scheme" -- $cur) )
                    ;;

                "delete")
                    COMPREPLY=( $(compgen -W "-h --help --profile" -- $cur) )
                    ;;

                "show-current")
                    COMPREPLY=( $(compgen -W "-h --help" -- $cur) )
                    ;;

                "show-all")
                    COMPREPLY=( $(compgen -W "-h --help" -- $cur) )
                    ;;

                "use")
                    COMPREPLY=( $(compgen -W "-h --help --profile" -- $cur) )
                    ;;

                esac
        esac
    fi

    return 0

} &&
complete -F _jdc_complete jdc
