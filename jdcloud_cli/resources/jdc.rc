# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

_jdc_complete()
{
    local cur prev BASE_LEVEL

    COMPREPLY=()
    cur=${COMP_WORDS[COMP_CWORD]}
    prev=${COMP_WORDS[COMP_CWORD-1]}

    # SETUP THE BASE LEVEL
    if [ $COMP_CWORD -eq 1 ]; then
        COMPREPLY=( $(compgen \
                      -W "--debug -v --version -h --help configure vm redis rds monitor iam cps disk datastar mongodb vpc sop xdata cr nc clouddnsservice mps streambus oss baseanti streamcomputer jke ipanti " \
                      -- $cur) )


    # SETUP THE SECOND LEVEL
    elif [ $COMP_CWORD -eq 2 ]; then
        case "$prev" in

            # HANDLE EVERYTHING AFTER THE SECOND LEVEL NAMESPACE
            "vm")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-image delete-image describe-images describe-image-constraints describe-image-constraints-batch share-image un-share-image describe-image-members copy-images modify-image-attribute describe-instances create-instances describe-instance delete-instance describe-instance-status describe-instance-private-ip-address stop-instance start-instance reboot-instance attach-network-interface detach-network-interface modify-instance-network-attribute associate-elastic-ip disassociate-elastic-ip create-image attach-disk detach-disk modify-instance-disk-attribute modify-instance-attribute modify-instance-password describe-instance-vnc-url resize-instance rebuild-instance describe-instance-types describe-keypairs create-keypair import-keypair delete-keypair describe-quotas " -- $cur) )
                ;;

            "redis")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-cache-instances create-cache-instance describe-cache-instance modify-cache-instance-attribute delete-cache-instance modify-cache-instance-class reset-cache-instance-password describe-instance-class describe-user-quota " -- $cur) )
                ;;

            "rds")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-accounts create-account delete-account grant-privilege revoke-privilege reset-password describe-audit create-audit delete-audit describe-audit-options modify-audit describe-audit-files describe-audit-download-url describe-backups create-backup delete-backup describe-backup-download-url describe-binlogs describe-binlog-download-url describe-databases create-database delete-database restore-database-from-backup restore-database-from-file restore-database-from-oss describe-error-logs describe-import-files get-upload-key set-import-file-shared describe-instances create-instance describe-instance-attributes delete-instance describe-backup-policy modify-backup-policy modify-instance-name failover-instance reboot-instance enable-internet-access disable-internet-access restore-instance create-instance-from-backup modify-instance-spec create-instance-by-time modify-connection-mode describe-index-performance describe-query-performance describe-slow-log-attributes describe-slow-logs describe-white-list modify-white-list " -- $cur) )
                ;;

            "monitor")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-alarm-contacts describe-alarm-history describe-alarms create-alarm describe-alarms-by-id update-alarm disable-alarm enable-alarm describe-metrics describe-metrics-for-create-alarm last-downsample describe-metric-data put-metric-data " -- $cur) )
                ;;

            "iam")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton create-permission describe-permission-detail update-permission describe-permissions describe-sub-user-permissions add-permissions-to-sub-user remove-permission-of-sub-user get-session-token verify-session-token create-subuser describe-user-access-keys create-user-access-key enabled-user-access-key disabled-user-access-key delete-user-access-key " -- $cur) )
                ;;

            "cps")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-os describe-software describe-instance-name modify-instance describe-device-types describe-device-raids describe-instance-raid describe-instance-status restart-instance stop-instance start-instance reinstall-instance modify-bandwidth describe-instance describe-instances create-instances describe-regiones describe-subnet " -- $cur) )
                ;;

            "disk")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-disks create-disks describe-disk modify-disk-attribute delete-disk restore-disk extend-disk describe-snapshots create-snapshot describe-snapshot modify-snp-attribute delete-snapshot " -- $cur) )
                ;;

            "datastar")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-package-id get-large-screen-data " -- $cur) )
                ;;

            "mongodb")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-instances create-instance delete-instance reset-password modify-instance-spec modify-instance-name describe-backup-policy modify-backup-policy restore-instance describe-flavors describe-available-zones describe-backups create-backup delete-backup backup-download-url describe-security-ips modify-security-ips " -- $cur) )
                ;;

            "vpc")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-elastic-ips create-elastic-ips describe-elastic-ip delete-elastic-ip describe-network-acls create-network-acl describe-network-acl modify-network-acl delete-network-acl associate-network-acl disassociate-network-acl add-network-acl-rules remove-network-acl-rules modify-network-acl-rules describe-network-interfaces create-network-interface describe-network-interface modify-network-interface delete-network-interface associate-elastic-ip disassociate-elastic-ip assign-secondary-ips unassign-secondary-ips describe-network-security-groups create-network-security-group describe-network-security-group modify-network-security-group delete-network-security-group add-network-security-group-rules remove-network-security-group-rules modify-network-security-group-rules describe-quota describe-route-tables create-route-table describe-route-table modify-route-table delete-route-table add-route-table-rules remove-route-table-rules modify-route-table-rules associate-route-table disassociate-route-table describe-subnets create-subnet describe-subnet modify-subnet delete-subnet describe-vpcs create-vpc describe-vpc modify-vpc delete-vpc describe-vpc-peerings create-vpc-peering describe-vpc-peering modify-vpc-peering delete-vpc-peering " -- $cur) )
                ;;

            "sop")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-security-token get-sensitive-op-setting " -- $cur) )
                ;;

            "xdata")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton list-database-info get-database-info create-database delete-database list-instance-info execute-ras-query execute-py-spark-query get-ras-query-state get-py-spark-execute-state get-ras-query-log get-ras-query-result get-py-spark-execute-result cancel-ras-query cancel-py-spark-job list-table-info create-table get-table-info delete-table " -- $cur) )
                ;;

            "cr")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-authorization-token describe-authorization-tokens release-authorization-token describe-images delete-image describe-quotas describe-registries create-registry describe-registry delete-registry check-registry-name create-repository describe-repositories delete-repository check-repository-name " -- $cur) )
                ;;

            "nc")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-containers create-containers describe-container delete-container start-container stop-container modify-container-attribute associate-elastic-ip disassociate-elastic-ip get-logs describe-quota describe-secrets create-secret describe-secret delete-secret " -- $cur) )
                ;;

            "clouddnsservice")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-action-log get-domains add-domain del-domain update-domain get-domain-query-count get-domain-query-traffic search-rr get-view-tree add-rr update-rr operate-rr add-user-view del-user-view get-user-view add-user-view-ip del-user-view-ip get-user-view-ip get-monitor add-monitor get-targets add-monitor-target operate-monitor update-monitor get-monitor-alarm-info " -- $cur) )
                ;;

            "mps")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton list-thumbnail-task create-thumbnail-task get-thumbnail-task get-notification set-notification " -- $cur) )
                ;;

            "streambus")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-topic-list describe-topic add-topic update-topic delete-topic get-consumer-group-list create-consumer-group delete-consumer-group " -- $cur) )
                ;;

            "oss")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton list-buckets put-bucket delete-bucket head-bucket " -- $cur) )
                ;;

            "baseanti")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-ip-resources describe-ip-resource-info set-clean-threshold describe-ip-resource-protect-info describe-ip-resource-flow " -- $cur) )
                ;;

            "streamcomputer")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-job add-or-update-job delete-job get-job-list start-job stop-job query-namespaces query-namespace-detail create-namespace update-namespace delete-namespace describe-storage add-or-update-storage delete-storage get-storage-list " -- $cur) )
                ;;

            "jke")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-quotas " -- $cur) )
                ;;

            "ipanti")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-ddos-attack-logs describe-cc-attack-logs describe-cc-attack-log-details ddos-graph fwd-graph cc-graph describe-forward-rules create-forward-rule describe-forward-rule modify-forward-rule delete-forward-rule switch-forward-rule-protect switch-forward-rule-origin describe-instances create-instance describe-instance modify-instance-cc enable-instance-cc disable-instance-cc modify-instance-url-white-list enable-instance-url-white-list disable-instance-url-white-list modify-instance-name modify-instance-ip-black-list enable-instance-ip-black-list disable-instance-ip-black-list modify-instance-ip-white-list enable-instance-ip-white-list disable-instance-ip-white-list enable-cc-observer-mode disable-cc-observer-mode enable-cc-ip-limit disable-cc-ip-limit set-cc-ip-limit describe-web-rules create-web-rule describe-web-rule modify-web-rule delete-web-rule switch-web-rule-protect switch-web-rule-origin enable-web-rule-cc disable-web-rule-cc " -- $cur) )
                ;;


            "configure")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help add delete show-current show-all use" -- $cur) )
                ;;
        esac

    # SETUP THE THIRD LEVEL
    elif [ $COMP_CWORD -gt 2 ]; then
        service=${COMP_WORDS[1]}
        prev=${COMP_WORDS[2]}

	    case "$service" in
	        "vm")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id " -- $cur) )
                        ;;
                    "delete-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id " -- $cur) )
                        ;;
                    "describe-images")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-source --platform --ids --root-device-type --status --page-number --page-size " -- $cur) )
                        ;;
                    "describe-image-constraints")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id " -- $cur) )
                        ;;
                    "describe-image-constraints-batch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ids " -- $cur) )
                        ;;
                    "share-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id --pins " -- $cur) )
                        ;;
                    "un-share-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id --pins " -- $cur) )
                        ;;
                    "describe-image-members")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id " -- $cur) )
                        ;;
                    "copy-images")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --source-image-ids --destination-region " -- $cur) )
                        ;;
                    "modify-image-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id --name --description " -- $cur) )
                        ;;
                    "describe-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-spec --max-count --client-token " -- $cur) )
                        ;;
                    "describe-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "delete-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-instance-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "describe-instance-private-ip-address")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "stop-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "start-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "reboot-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "attach-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --network-interface-id --auto-delete " -- $cur) )
                        ;;
                    "detach-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --network-interface-id " -- $cur) )
                        ;;
                    "modify-instance-network-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --networks " -- $cur) )
                        ;;
                    "associate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --elastic-ip-id " -- $cur) )
                        ;;
                    "disassociate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --elastic-ip-id " -- $cur) )
                        ;;
                    "create-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --name --description --data-disks " -- $cur) )
                        ;;
                    "attach-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --disk-id --device-name --auto-delete " -- $cur) )
                        ;;
                    "detach-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --disk-id --force " -- $cur) )
                        ;;
                    "modify-instance-disk-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --data-disks " -- $cur) )
                        ;;
                    "modify-instance-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --name --description " -- $cur) )
                        ;;
                    "modify-instance-password")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --password " -- $cur) )
                        ;;
                    "describe-instance-vnc-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "resize-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --instance-type " -- $cur) )
                        ;;
                    "rebuild-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --password --image-id --key-names " -- $cur) )
                        ;;
                    "describe-instance-types")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters " -- $cur) )
                        ;;
                    "describe-keypairs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-keypair")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-name " -- $cur) )
                        ;;
                    "import-keypair")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-name --public-key " -- $cur) )
                        ;;
                    "delete-keypair")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-name " -- $cur) )
                        ;;
                    "describe-quotas")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters --image-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "redis")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-cache-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --sorts " -- $cur) )
                        ;;
                    "create-cache-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance --charge " -- $cur) )
                        ;;
                    "describe-cache-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "modify-cache-instance-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --cache-instance-name --cache-instance-description " -- $cur) )
                        ;;
                    "delete-cache-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "modify-cache-instance-class")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --cache-instance-class " -- $cur) )
                        ;;
                    "reset-cache-instance-password")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --password " -- $cur) )
                        ;;
                    "describe-instance-class")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-user-quota")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "rds")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-accounts")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "create-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --account-password " -- $cur) )
                        ;;
                    "delete-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name " -- $cur) )
                        ;;
                    "grant-privilege")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --account-privileges " -- $cur) )
                        ;;
                    "revoke-privilege")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --db-names " -- $cur) )
                        ;;
                    "reset-password")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --account-password " -- $cur) )
                        ;;
                    "describe-audit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "create-audit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --enabled " -- $cur) )
                        ;;
                    "delete-audit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-audit-options")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --name " -- $cur) )
                        ;;
                    "modify-audit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --add --drop " -- $cur) )
                        ;;
                    "describe-audit-files")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-audit-download-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --file-name " -- $cur) )
                        ;;
                    "describe-backups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --auto --backup-type-filter --db-name-filter --backup-time-range-start-filter --backup-time-range-end-filter --page-number --page-size " -- $cur) )
                        ;;
                    "create-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --backup-spec " -- $cur) )
                        ;;
                    "delete-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backup-id " -- $cur) )
                        ;;
                    "describe-backup-download-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backup-id --file-name --url-expiration-second " -- $cur) )
                        ;;
                    "describe-binlogs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size --start-time --end-time " -- $cur) )
                        ;;
                    "describe-binlog-download-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --binlog-backup-id " -- $cur) )
                        ;;
                    "describe-databases")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name " -- $cur) )
                        ;;
                    "create-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --character-set-name " -- $cur) )
                        ;;
                    "delete-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name " -- $cur) )
                        ;;
                    "restore-database-from-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --backup-id --backup-file-name " -- $cur) )
                        ;;
                    "restore-database-from-file")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --shared-file-gid --file-name " -- $cur) )
                        ;;
                    "restore-database-from-oss")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --oss-url " -- $cur) )
                        ;;
                    "describe-error-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-import-files")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "get-upload-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "set-import-file-shared")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --file-name --shared " -- $cur) )
                        ;;
                    "describe-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-spec " -- $cur) )
                        ;;
                    "describe-instance-attributes")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "delete-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-backup-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-backup-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --start-window " -- $cur) )
                        ;;
                    "modify-instance-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --instance-name " -- $cur) )
                        ;;
                    "failover-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "reboot-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --reboot-master --reboot-slave " -- $cur) )
                        ;;
                    "enable-internet-access")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "disable-internet-access")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "restore-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --backup-id " -- $cur) )
                        ;;
                    "create-instance-from-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backup-id --engine --instance-spec " -- $cur) )
                        ;;
                    "modify-instance-spec")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --new-instance-class --new-instance-storage-gb " -- $cur) )
                        ;;
                    "create-instance-by-time")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --restore-time --instance-spec " -- $cur) )
                        ;;
                    "modify-connection-mode")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --connection-mode " -- $cur) )
                        ;;
                    "describe-index-performance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --query-type --db --page-number --page-size " -- $cur) )
                        ;;
                    "describe-query-performance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --query-type --threshold --page-number --page-size " -- $cur) )
                        ;;
                    "describe-slow-log-attributes")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --start-time --end-time --db-name --page-number --page-size " -- $cur) )
                        ;;
                    "describe-slow-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --start-time --end-time --db-name --page-number --page-size " -- $cur) )
                        ;;
                    "describe-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --ips " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "monitor")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-alarm-contacts")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --alarm-id --page-number --page-size --reference-type " -- $cur) )
                        ;;
                    "describe-alarm-history")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --service-code --resource-id --alarm-id --alarming --start-time --end-time --filters " -- $cur) )
                        ;;
                    "describe-alarms")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --service-code --resource-id --rule-type --status --enabled --is-alarming --alarm-id --filters " -- $cur) )
                        ;;
                    "create-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --contact-groups --contact-persons --down-sample --metric --notice-period --resource-ids --service-code --threshold --times " -- $cur) )
                        ;;
                    "describe-alarms-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --alarm-id " -- $cur) )
                        ;;
                    "update-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --alarm-id --contacts --rule --web-hook-content --web-hook-protocol --web-hook-secret --web-hook-url " -- $cur) )
                        ;;
                    "disable-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --alarm-id " -- $cur) )
                        ;;
                    "enable-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --alarm-id " -- $cur) )
                        ;;
                    "describe-metrics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --service-code " -- $cur) )
                        ;;
                    "describe-metrics-for-create-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --service-code " -- $cur) )
                        ;;
                    "last-downsample")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --metric --service-code --resource-id --tags --start-time --end-time --time-interval --aggr-type " -- $cur) )
                        ;;
                    "describe-metric-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --metric --service-code --resource-id --start-time --end-time --time-interval --tags --group-by " -- $cur) )
                        ;;
                    "put-metric-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --metric-data-list " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "iam")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "create-permission")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --create-permission-info " -- $cur) )
                        ;;
                    "describe-permission-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --permission-id " -- $cur) )
                        ;;
                    "update-permission")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --permission-id --update-permission-info " -- $cur) )
                        ;;
                    "describe-permissions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --keyword --query-type " -- $cur) )
                        ;;
                    "describe-sub-user-permissions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --sub-user --page-number --page-size " -- $cur) )
                        ;;
                    "add-permissions-to-sub-user")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --sub-user --add-permissions-info " -- $cur) )
                        ;;
                    "remove-permission-of-sub-user")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --permission-id --sub-user " -- $cur) )
                        ;;
                    "get-session-token")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --get-session-token-info " -- $cur) )
                        ;;
                    "verify-session-token")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --verify-session-token-info " -- $cur) )
                        ;;
                    "create-subuser")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --create-sub-user-info " -- $cur) )
                        ;;
                    "describe-user-access-keys")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-user-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "enabled-user-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key " -- $cur) )
                        ;;
                    "disabled-user-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key " -- $cur) )
                        ;;
                    "delete-user-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "cps")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-os")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --device-type " -- $cur) )
                        ;;
                    "describe-software")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --os-type-id " -- $cur) )
                        ;;
                    "describe-instance-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --name --description " -- $cur) )
                        ;;
                    "describe-device-types")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-device-raids")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --device-type --volume-type " -- $cur) )
                        ;;
                    "describe-instance-raid")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-instance-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "restart-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token " -- $cur) )
                        ;;
                    "stop-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token " -- $cur) )
                        ;;
                    "start-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token " -- $cur) )
                        ;;
                    "reinstall-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token --instance-spec " -- $cur) )
                        ;;
                    "modify-bandwidth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token --bandwidth " -- $cur) )
                        ;;
                    "describe-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --az --name --network-type --device-type --status --filters " -- $cur) )
                        ;;
                    "create-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --instance-spec " -- $cur) )
                        ;;
                    "describe-regiones")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "describe-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --az " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "disk")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-disks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --tags --filters " -- $cur) )
                        ;;
                    "create-disks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-spec --max-count --client-token " -- $cur) )
                        ;;
                    "describe-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-id " -- $cur) )
                        ;;
                    "modify-disk-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-id --name --description " -- $cur) )
                        ;;
                    "delete-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-id " -- $cur) )
                        ;;
                    "restore-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-id --snapshot-id " -- $cur) )
                        ;;
                    "extend-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-id --disk-size-gb " -- $cur) )
                        ;;
                    "describe-snapshots")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-snapshot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --snapshot-spec --client-token " -- $cur) )
                        ;;
                    "describe-snapshot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --snapshot-id " -- $cur) )
                        ;;
                    "modify-snp-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --snapshot-id --name --description " -- $cur) )
                        ;;
                    "delete-snapshot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --snapshot-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "datastar")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-package-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --device-ids " -- $cur) )
                        ;;
                    "get-large-screen-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --region --industry --start-date --end-date --first-index --second-index " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "mongodb")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --sorts " -- $cur) )
                        ;;
                    "create-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-spec --charge-spec " -- $cur) )
                        ;;
                    "delete-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "reset-password")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-password " -- $cur) )
                        ;;
                    "modify-instance-spec")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --instance-class --instance-storage-gb " -- $cur) )
                        ;;
                    "modify-instance-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --instance-name " -- $cur) )
                        ;;
                    "describe-backup-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-backup-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --preferred-backup-time " -- $cur) )
                        ;;
                    "restore-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --backup-id " -- $cur) )
                        ;;
                    "describe-flavors")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-available-zones")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-backups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --backup-name " -- $cur) )
                        ;;
                    "delete-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backup-id " -- $cur) )
                        ;;
                    "backup-download-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backup-id " -- $cur) )
                        ;;
                    "describe-security-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-security-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --modify-mode --security-ips " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "vpc")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-elastic-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-elastic-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --max-count --elastic-ip-address --elastic-ip-spec " -- $cur) )
                        ;;
                    "describe-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --elastic-ip-id " -- $cur) )
                        ;;
                    "delete-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --elastic-ip-id " -- $cur) )
                        ;;
                    "describe-network-acls")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-network-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --network-acl-name --description " -- $cur) )
                        ;;
                    "describe-network-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id " -- $cur) )
                        ;;
                    "modify-network-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id --network-acl-name --description " -- $cur) )
                        ;;
                    "delete-network-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id " -- $cur) )
                        ;;
                    "associate-network-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id --subnet-ids " -- $cur) )
                        ;;
                    "disassociate-network-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id --subnet-id " -- $cur) )
                        ;;
                    "add-network-acl-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id --network-acl-rule-specs " -- $cur) )
                        ;;
                    "remove-network-acl-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id --rule-ids " -- $cur) )
                        ;;
                    "modify-network-acl-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id --modify-network-acl-rule-specs " -- $cur) )
                        ;;
                    "describe-network-interfaces")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id --az --network-interface-name --primary-ip-address --secondary-ip-addresses --secondary-ip-count --security-groups --sanity-check --description " -- $cur) )
                        ;;
                    "describe-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id " -- $cur) )
                        ;;
                    "modify-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --network-interface-name --description --security-groups " -- $cur) )
                        ;;
                    "delete-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id " -- $cur) )
                        ;;
                    "associate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --elastic-ip-id --private-ip-address --elastic-ip-address " -- $cur) )
                        ;;
                    "disassociate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --elastic-ip-id --elastic-ip-address " -- $cur) )
                        ;;
                    "assign-secondary-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --force --secondary-ips --secondary-ip-count " -- $cur) )
                        ;;
                    "unassign-secondary-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --secondary-ips " -- $cur) )
                        ;;
                    "describe-network-security-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-network-security-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --network-security-group-name --description " -- $cur) )
                        ;;
                    "describe-network-security-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-security-group-id " -- $cur) )
                        ;;
                    "modify-network-security-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-security-group-id --network-security-group-name --description " -- $cur) )
                        ;;
                    "delete-network-security-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-security-group-id " -- $cur) )
                        ;;
                    "add-network-security-group-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-security-group-id --network-security-group-rule-specs " -- $cur) )
                        ;;
                    "remove-network-security-group-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-security-group-id --rule-ids " -- $cur) )
                        ;;
                    "modify-network-security-group-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-security-group-id --modify-security-group-rule-specs " -- $cur) )
                        ;;
                    "describe-quota")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --type --parent-resource-id " -- $cur) )
                        ;;
                    "describe-route-tables")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --route-table-name --description " -- $cur) )
                        ;;
                    "describe-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id " -- $cur) )
                        ;;
                    "modify-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id --route-table-name --description " -- $cur) )
                        ;;
                    "delete-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id " -- $cur) )
                        ;;
                    "add-route-table-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id --route-table-rule-specs " -- $cur) )
                        ;;
                    "remove-route-table-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id --rule-ids " -- $cur) )
                        ;;
                    "modify-route-table-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id --modify-route-table-rule-specs " -- $cur) )
                        ;;
                    "associate-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id --subnet-ids " -- $cur) )
                        ;;
                    "disassociate-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id --subnet-id " -- $cur) )
                        ;;
                    "describe-subnets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --subnet-name --address-prefix --route-table-id --description " -- $cur) )
                        ;;
                    "describe-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id " -- $cur) )
                        ;;
                    "modify-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id --subnet-name --description " -- $cur) )
                        ;;
                    "delete-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id " -- $cur) )
                        ;;
                    "describe-vpcs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-name --address-prefix --description " -- $cur) )
                        ;;
                    "describe-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id " -- $cur) )
                        ;;
                    "modify-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --vpc-name --description " -- $cur) )
                        ;;
                    "delete-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id " -- $cur) )
                        ;;
                    "describe-vpc-peerings")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-vpc-peering")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-peering-name --vpc-id --remote-vpc-id --description " -- $cur) )
                        ;;
                    "describe-vpc-peering")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-peering-id " -- $cur) )
                        ;;
                    "modify-vpc-peering")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-peering-id --vpc-peering-name --description " -- $cur) )
                        ;;
                    "delete-vpc-peering")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-peering-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "sop")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-security-token")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --get-security-token-info " -- $cur) )
                        ;;
                    "get-sensitive-op-setting")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --action " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "xdata")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "list-database-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-name " -- $cur) )
                        ;;
                    "get-database-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --database-name --instance-name " -- $cur) )
                        ;;
                    "create-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --database-name --instance-name --description " -- $cur) )
                        ;;
                    "delete-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --database-name --instance-name " -- $cur) )
                        ;;
                    "list-instance-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "execute-ras-query")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --database-name --sql --user-name --queue-name --source --call-back-url --instance-name --instance-owner-name --is-explain " -- $cur) )
                        ;;
                    "execute-py-spark-query")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --script --user-name --instance-name --instance-owner-name --script-type " -- $cur) )
                        ;;
                    "get-ras-query-state")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "get-py-spark-execute-state")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "get-ras-query-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "get-ras-query-result")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "get-py-spark-execute-result")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "cancel-ras-query")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "cancel-py-spark-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "list-table-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-name --database-name " -- $cur) )
                        ;;
                    "create-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-name --db-model-dbtable " -- $cur) )
                        ;;
                    "get-table-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --table-name --instance-name --database-name " -- $cur) )
                        ;;
                    "delete-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --table-name --instance-name --database-name " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "cr")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-authorization-token")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --expired-after-hours " -- $cur) )
                        ;;
                    "describe-authorization-tokens")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --filters --page-number --page-size " -- $cur) )
                        ;;
                    "release-authorization-token")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --authorization-token --force-all " -- $cur) )
                        ;;
                    "describe-images")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters --page-number --page-size " -- $cur) )
                        ;;
                    "delete-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --repository-name --image-digest --image-tag --image-tag-status " -- $cur) )
                        ;;
                    "describe-quotas")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters " -- $cur) )
                        ;;
                    "describe-registries")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-registry")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --description " -- $cur) )
                        ;;
                    "describe-registry")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name " -- $cur) )
                        ;;
                    "delete-registry")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name " -- $cur) )
                        ;;
                    "check-registry-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name " -- $cur) )
                        ;;
                    "create-repository")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --repository-name --description " -- $cur) )
                        ;;
                    "describe-repositories")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters --page-number --page-size " -- $cur) )
                        ;;
                    "delete-repository")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --repository-name " -- $cur) )
                        ;;
                    "check-repository-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --repository-name " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "nc")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-containers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-containers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-spec --max-count " -- $cur) )
                        ;;
                    "describe-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "delete-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "start-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "stop-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "modify-container-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --name --description " -- $cur) )
                        ;;
                    "associate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --elastic-ip-id " -- $cur) )
                        ;;
                    "disassociate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --elastic-ip-id " -- $cur) )
                        ;;
                    "get-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --tail-lines --since-seconds --limit-bytes " -- $cur) )
                        ;;
                    "describe-quota")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --resource-type " -- $cur) )
                        ;;
                    "describe-secrets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --secret-type --data " -- $cur) )
                        ;;
                    "describe-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "delete-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "clouddnsservice")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-action-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --start-time --end-time --key-word --success --type " -- $cur) )
                        ;;
                    "get-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --domain-name " -- $cur) )
                        ;;
                    "add-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pack-id --domain-name --domain-id --buy-type --time-span --time-unit --billing-type " -- $cur) )
                        ;;
                    "del-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id " -- $cur) )
                        ;;
                    "update-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-name --id " -- $cur) )
                        ;;
                    "get-domain-query-count")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --domain-name --start --end " -- $cur) )
                        ;;
                    "get-domain-query-traffic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --domain-name --start --end " -- $cur) )
                        ;;
                    "search-rr")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --page-number --page-size " -- $cur) )
                        ;;
                    "get-view-tree")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --load-mode --pack-id --view-id " -- $cur) )
                        ;;
                    "add-rr")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --req " -- $cur) )
                        ;;
                    "update-rr")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --req " -- $cur) )
                        ;;
                    "operate-rr")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --ids --action " -- $cur) )
                        ;;
                    "add-user-view")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --req " -- $cur) )
                        ;;
                    "del-user-view")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --req " -- $cur) )
                        ;;
                    "get-user-view")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --view-id --view-name --page-number --page-size " -- $cur) )
                        ;;
                    "add-user-view-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --req " -- $cur) )
                        ;;
                    "del-user-view-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --req " -- $cur) )
                        ;;
                    "get-user-view-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --view-id --view-name --page-number --page-size " -- $cur) )
                        ;;
                    "get-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --page-index --page-size --search-value " -- $cur) )
                        ;;
                    "add-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --sub-domain-name " -- $cur) )
                        ;;
                    "get-targets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --sub-domain-name " -- $cur) )
                        ;;
                    "add-monitor-target")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --sub-domain-name --targets " -- $cur) )
                        ;;
                    "operate-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --action --ids --switch-target " -- $cur) )
                        ;;
                    "update-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --update-monitor " -- $cur) )
                        ;;
                    "get-monitor-alarm-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --page-index --page-size --search-value " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "mps")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "list-thumbnail-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --status --begin --end --marker --limit " -- $cur) )
                        ;;
                    "create-thumbnail-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --task-id --status --error-code --created-time --last-updated-time --source --target --rule " -- $cur) )
                        ;;
                    "get-thumbnail-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --task-id " -- $cur) )
                        ;;
                    "get-notification")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "set-notification")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --enabled --endpoint --events --notify-strategy --notify-content-format " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "streambus")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-topic-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --keyword " -- $cur) )
                        ;;
                    "describe-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "add-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-model " -- $cur) )
                        ;;
                    "update-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-model " -- $cur) )
                        ;;
                    "delete-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "get-consumer-group-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-id " -- $cur) )
                        ;;
                    "create-consumer-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --consumer-group-str " -- $cur) )
                        ;;
                    "delete-consumer-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-id --consumer-group-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "oss")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "list-buckets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "put-bucket")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucketname " -- $cur) )
                        ;;
                    "delete-bucket")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucketname " -- $cur) )
                        ;;
                    "head-bucket")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucketname " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "baseanti")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-ip-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip " -- $cur) )
                        ;;
                    "describe-ip-resource-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip " -- $cur) )
                        ;;
                    "set-clean-threshold")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip --clean-threshold-spec " -- $cur) )
                        ;;
                    "describe-ip-resource-protect-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip --start --limit " -- $cur) )
                        ;;
                    "describe-ip-resource-flow")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip --end-time " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "streamcomputer")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --job-id --namespace-id " -- $cur) )
                        ;;
                    "add-or-update-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --job-str " -- $cur) )
                        ;;
                    "delete-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-id --job-id " -- $cur) )
                        ;;
                    "get-job-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-id " -- $cur) )
                        ;;
                    "start-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-id --job-id " -- $cur) )
                        ;;
                    "stop-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-id --job-id " -- $cur) )
                        ;;
                    "query-namespaces")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --keyword " -- $cur) )
                        ;;
                    "query-namespace-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-id " -- $cur) )
                        ;;
                    "create-namespace")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-str " -- $cur) )
                        ;;
                    "update-namespace")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-str " -- $cur) )
                        ;;
                    "delete-namespace")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-id " -- $cur) )
                        ;;
                    "describe-storage")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --storage-id " -- $cur) )
                        ;;
                    "add-or-update-storage")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --storage-str " -- $cur) )
                        ;;
                    "delete-storage")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --storage-id " -- $cur) )
                        ;;
                    "get-storage-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --storage-type --namespace-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "jke")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-quotas")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "ipanti")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-ddos-attack-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --start-time --end-time --instance-id " -- $cur) )
                        ;;
                    "describe-cc-attack-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --start-time --end-time --instance-id " -- $cur) )
                        ;;
                    "describe-cc-attack-log-details")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --start-time --end-time --instance-id --sub-domain " -- $cur) )
                        ;;
                    "ddos-graph")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --instance-id " -- $cur) )
                        ;;
                    "fwd-graph")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --instance-id " -- $cur) )
                        ;;
                    "cc-graph")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --instance-id --sub-domain " -- $cur) )
                        ;;
                    "describe-forward-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-spec " -- $cur) )
                        ;;
                    "describe-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "modify-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id --forward-rule-spec " -- $cur) )
                        ;;
                    "delete-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "switch-forward-rule-protect")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "switch-forward-rule-origin")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "describe-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --name " -- $cur) )
                        ;;
                    "create-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-spec " -- $cur) )
                        ;;
                    "describe-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-instance-cc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --c-cspec " -- $cur) )
                        ;;
                    "enable-instance-cc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "disable-instance-cc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-instance-url-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --url-white-list " -- $cur) )
                        ;;
                    "enable-instance-url-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "disable-instance-url-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-instance-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --name " -- $cur) )
                        ;;
                    "modify-instance-ip-black-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --ip-black-list " -- $cur) )
                        ;;
                    "enable-instance-ip-black-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "disable-instance-ip-black-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-instance-ip-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --ip-white-list " -- $cur) )
                        ;;
                    "enable-instance-ip-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "disable-instance-ip-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "enable-cc-observer-mode")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "disable-cc-observer-mode")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "enable-cc-ip-limit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "disable-cc-ip-limit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "set-cc-ip-limit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --c-cspec " -- $cur) )
                        ;;
                    "describe-web-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-spec " -- $cur) )
                        ;;
                    "describe-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "modify-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-rule-spec " -- $cur) )
                        ;;
                    "delete-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "switch-web-rule-protect")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "switch-web-rule-origin")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "enable-web-rule-cc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "disable-web-rule-cc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;


            "configure")
                case "$prev" in
                # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                "add")
                    COMPREPLY=( $(compgen -W "-h --help --access-key --region-id --secret-key --endpoint --profile --scheme" -- $cur) )
                    ;;

                "delete")
                    COMPREPLY=( $(compgen -W "-h --help --profile" -- $cur) )
                    ;;

                "show-current")
                    COMPREPLY=( $(compgen -W "-h --help" -- $cur) )
                    ;;

                "show-all")
                    COMPREPLY=( $(compgen -W "-h --help" -- $cur) )
                    ;;

                "use")
                    COMPREPLY=( $(compgen -W "-h --help --profile" -- $cur) )
                    ;;

                esac
        esac
    fi

    return 0

} &&
complete -F _jdc_complete jdc
