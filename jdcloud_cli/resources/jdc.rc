# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

_jdc_complete()
{
    local cur prev BASE_LEVEL

    COMPREPLY=()
    cur=${COMP_WORDS[COMP_CWORD]}
    prev=${COMP_WORDS[COMP_CWORD-1]}

    # SETUP THE BASE LEVEL
    if [ $COMP_CWORD -eq 1 ]; then
        COMPREPLY=( $(compgen \
                      -W "--debug -v --version -h --help configure rds kubernetes streamcomputer ssl ipanti oss redis domainservice billing deploy sop function portal logs jdccs clouddnsservice cps cdn streambus httpdns apigateway mps disk nc vm nativecontainer pod iotcore ams jdro zfs vod yundingdatapush datastar kms elite ossopenapi iam iothub sms jcq baseanti ias mongodb live jdfusion detection renewal iotlink yunding vpc monitor xdata containerregistry partner industrydata " \
                      -- $cur) )


    # SETUP THE SECOND LEVEL
    elif [ $COMP_CWORD -eq 2 ]; then
        case "$prev" in

            # HANDLE EVERYTHING AFTER THE SECOND LEVEL NAMESPACE
            "rds")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-accounts create-account delete-account grant-privilege revoke-privilege reset-password create-super-account describe-audit create-audit delete-audit describe-audit-options modify-audit describe-audit-files describe-audit-download-url enable-audit disable-audit describe-audit-result describe-azs describe-backups create-backup delete-backup describe-backup-download-url describe-backup-synchronicities create-backup-synchronicity delete-backup-synchronicity create-instance-by-time-in-cross-region describe-binlogs describe-binlog-download-url clear-binlogs alter-table-with-online-ddl describe-databases create-database delete-database restore-database-from-backup restore-database-from-file restore-database-from-oss describe-error-logs describe-import-files get-upload-key set-import-file-shared delete-import-file describe-instances create-instance describe-instance-attributes delete-instance describe-backup-policy modify-backup-policy modify-instance-name failover-instance reboot-instance enable-internet-access disable-internet-access restore-instance create-instance-from-backup modify-instance-spec create-instance-by-time create-roinstance modify-connection-mode describe-latest-restore-time modify-parameter-group exchange-instance-dns enable-intercept disable-intercept describe-intercept-result describe-intercept describe-logs update-log-download-urlinternal describe-log-download-url describe-parameters modify-parameters delete-parameter-group modify-parameter-group-attribute describe-parameter-groups create-parameter-group describe-parameter-group-parameters modify-parameter-group-parameters describe-parameter-modify-records copy-parameter-group describe-parameter-group-attached-instances describe-index-performance describe-query-performance describe-slow-log-attributes describe-slow-logs describe-active-query-performance describe-tde enable-tde describe-white-list modify-white-list " -- $cur) )
                ;;

            "kubernetes")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-clusters create-cluster describe-cluster modify-cluster delete-cluster set-user-metrics abort-upgrade describe-progress set-auto-upgrade upgrade-cluster set-addons describe-node-groups create-node-group describe-node-group modify-node-group delete-node-group set-node-group-size set-auto-repair rollback-node-group-upgrade set-node-group-ca delete-node-instances describe-quotas describe-server-config describe-versions describe-node-version describe-upgradable-master-versions describe-upgradable-node-versions " -- $cur) )
                ;;

            "streamcomputer")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-job add-or-update-job delete-job get-job-list start-job stop-job query-namespaces query-namespace-detail create-namespace update-namespace delete-namespace describe-storage add-or-update-storage delete-storage get-storage-list " -- $cur) )
                ;;

            "ssl")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-certs describe-cert delete-certs upload-cert download-cert update-cert-name update-cert " -- $cur) )
                ;;

            "ipanti")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-ddo-sattack-logs describe-ccattack-logs describe-ccattack-log-details describe-attack-statistics describe-attack-type-count describe-ddo-sgraph describe-fwd-graph describe-ccgraph describe-forward-rules create-forward-rule describe-forward-rule modify-forward-rule delete-forward-rule switch-forward-rule-protect switch-forward-rule-origin describe-protection-rule-of-forward-rule modify-protection-rule-of-forward-rule describe-geo-areas describe-black-list-rule-of-forward-rule modify-black-list-rule-of-forward-rule enable-black-list-rule-of-forward-rule disable-black-list-rule-of-forward-rule describe-white-list-rule-of-forward-rule modify-white-list-rule-of-forward-rule enable-white-list-rule-of-forward-rule disable-white-list-rule-of-forward-rule describe-instances create-instance describe-instance modify-instance-name modify-epb describe-alarm-config modify-alarm-config describe-name-list describe-protection-statistics check-name describe-vpc-ip-list describe-cps-ip-list describe-ip-sets create-ip-set describe-ip-set delete-ip-set describe-ip-set-usage describe-web-rules create-web-rule describe-web-rule modify-web-rule delete-web-rule switch-web-rule-protect switch-web-rule-origin enable-web-rule-cc disable-web-rule-cc enable-web-rule-ccobserver-mode disable-web-rule-ccobserver-mode describe-ccprotection-rules-of-web-rule create-ccprotection-rule-of-web-rule describe-ccprotection-rule-of-web-rule modify-ccprotection-rule-of-web-rule delete-ccprotection-rule-of-web-rule enable-ccprotection-rule-of-web-rule disable-ccprotection-rule-of-web-rule describe-ccprotection-config-of-web-rule modify-ccprotection-config-of-web-rule describe-ccprotection-default-config-of-web-rule modify-cert-info describe-web-rule-black-list-usage describe-black-list-rules-of-web-rule create-black-list-rule-of-web-rule describe-black-list-rule-of-web-rule modify-black-list-rule-of-web-rule delete-black-list-rule-of-web-rule enable-web-rule-black-list enable-black-list-rule-of-web-rule disable-web-rule-black-list disable-black-list-rule-of-web-rule describe-web-rule-white-list-usage describe-white-list-rules-of-web-rule create-white-list-rule-of-web-rule describe-white-list-rule-of-web-rule modify-white-list-rule-of-web-rule delete-white-list-rule-of-web-rule enable-web-rule-white-list enable-white-list-rule-of-web-rule disable-web-rule-white-list disable-white-list-rule-of-web-rule describe-web-rule-black-list-geo-areas describe-web-rule-white-list-geo-areas " -- $cur) )
                ;;

            "oss")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton list-buckets put-bucket delete-bucket head-bucket " -- $cur) )
                ;;

            "redis")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-cache-instances create-cache-instance describe-cache-instance modify-cache-instance-attribute delete-cache-instance modify-cache-instance-class reset-cache-instance-password describe-instance-config modify-instance-config describe-backups create-backup describe-backup-policy modify-backup-policy restore-instance describe-download-url describe-cluster-info describe-slow-log describe-instance-class describe-user-quota " -- $cur) )
                ;;

            "domainservice")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-action-log describe-domains create-domain modify-domain delete-domain describe-domain-query-count describe-domain-query-traffic describe-resource-record create-resource-record modify-resource-record delete-resource-record modify-resource-record-status describe-view-tree batch-set-resource-records describe-user-view create-user-view delete-user-view describe-user-view-ip create-user-view-ip delete-user-view-ip describe-monitor create-monitor modify-monitor describe-monitor-target create-monitor-target modify-monitor-status delete-monitor describe-monitor-alarm " -- $cur) )
                ;;

            "billing")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton query-bill-summary query-bill-detail calculate-total-price " -- $cur) )
                ;;

            "deploy")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-apps describe-app create-deploy describe-deploy describe-groups describe-group " -- $cur) )
                ;;

            "sop")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-security-token get-sensitive-op-setting " -- $cur) )
                ;;

            "function")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton list-alias create-alias get-alias update-alias delete-alias list-function create-function get-function update-function delete-function invoke async-invoke get-trigger list-version create-version get-version delete-version " -- $cur) )
                ;;

            "portal")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-product describe-products-by-id " -- $cur) )
                ;;

            "logs")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-collect-info update-collect-info describe-collect-resources update-collect-resources create-collect-info describe-logd-ca describe-instance-collect-confs describe-logsets create-logset describe-logset update-logset delete-logset describe-logtopics create-logtopic delete-logtopic describe-logtopic update-logtopic test-metric-task describe-metric-tasks create-metric-task describe-metric-task update-metric-task delete-metric-task put search-log-context search " -- $cur) )
                ;;

            "jdccs")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-metrics describe-metric-data last-downsample describe-bandwidth-traffics describe-bandwidth-traffic describe-idcs describe-rooms describe-cabinets " -- $cur) )
                ;;

            "clouddnsservice")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-action-log get-domains add-domain del-domain update-domain get-domain-query-count get-domain-query-traffic search-rr get-view-tree add-rr update-rr operate-rr batch-set-dns-resolve add-user-view del-user-view get-user-view add-user-view-ip del-user-view-ip get-user-view-ip get-monitor add-monitor get-targets add-monitor-target operate-monitor update-monitor get-monitor-alarm-info " -- $cur) )
                ;;

            "cps")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-elastic-ips apply-elastic-ips describe-elastic-ip modify-elastic-ip-bandwidth describe-device-types describe-os describe-device-raids describe-instance describe-instances create-instances describe-instance-name modify-instance describe-instance-raid describe-instance-status restart-instance stop-instance start-instance reinstall-instance modify-bandwidth associate-elastic-ip disassociate-elastic-ip reset-password describe-instance-monitor-info describe-keypairs create-keypairs import-keypairs describe-keypair delete-keypairs describe-listeners create-listener modify-listener describe-listener delete-listener start-listener stop-listener describe-load-balancers create-load-balancer modify-load-balancer describe-load-balancer start-load-balancer stop-load-balancer associate-elastic-ip-lb disassociate-elastic-ip-lb describe-regiones describe-cpslbregions describe-route-table describe-route-tables describe-servers add-servers modify-server remove-server describe-server-groups create-server-group describe-server-group modify-server-group delete-server-group describe-basic-subnet describe-subnets create-subnet describe-subnet modify-subnet delete-subnet describe-vpc modify-vpc delete-vpc describe-vpcs create-vpc " -- $cur) )
                ;;

            "cdn")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton query-online-billing-type set-online-billing-type query-band query-band-with-area query-domain-config-status query-area-isp-list preview-certificate query-default-http-header-key query-ip-black-list set-ip-black-list operate-ip-black-list create-cache-rule update-cache-rule delete-cache-rule query-http-header set-http-header delete-http-header set-video-draft set-range set-ignore-query-string query-user-agent set-user-agent-config query-accesskey-config set-accesskey-config set-refer query-monitor set-monitor stop-monitor set-source operate-share-cache set-http-type query-follow-redirect set-follow-redirect query-follow-source-protocol set-follow-source-protocol set-domain-config query-domain-group-list query-domain-group-detail query-domains-not-in-group update-domain-group create-domain-group batch-delete-domain-group get-domain-list get-domain-list-by-filter get-domain-detail create-domain delete-domain start-domain stop-domain query-oss-buckets batch-create query-domain-config check-whether-ip-belong-to-jcloud set-live-domain-back-source set-live-domain-ip-black-list set-live-domain-refer operate-live-domain-ip-black-list set-live-domain-back-source-host set-live-domain-access-key set-protocol-convert delete-forbidden-stream query-push-domain-orapp-or-stream operate-live-domain-ignore-query-string set-push-ip-white-list set-publish-normal-timeout set-stream-notify-info set-forward-authentication set-origin-authentication batch-create-live-domain create-live-domain bind-publish-domain modify-live-domain-forward-custom-vhost query-live-domain-detail query-live-domain-detail-v2 describe-publish-domains describebinded-domains query-live-domain-apps create-live-domain-prefecth-task query-live-prefetch-task query-refresh-task-by-ids query-refresh-task-by-id create-refresh-task-for-callback create-refresh-task-for-callback-v2 query-refresh-task create-refresh-task query-net-protection-rules set-net-protection-rules query-net-protection-rules-switch set-net-protection-rules-switch query-geo-areas query-attack-type-count query-ddos-graph search-attack-log get-all-upper-node-ip-list get-ssl-cert-list get-ssl-cert-detail upload-cert query-mix-statistics-data query-mix-statistics-with-area-data query-mix-traffic-group-sum query-statistics-data query-statistics-data-group-by-area query-statistics-data-group-sum query-live-statistics-data query-live-statistics-area-data-group-by query-live-traffic-group-sum query-statistics-top-ip query-domains-log query-domain-log query-statistics-top-url query-waf-switch set-waf-switch query-waf-white-rule-switch set-waf-white-rule-switch querywaf-white-rules create-waf-white-rule update-waf-white-rule enable-waf-white-rules disable-waf-white-rules delete-waf-white-rules query-waf-black-rule-switch set-waf-black-rule-switch querywaf-black-rules create-waf-black-rule update-waf-black-rule enable-waf-black-rules disable-waf-black-rules delete-waf-black-rules query-ccprotect-switch set-ccprotect-switch query-ccprotect-rules create-ccprotect-rule update-ccprotect-rule enable-ccprotect-rule disable-ccprotect-rule delete-ccprotect-rule query-web-protect-switch set-web-protect-switch query-web-protect-settings update-web-protect-settings query-waf-regions query-ip-black-setting-status waf-query-pv-for-area-and-ip waf-query-pv waf-query-attack-details " -- $cur) )
                ;;

            "streambus")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-topic-list describe-topic add-topic update-topic delete-topic get-consumer-group-list create-consumer-group delete-consumer-group " -- $cur) )
                ;;

            "httpdns")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-account-id create-account get-account-info operate-key get-domains add-domains del-domains " -- $cur) )
                ;;

            "apigateway")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton query-access-auths create-access-auth check-auth-exist query-access-auth update-access-auth delete-access-auth query-bind-group-auth bind-group-auth query-auth-group-list authorized-api-group-list query-access-keys create-access-key check-key-exist query-access-key update-access-key delete-access-key query-bind-group-key bind-group-key query-key-group-list query-apis create-apis check-api-name-exist query-api update-api delete-api update-api-by-name delete-api-by-name describe-api-groups create-api-group check-group-name-exist describe-api-group modify-api-group-attribute delete-api-group describe-is-deploy-api-groups create-backend-config describe-backend-configs describe-backend-config update-backend-config delete-backend-config describe-deployments deploy describe-deployment offline batch-offline query-keys create-key reset-key update-key query-key-info query-rate-limit-policies create-rate-limit-policy check-policy-name query-rate-limit-policy update-rate-limit-policy delete-rate-limit-policy query-bind-group-policy bind-group-policy query-policy-group-list describe-revisions create-revision get-revision-ids check-revision-exist query-revision modify-revision delete-revision query-subscription-keys create-subscription-key query-subscription-key update-subscription-key delete-subscription-key query-uc-access-keys check-pin query-user-domains create-user-domain delete-user-domain " -- $cur) )
                ;;

            "mps")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-style-delimiter set-style-delimiter delete-style-delimiter list-thumbnail-task create-thumbnail-task get-thumbnail-task get-notification set-notification " -- $cur) )
                ;;

            "disk")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-disks create-disks describe-disk modify-disk-attribute delete-disk restore-disk extend-disk describe-snapshots create-snapshot describe-snapshot modify-snapshot-attribute delete-snapshot " -- $cur) )
                ;;

            "nc")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-containers create-containers describe-container delete-container start-container stop-container modify-container-attribute associate-elastic-ip disassociate-elastic-ip get-logs describe-quota describe-secrets create-secret describe-secret delete-secret " -- $cur) )
                ;;

            "vm")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-image delete-image describe-images describe-image-constraints describe-image-constraints-batch share-image un-share-image release-image un-release-image describe-image-members copy-images modify-image-attribute import-image image-tasks describe-instances create-instances describe-instance delete-instance describe-instance-status describe-instance-private-ip-address stop-instance start-instance reboot-instance attach-network-interface detach-network-interface modify-instance-network-attribute associate-elastic-ip disassociate-elastic-ip create-image attach-disk detach-disk modify-instance-disk-attribute modify-instance-attribute modify-instance-password describe-instance-vnc-url resize-instance rebuild-instance describe-instance-templates create-instance-template describe-instance-template update-instance-template delete-instance-template verify-instance-template describe-instance-types describe-keypairs create-keypair import-keypair delete-keypair describe-quotas " -- $cur) )
                ;;

            "nativecontainer")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-containers create-containers describe-container delete-container start-container stop-container modify-container-attribute associate-elastic-ip disassociate-elastic-ip get-logs rebuild-container resize-container exec-create exec-get-exit-code resize-tty describe-instance-types describe-quota describe-secrets create-secret describe-secret delete-secret " -- $cur) )
                ;;

            "pod")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-container attach exec-create exec-get-exit-code resize-tty describe-instance-types describe-pods create-pods check-pod-name describe-pod delete-pod start-pod stop-pod modify-pod-attribute associate-elastic-ip disassociate-elastic-ip get-container-logs rebuild-pod resize-pod describe-quota describe-secrets create-secret describe-secret delete-secret " -- $cur) )
                ;;

            "iotcore")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton invoke-thing-topic describe-thing-shadow update-thing-shadow invoke-thing-service query-device-page update-device add-device query-device-detail remove-device list-products create-product describe-product update-product delete-product list-product-abilities import-thing-model export-thing-model create-product-topic " -- $cur) )
                ;;

            "ams")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-streams-input describe-authenticate " -- $cur) )
                ;;

            "jdro")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-resource-type-list describe-resource-type-specification describe-stacks create-stack describe-stack delete-stack create-change-set execute-change-set describe-stack-events describe-stack-resources describe-stack-template validate-template " -- $cur) )
                ;;

            "zfs")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-file-systems create-file-system describe-file-system modify-file-system-attribute delete-file-system describe-mount-targets create-mount-target describe-mount-target delete-mount-target " -- $cur) )
                ;;

            "vod")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton list-categories create-category get-category-with-children get-category update-category delete-category list-domains create-domain get-domain delete-domain enable-domain disable-domain set-default-domain set-header list-headers delete-header set-referer-rule get-referer-rule set-urlrule get-urlrule set-iprule get-iprule set-http-ssl get-http-ssl create-video-upload-task refresh-video-upload-task create-image-upload-task submit-quality-detection-job batch-submit-quality-detection-jobs list-quality-detection-templates create-quality-detection-template get-quality-detection-template update-quality-detection-template delete-quality-detection-template submit-transcode-job batch-submit-transcode-jobs list-transcode-templates create-transcode-template get-transcode-template update-transcode-template delete-transcode-template list-videos get-video update-video delete-video batch-delete-videos batch-update-videos get-video-play-info delete-video-streams list-watermarks create-watermark get-watermark update-watermark delete-watermark " -- $cur) )
                ;;

            "yundingdatapush")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-datapush-venders add-datapush-vender delete-datapush-vender describe-rds-instances " -- $cur) )
                ;;

            "datastar")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-large-screen-data " -- $cur) )
                ;;

            "kms")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-key-list create-key describe-key update-key-description enable-key disable-key schedule-key-deletion cancel-key-deletion key-rotation encrypt decrypt get-public-key sign validate generate-data-key describe-key-detail enable-key-version disable-key-version schedule-key-version-deletion cancel-key-version-deletion describe-secret-list create-secret import-secret describe-secret-version-list update-secret enable-secret disable-secret delete-secret create-secret-version export-secret describe-secret-version-info update-secret-version enable-secret-version disable-secret-version delete-secret-version " -- $cur) )
                ;;

            "elite")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton jdx-query-delivery-info jdx-report-order jdx-create-order jdx-query-price jdx-query-product list-sale-service get-sale-service-by-deliver-number confirm-sale-service-delivery get-store-service " -- $cur) )
                ;;

            "ossopenapi")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-single-bucket-capacity get-back-source-configuration put-back-source-configuration delete-back-source-configuration " -- $cur) )
                ;;

            "iam")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton enable-sub-user-access-key disable-sub-user-access-key delete-sub-user-access-key create-group describe-group update-group delete-group describe-group-sub-users describe-groups describe-attached-group-policies detach-group-policy attach-group-policy remove-sub-user-from-group add-sub-user-to-group create-permission describe-permission-detail update-permission describe-permissions describe-sub-user-permissions add-permissions-to-sub-user remove-permission-of-sub-user create-policy describe-policy update-policy delete-policy update-policy-description describe-policies create-role describe-role delete-role update-assume-role-policy describe-roles attach-role-policy detach-role-policy describe-role-policies create-sub-user describe-sub-user update-sub-user delete-sub-user describe-sub-users describe-sub-user-groups describe-attached-sub-user-policies detach-sub-user-policy attach-sub-user-policy describe-user-access-keys create-user-access-key enabled-user-access-key disabled-user-access-key delete-user-access-key " -- $cur) )
                ;;

            "iothub")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-thing-shadow update-thing-shadow invoke-thing-service query-device-page update-device add-device query-device-detail remove-device remove-device-by-id list-products create-product describe-product update-product delete-product list-product-abilities import-thing-model export-thing-model " -- $cur) )
                ;;

            "sms")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton batch-send status-report reply " -- $cur) )
                ;;

            "jcq")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-access-point describe-consumer-group-ids describe-dead-letter-numbers describe-dead-letter-numbers-with-topic list-dead-letters delete-dead-letters resend-dead-letters describe-messages describe-message describe-message-trace describe-messages-by-business-id describe-permission add-permission remove-permission describe-subscriptions create-subscription describe-subscription modify-subscription-attribute delete-subscription clean-messages reset-consume-offset describe-topics create-topic describe-topic delete-topic " -- $cur) )
                ;;

            "baseanti")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-attack-logs describe-attack-statistics describe-attack-type-count describe-ip-monitor-flow describe-ip-resources describe-elastic-ip-resources describe-cps-ip-resources describe-ccs-ip-resources describe-ip-resource-info describe-ip-safety-info set-clean-threshold set-ip-clean-threshold describe-ip-clean-threshold-range describe-ip-resource-protect-info describe-ip-resource-flow " -- $cur) )
                ;;

            "ias")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton apps app-detail state create-app get-app update-app delete-app get-apps " -- $cur) )
                ;;

            "mongodb")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-instances create-instance delete-instance reset-password modify-instance-spec modify-instance-name describe-backup-policy modify-backup-policy restore-instance describe-flavors describe-available-zones describe-backups create-backup delete-backup backup-download-url describe-security-ips modify-security-ips " -- $cur) )
                ;;

            "live")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-live-app add-live-app stop-live-app describe-live-play-auth-key set-live-play-auth-key describe-live-restart-auth-key set-live-restart-auth-key describe-live-domain-certificate set-live-domain-certificate describe-live-restart-domain-certificate set-live-restart-domain-certificate describe-live-domains add-live-domain start-live-domain stop-live-domain describe-live-domain-detail delete-live-domain add-live-restart-domain add-custom-live-stream-quality-detection-template describe-custom-live-stream-quality-detection-templates add-live-stream-app-quality-detection add-live-stream-domain-quality-detection set-live-stream-quality-detection-notify-config delete-custom-live-stream-quality-detection-template delete-live-stream-app-quality-detection delete-live-stream-domain-quality-detection describe-live-stream-quality-detection-notify-config delete-live-stream-quality-detection-notify-config describe-quality-detection-binding open-live-p2p close-live-p2p describe-live-p2p-configs describe-custom-live-stream-record-templates add-custom-live-stream-record-template add-live-stream-app-record add-live-stream-domain-record describe-custom-live-stream-record-config set-live-stream-record-notify-config delete-custom-live-stream-record-template delete-live-stream-app-record delete-live-stream-domain-record describe-live-stream-record-notify-config delete-live-stream-record-notify-config add-live-record-task describe-record-binding describe-live-statistic-group-by-stream describe-live-statistic-group-by-area describe-live-statistic-group-by-area-isp describe-publish-stream-info-data describe-live-stream-history-user-num describe-live-publish-stream-num describe-live-stream-player-ranking-data describe-live-transcode-stream-list describe-live-transcode-stream-num describe-live-transcode-stream-player-user-num describe-live-transcode-stream-bandwidth describe-domain-online-stream describe-domains-log describe-url-ranking describe-live-transcoding-duration-data describe-live-file-storage-data describe-live-stream-bandwidth-data describe-live-stream-publish-bandwidth-data describe-live-stream-traffic-data describe-live-stream-publish-traffic-data describe-live-snapshot-data describe-live-porn-data add-custom-live-stream-snapshot-template describe-custom-live-stream-snapshot-config describe-custom-live-stream-snapshot-templates add-live-stream-app-snapshot add-live-stream-domain-snapshot set-live-stream-snapshot-notify-config delete-custom-live-stream-snapshot-template delete-live-stream-app-snapshot delete-live-stream-domain-snapshot describe-live-stream-snapshot-notify-config delete-live-stream-snapshot-notify-config describe-snapshot-binding forbid-live-stream resume-live-stream interrupt-live-stream describe-live-stream-info set-live-stream-notify-config describe-live-stream-notify-config delete-live-stream-notify-config describe-live-stream-online-list describe-live-stream-publish-list open-live-restart close-live-restart describe-live-restart-configs open-live-timeshift close-live-timeshift describe-live-timeshift-configs add-live-stream-domain-transcode add-live-stream-app-transcode add-custom-live-stream-transcode-template describe-custom-live-stream-transcode-templates describe-system-live-stream-transcode-templates describe-live-stream-transcode-config delete-live-stream-domain-transcode delete-live-stream-app-transcode describe-custom-live-stream-transcode-template delete-custom-live-stream-transcode-template describe-transcode-binding add-custom-live-stream-watermark-template describe-custom-live-stream-watermark-templates add-live-stream-app-watermark add-live-stream-domain-watermark describe-custom-live-stream-watermark-config delete-custom-live-stream-watermark-template delete-live-stream-app-watermark delete-live-stream-domain-watermark describe-watermark-binding " -- $cur) )
                ;;

            "jdfusion")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-cloud-infos regist-cloud-info get-cloud-info-by-id unregist-cloud-info valid-cloud-info get-deployments create-deployment reverse-deployment get-deployments-by-id edit-deployment delete-deployment clone-deployment dryrun-deployment apply-deployment get-deployment-result get-deployment-versions get-deployments-version rollback-deployments-version get-deployments-results-by-id-record get-disks create-disk get-disk-by-id remove-disk-by-id attach-disk-to-vm-instance-by-disk-id detach-disk-to-vm-instance-by-disk-id get-buckets create-bucket get-bucket-by-name delete-bucket get-bucket-files get-transfer-tasks create-transfer-task get-transfer-task-by-id edit-transfer-task delete-transfer-task start-transfer-task stop-transfer-task get-transfer-task-progress get-transfer-task-failed-files get-rds-accounts-by-inst-id create-rds-accounts get-rds-accounts-by-inst-id-and-account-name delete-rds-account grant-rds-account revoke-rds-account grant-rds-accounts-by-task get-rds-databases-by-inst-id create-rds-database get-rds-database-by-inst-id-and-db-name delete-rds-database get-rds-instances create-rds-instance get-rds-by-inst-id delete-rds-by-inst-id get-channels create-channel delete-channel start-channel stop-channel get-datasources create-datasource delete-datasource get-rds-specification get-regions get-regions-available-zones get-task-info-history-by-id get-task-info-by-id get-vm-images get-vm-instances-by-id delete-vm-instance-by-id get-vm-instances create-vm-instance stop-vm-instance-by-id start-vm-instance-by-id reboot-vm-instance-by-id get-vm-instance-types get-vm-keypairs-by-name delete-vm-keypair-by-name get-vm-keypairs create-vm-keypair get-vpc-eips create-vpc-eip get-vpc-eip-by-id delete-vpc-eip-by-id associate-vpc-eip-by-id disassociate-vpc-eip-by-id get-lb-http-listener create-vpc-lbhttp-listener get-vpc-network-interface-by-id delete-vpc-network-interface-by-id get-vpc-network-interfaces create-vpc-network-interface attach-vpc-network-interface-by-id detach-vpc-network-interface-by-id get-vpc-security-group-by-id delete-vpc-security-group-by-id get-vpc-security-groups create-vpc-security-group create-security-groups-rule delete-security-groups-rule get-vpc-slb-by-id delete-vpc-slb-by-id get-vpc-slbs create-vpc-slb start-slb stop-slb delete-slbs-listener start-slb-listener stop-slb-listener get-vpc-subnet-by-id delete-vpc-subnet-by-id get-vpc-subnets create-vpc-subnet get-vpc-by-id delete-vpc-by-id get-vpcs create-vpc get-vpc-vserver-groups create-vpc-vserver-group get-vserver-groups-by-id delete-vserver-group " -- $cur) )
                ;;

            "detection")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-agent-status describe-metric-data-am create-probe-task delete-probe-task describe-probe-task update-probe-task describe-probe-history discribe-probes probe-task-enable describe-probe-tasks get-site-monitor create-site-monitor update-site-monitor delete-site-monitor enable-site-monitor validate-site-monitor-address get-site-monitor-data-points get-site-monitor-source test-site-monitor " -- $cur) )
                ;;

            "renewal")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton set-renewal query-instance renew-instance " -- $cur) )
                ;;

            "iotlink")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton gprs-status on-off-status life-status gprs-realtime-info open-iot-card close-iot-card open-iot-flow close-iot-flow " -- $cur) )
                ;;

            "yunding")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton assign-secondary-ips unassign-secondary-ips describe-rds-instances describe-rds-instance describe-instance-info describe-rds-white-list modify-rds-white-list describe-rds-accounts create-rds-account delete-rds-account grant-rds-privilege describe-rds-databases create-rds-database delete-rds-database describe-yd-rds-instances " -- $cur) )
                ;;

            "vpc")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-elastic-ips create-elastic-ips describe-elastic-ip modify-elastic-ip delete-elastic-ip describe-network-acls create-network-acl describe-network-acl modify-network-acl delete-network-acl associate-network-acl disassociate-network-acl add-network-acl-rules remove-network-acl-rules modify-network-acl-rules describe-network-interfaces create-network-interface describe-network-interface modify-network-interface delete-network-interface associate-elastic-ip disassociate-elastic-ip assign-secondary-ips unassign-secondary-ips describe-network-security-groups create-network-security-group describe-network-security-group modify-network-security-group delete-network-security-group add-network-security-group-rules remove-network-security-group-rules modify-network-security-group-rules describe-quota describe-route-tables create-route-table describe-route-table modify-route-table delete-route-table add-route-table-rules remove-route-table-rules modify-route-table-rules associate-route-table disassociate-route-table describe-subnets create-subnet describe-subnet modify-subnet delete-subnet describe-vpcs create-vpc describe-vpc modify-vpc delete-vpc describe-vpc-peerings create-vpc-peering describe-vpc-peering modify-vpc-peering delete-vpc-peering " -- $cur) )
                ;;

            "monitor")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton describe-alarms create-alarm describe-alarm update-alarm delete-alarms describe-alarm-contacts describe-metrics-for-alarm describe-products-for-alarm enable-alarms describe-alarm-history describe-metrics last-downsample describe-metric-data describe-services put-metric-data " -- $cur) )
                ;;

            "xdata")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton list-database-info get-database-info create-database delete-database list-instance-info execute-ras-query execute-py-spark-query get-ras-query-state get-py-spark-execute-state get-ras-query-log get-ras-query-result get-py-spark-execute-result cancel-ras-query cancel-py-spark-job list-table-info create-table get-table-info delete-table " -- $cur) )
                ;;

            "containerregistry")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-authorization-token describe-authorization-tokens release-authorization-token describe-images delete-image describe-quotas describe-registries create-registry describe-registry delete-registry check-registry-name create-repository describe-repositories delete-repository check-repository-name " -- $cur) )
                ;;

            "partner")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton query-my-customer-list get-total-consumption get-each-consumption describe-customer-bill-by-product " -- $cur) )
                ;;

            "industrydata")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help generate-skeleton get-large-screen-data " -- $cur) )
                ;;


            "configure")
                COMPREPLY=( $(compgen \
                    -W "-v --version -h --help add delete show-current show-all use" -- $cur) )
                ;;
        esac

    # SETUP THE THIRD LEVEL
    elif [ $COMP_CWORD -gt 2 ]; then
        service=${COMP_WORDS[1]}
        prev=${COMP_WORDS[2]}

	    case "$service" in
	        "rds")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-accounts")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --account-password " -- $cur) )
                        ;;
                    "delete-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name " -- $cur) )
                        ;;
                    "grant-privilege")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --account-privileges " -- $cur) )
                        ;;
                    "revoke-privilege")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --db-names " -- $cur) )
                        ;;
                    "reset-password")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --account-password " -- $cur) )
                        ;;
                    "create-super-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --account-password " -- $cur) )
                        ;;
                    "describe-audit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "create-audit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --enabled " -- $cur) )
                        ;;
                    "delete-audit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-audit-options")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --name " -- $cur) )
                        ;;
                    "modify-audit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --add --drop " -- $cur) )
                        ;;
                    "describe-audit-files")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-audit-download-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --file-name " -- $cur) )
                        ;;
                    "enable-audit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "disable-audit")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-audit-result")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --start-time --end-time --db-name --account-name --page-number --page-size --filters " -- $cur) )
                        ;;
                    "describe-azs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --engine " -- $cur) )
                        ;;
                    "describe-backups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --auto --backup-type-filter --db-name-filter --backup-time-range-start-filter --backup-time-range-end-filter --page-number --page-size " -- $cur) )
                        ;;
                    "create-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --backup-spec " -- $cur) )
                        ;;
                    "delete-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backup-id " -- $cur) )
                        ;;
                    "describe-backup-download-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backup-id --file-name --url-expiration-second " -- $cur) )
                        ;;
                    "describe-backup-synchronicities")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-backup-synchronicity")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --dest-region " -- $cur) )
                        ;;
                    "delete-backup-synchronicity")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --service-id " -- $cur) )
                        ;;
                    "create-instance-by-time-in-cross-region")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --restore-time --service-id --instance-spec " -- $cur) )
                        ;;
                    "describe-binlogs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size --start-time --end-time " -- $cur) )
                        ;;
                    "describe-binlog-download-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --binlog-backup-id --seconds " -- $cur) )
                        ;;
                    "clear-binlogs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "alter-table-with-online-ddl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --database --table --command " -- $cur) )
                        ;;
                    "describe-databases")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --page-number --page-size " -- $cur) )
                        ;;
                    "create-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --character-set-name " -- $cur) )
                        ;;
                    "delete-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name " -- $cur) )
                        ;;
                    "restore-database-from-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --backup-id --backup-file-name " -- $cur) )
                        ;;
                    "restore-database-from-file")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --shared-file-gid --file-name " -- $cur) )
                        ;;
                    "restore-database-from-oss")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --oss-url " -- $cur) )
                        ;;
                    "describe-error-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-import-files")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "get-upload-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "set-import-file-shared")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --file-name --shared " -- $cur) )
                        ;;
                    "delete-import-file")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --file-name --shared-file-gid " -- $cur) )
                        ;;
                    "describe-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --tag-filters " -- $cur) )
                        ;;
                    "create-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-spec " -- $cur) )
                        ;;
                    "describe-instance-attributes")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "delete-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-backup-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-backup-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --start-window " -- $cur) )
                        ;;
                    "modify-instance-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --instance-name " -- $cur) )
                        ;;
                    "failover-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "reboot-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --reboot-master --reboot-slave " -- $cur) )
                        ;;
                    "enable-internet-access")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "disable-internet-access")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "restore-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --backup-id " -- $cur) )
                        ;;
                    "create-instance-from-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backup-id --engine --instance-spec " -- $cur) )
                        ;;
                    "modify-instance-spec")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --new-instance-class --new-instance-storage-gb --new-instance-storage-type --storage-encrypted " -- $cur) )
                        ;;
                    "create-instance-by-time")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --restore-time --instance-spec " -- $cur) )
                        ;;
                    "create-roinstance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --instance-name --instance-class --instance-storage-type --instance-storage-gb --az-id --vpc-id --subnet-id --parameter-group --storage-encrypted --count " -- $cur) )
                        ;;
                    "modify-connection-mode")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --connection-mode " -- $cur) )
                        ;;
                    "describe-latest-restore-time")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-parameter-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --parameter-group-id " -- $cur) )
                        ;;
                    "exchange-instance-dns")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --target-instance-id " -- $cur) )
                        ;;
                    "enable-intercept")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "disable-intercept")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-intercept-result")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size " -- $cur) )
                        ;;
                    "describe-intercept")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "update-log-download-urlinternal")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --log-id --seconds " -- $cur) )
                        ;;
                    "describe-log-download-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --log-id --seconds " -- $cur) )
                        ;;
                    "describe-parameters")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-parameters")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --parameters " -- $cur) )
                        ;;
                    "delete-parameter-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --parameter-group-id " -- $cur) )
                        ;;
                    "modify-parameter-group-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --parameter-group-id --parameter-group-name --description " -- $cur) )
                        ;;
                    "describe-parameter-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-parameter-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --engine --engine-version --parameter-group-name --description " -- $cur) )
                        ;;
                    "describe-parameter-group-parameters")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --parameter-group-id " -- $cur) )
                        ;;
                    "modify-parameter-group-parameters")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --parameter-group-id --parameters " -- $cur) )
                        ;;
                    "describe-parameter-modify-records")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --parameter-group-id --page-number --page-size --start-time --end-time " -- $cur) )
                        ;;
                    "copy-parameter-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --parameter-group-id --parameter-group-name --description " -- $cur) )
                        ;;
                    "describe-parameter-group-attached-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --parameter-group-id --page-number --page-size " -- $cur) )
                        ;;
                    "describe-index-performance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --query-type --db --page-number --page-size " -- $cur) )
                        ;;
                    "describe-query-performance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --query-type --threshold --page-number --page-size " -- $cur) )
                        ;;
                    "describe-slow-log-attributes")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --start-time --end-time --db-name --page-number --page-size " -- $cur) )
                        ;;
                    "describe-slow-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --start-time --end-time --db-name --page-number --page-size " -- $cur) )
                        ;;
                    "describe-active-query-performance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db --threshold --page-number --page-size " -- $cur) )
                        ;;
                    "describe-tde")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "enable-tde")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --ips " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "kubernetes")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-clusters")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-cluster")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --description --basic-auth --client-certificate --version --azs --node-group --master-cidr --access-key --secret-key --user-metrics --addons-config " -- $cur) )
                        ;;
                    "describe-cluster")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id " -- $cur) )
                        ;;
                    "modify-cluster")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id --name --description " -- $cur) )
                        ;;
                    "delete-cluster")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id " -- $cur) )
                        ;;
                    "set-user-metrics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id --enabled " -- $cur) )
                        ;;
                    "abort-upgrade")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id " -- $cur) )
                        ;;
                    "describe-progress")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id --node-group-ids " -- $cur) )
                        ;;
                    "set-auto-upgrade")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id --auto-upgrade --maintenance-window " -- $cur) )
                        ;;
                    "upgrade-cluster")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id --scope --node-group-ids --version " -- $cur) )
                        ;;
                    "set-addons")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id --addons-config " -- $cur) )
                        ;;
                    "describe-node-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --tags --filters " -- $cur) )
                        ;;
                    "create-node-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --description --cluster-id --node-config --azs --initial-node-count --vpc-id --node-cidr --auto-repair --ca-config " -- $cur) )
                        ;;
                    "describe-node-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --node-group-id " -- $cur) )
                        ;;
                    "modify-node-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --node-group-id --name --description " -- $cur) )
                        ;;
                    "delete-node-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --node-group-id " -- $cur) )
                        ;;
                    "set-node-group-size")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --node-group-id --expect-count " -- $cur) )
                        ;;
                    "set-auto-repair")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --node-group-id --enabled " -- $cur) )
                        ;;
                    "rollback-node-group-upgrade")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --node-group-id " -- $cur) )
                        ;;
                    "set-node-group-ca")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --node-group-id --ca-config " -- $cur) )
                        ;;
                    "delete-node-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --node-group-id --instance-ids " -- $cur) )
                        ;;
                    "describe-quotas")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters " -- $cur) )
                        ;;
                    "describe-server-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-versions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --master-version " -- $cur) )
                        ;;
                    "describe-node-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --node-version " -- $cur) )
                        ;;
                    "describe-upgradable-master-versions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id " -- $cur) )
                        ;;
                    "describe-upgradable-node-versions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cluster-id --node-group-ids " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "streamcomputer")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --job-id --namespace-id " -- $cur) )
                        ;;
                    "add-or-update-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --job-str " -- $cur) )
                        ;;
                    "delete-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-id --job-id " -- $cur) )
                        ;;
                    "get-job-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-id " -- $cur) )
                        ;;
                    "start-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-id --job-id " -- $cur) )
                        ;;
                    "stop-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-id --job-id " -- $cur) )
                        ;;
                    "query-namespaces")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --keyword " -- $cur) )
                        ;;
                    "query-namespace-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-id " -- $cur) )
                        ;;
                    "create-namespace")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-str " -- $cur) )
                        ;;
                    "update-namespace")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-str " -- $cur) )
                        ;;
                    "delete-namespace")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --namespace-id " -- $cur) )
                        ;;
                    "describe-storage")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --storage-id " -- $cur) )
                        ;;
                    "add-or-update-storage")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --storage-str " -- $cur) )
                        ;;
                    "delete-storage")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --storage-id " -- $cur) )
                        ;;
                    "get-storage-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --storage-type --namespace-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "ssl")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-certs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --domain-name --cert-ids " -- $cur) )
                        ;;
                    "describe-cert")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --cert-id --page-number --page-size " -- $cur) )
                        ;;
                    "delete-certs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --cert-id " -- $cur) )
                        ;;
                    "upload-cert")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --cert-name --key-file --cert-file --alias-name " -- $cur) )
                        ;;
                    "download-cert")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --cert-id --server-type " -- $cur) )
                        ;;
                    "update-cert-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --cert-id --cert-name " -- $cur) )
                        ;;
                    "update-cert")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --cert-id --key-file --cert-file " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "ipanti")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-ddo-sattack-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --start-time --end-time --instance-id " -- $cur) )
                        ;;
                    "describe-ccattack-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --start-time --end-time --instance-id " -- $cur) )
                        ;;
                    "describe-ccattack-log-details")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --start-time --end-time --instance-id --sub-domain --attack-id " -- $cur) )
                        ;;
                    "describe-attack-statistics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --instance-id --type " -- $cur) )
                        ;;
                    "describe-attack-type-count")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --instance-id " -- $cur) )
                        ;;
                    "describe-ddo-sgraph")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --instance-id " -- $cur) )
                        ;;
                    "describe-fwd-graph")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --instance-id " -- $cur) )
                        ;;
                    "describe-ccgraph")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --instance-id --sub-domain " -- $cur) )
                        ;;
                    "describe-forward-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size --search-type --search-value " -- $cur) )
                        ;;
                    "create-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-spec " -- $cur) )
                        ;;
                    "describe-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "modify-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id --forward-rule-spec " -- $cur) )
                        ;;
                    "delete-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "switch-forward-rule-protect")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "switch-forward-rule-origin")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "describe-protection-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "modify-protection-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id --forward-protection-rule-spec " -- $cur) )
                        ;;
                    "describe-geo-areas")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-black-list-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "modify-black-list-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id --modify-spec " -- $cur) )
                        ;;
                    "enable-black-list-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "disable-black-list-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "describe-white-list-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "modify-white-list-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id --modify-spec " -- $cur) )
                        ;;
                    "enable-white-list-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "disable-white-list-rule-of-forward-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --forward-rule-id " -- $cur) )
                        ;;
                    "describe-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --name " -- $cur) )
                        ;;
                    "create-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --create-instance-spec " -- $cur) )
                        ;;
                    "describe-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-instance-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --rename-instance-spec " -- $cur) )
                        ;;
                    "modify-epb")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --modify-instance-epbspec " -- $cur) )
                        ;;
                    "describe-alarm-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-alarm-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --alarm-config-spec " -- $cur) )
                        ;;
                    "describe-name-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --name --page-number --page-size " -- $cur) )
                        ;;
                    "describe-protection-statistics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "check-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "describe-vpc-ip-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size " -- $cur) )
                        ;;
                    "describe-cps-ip-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size " -- $cur) )
                        ;;
                    "describe-ip-sets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-ip-set")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --ip-set-spec " -- $cur) )
                        ;;
                    "describe-ip-set")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --ip-set-id " -- $cur) )
                        ;;
                    "delete-ip-set")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --ip-set-id " -- $cur) )
                        ;;
                    "describe-ip-set-usage")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-web-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size --search-type --search-value " -- $cur) )
                        ;;
                    "create-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-spec " -- $cur) )
                        ;;
                    "describe-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "modify-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-rule-spec " -- $cur) )
                        ;;
                    "delete-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "switch-web-rule-protect")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "switch-web-rule-origin")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "enable-web-rule-cc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "disable-web-rule-cc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "enable-web-rule-ccobserver-mode")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "disable-web-rule-ccobserver-mode")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "describe-ccprotection-rules-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "create-ccprotection-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --cc-protection-rule-spec " -- $cur) )
                        ;;
                    "describe-ccprotection-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --cc-protection-rule-id " -- $cur) )
                        ;;
                    "modify-ccprotection-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --cc-protection-rule-id --cc-protection-rule-spec " -- $cur) )
                        ;;
                    "delete-ccprotection-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --cc-protection-rule-id " -- $cur) )
                        ;;
                    "enable-ccprotection-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --cc-protection-rule-id " -- $cur) )
                        ;;
                    "disable-ccprotection-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --cc-protection-rule-id " -- $cur) )
                        ;;
                    "describe-ccprotection-config-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "modify-ccprotection-config-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --cc-protection-config-spec " -- $cur) )
                        ;;
                    "describe-ccprotection-default-config-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "modify-cert-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --cert-info-modify-spec " -- $cur) )
                        ;;
                    "describe-web-rule-black-list-usage")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "describe-black-list-rules-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-black-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-black-list-rule-spec " -- $cur) )
                        ;;
                    "describe-black-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-black-list-rule-id " -- $cur) )
                        ;;
                    "modify-black-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-black-list-rule-id --web-black-list-rule-spec " -- $cur) )
                        ;;
                    "delete-black-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-black-list-rule-id " -- $cur) )
                        ;;
                    "enable-web-rule-black-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "enable-black-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-black-list-rule-id " -- $cur) )
                        ;;
                    "disable-web-rule-black-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "disable-black-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-black-list-rule-id " -- $cur) )
                        ;;
                    "describe-web-rule-white-list-usage")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "describe-white-list-rules-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-white-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-white-list-rule-spec " -- $cur) )
                        ;;
                    "describe-white-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-white-list-rule-id " -- $cur) )
                        ;;
                    "modify-white-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-white-list-rule-id --web-white-list-rule-spec " -- $cur) )
                        ;;
                    "delete-white-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-white-list-rule-id " -- $cur) )
                        ;;
                    "enable-web-rule-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "enable-white-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-white-list-rule-id " -- $cur) )
                        ;;
                    "disable-web-rule-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id " -- $cur) )
                        ;;
                    "disable-white-list-rule-of-web-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --web-rule-id --web-white-list-rule-id " -- $cur) )
                        ;;
                    "describe-web-rule-black-list-geo-areas")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-web-rule-white-list-geo-areas")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "oss")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "list-buckets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "put-bucket")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucketname " -- $cur) )
                        ;;
                    "delete-bucket")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucketname " -- $cur) )
                        ;;
                    "head-bucket")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucketname " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "redis")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-cache-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --sorts --tag-filters " -- $cur) )
                        ;;
                    "create-cache-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance --charge " -- $cur) )
                        ;;
                    "describe-cache-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "modify-cache-instance-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --cache-instance-name --cache-instance-description " -- $cur) )
                        ;;
                    "delete-cache-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "modify-cache-instance-class")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --cache-instance-class " -- $cur) )
                        ;;
                    "reset-cache-instance-password")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --password " -- $cur) )
                        ;;
                    "describe-instance-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "modify-instance-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --instance-config " -- $cur) )
                        ;;
                    "describe-backups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --page-number --page-size --start-time --end-time --base-id " -- $cur) )
                        ;;
                    "create-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --file-name --backup-type " -- $cur) )
                        ;;
                    "describe-backup-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "modify-backup-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --backup-time --backup-period " -- $cur) )
                        ;;
                    "restore-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --base-id " -- $cur) )
                        ;;
                    "describe-download-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --base-id " -- $cur) )
                        ;;
                    "describe-cluster-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id " -- $cur) )
                        ;;
                    "describe-slow-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cache-instance-id --page-number --page-size --start-time --end-time --shard-id " -- $cur) )
                        ;;
                    "describe-instance-class")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --redis-version " -- $cur) )
                        ;;
                    "describe-user-quota")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "domainservice")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-action-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --start-time --end-time --key-word --success --type " -- $cur) )
                        ;;
                    "describe-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --domain-name --domain-id " -- $cur) )
                        ;;
                    "create-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pack-id --domain-name --domain-id --buy-type --time-span --time-unit --billing-type " -- $cur) )
                        ;;
                    "modify-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --domain-name " -- $cur) )
                        ;;
                    "delete-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id " -- $cur) )
                        ;;
                    "describe-domain-query-count")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --domain-name --start --end " -- $cur) )
                        ;;
                    "describe-domain-query-traffic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --domain-name --start --end " -- $cur) )
                        ;;
                    "describe-resource-record")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --page-number --page-size --search " -- $cur) )
                        ;;
                    "create-resource-record")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --req " -- $cur) )
                        ;;
                    "modify-resource-record")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --resource-record-id --req " -- $cur) )
                        ;;
                    "delete-resource-record")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --resource-record-id " -- $cur) )
                        ;;
                    "modify-resource-record-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --resource-record-id --action " -- $cur) )
                        ;;
                    "describe-view-tree")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --load-mode --pack-id --view-id " -- $cur) )
                        ;;
                    "batch-set-resource-records")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --req " -- $cur) )
                        ;;
                    "describe-user-view")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --view-id --view-name --page-number --page-size " -- $cur) )
                        ;;
                    "create-user-view")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --req " -- $cur) )
                        ;;
                    "delete-user-view")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --req " -- $cur) )
                        ;;
                    "describe-user-view-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --view-id --view-name --page-number --page-size " -- $cur) )
                        ;;
                    "create-user-view-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --req " -- $cur) )
                        ;;
                    "delete-user-view-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --req " -- $cur) )
                        ;;
                    "describe-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --page-index --page-size --search-value " -- $cur) )
                        ;;
                    "create-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --sub-domain-name " -- $cur) )
                        ;;
                    "modify-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --update-monitor " -- $cur) )
                        ;;
                    "describe-monitor-target")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --sub-domain-name " -- $cur) )
                        ;;
                    "create-monitor-target")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --sub-domain-name --targets " -- $cur) )
                        ;;
                    "modify-monitor-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --monitor-id --action --switch-target " -- $cur) )
                        ;;
                    "delete-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --monitor-id " -- $cur) )
                        ;;
                    "describe-monitor-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --page-index --page-size --search-value " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "billing")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "query-bill-summary")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --app-code --service-code --resource-ids --tags --page-index --page-size " -- $cur) )
                        ;;
                    "query-bill-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --app-code --service-code --billing-type --resource-ids --tags --page-index --page-size " -- $cur) )
                        ;;
                    "calculate-total-price")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cmd --order-list --operate-time --promotion-info --client-type --package-count --process-type " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "deploy")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-apps")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "describe-app")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --app-id " -- $cur) )
                        ;;
                    "create-deploy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --group-id --desc --deploy-source --deploy-cmd --cmd-source --cmd-type --product-type --download-url --md5 --compile-project --compile-series --oss-space --oss-dir --file-type " -- $cur) )
                        ;;
                    "describe-deploy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --deploy-id " -- $cur) )
                        ;;
                    "describe-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "describe-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --group-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "sop")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-security-token")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --get-security-token-info " -- $cur) )
                        ;;
                    "get-sensitive-op-setting")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --action " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "function")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "list-alias")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name " -- $cur) )
                        ;;
                    "create-alias")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --alias-name --description --version " -- $cur) )
                        ;;
                    "get-alias")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --alias-name " -- $cur) )
                        ;;
                    "update-alias")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --alias-name --description --version " -- $cur) )
                        ;;
                    "delete-alias")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --alias-name " -- $cur) )
                        ;;
                    "list-function")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --list-all --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-function")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --description --entrance --memory --run-time --over-time --version --code --environment --log-set-id --log-topic-id --vpc-id --subnet-id " -- $cur) )
                        ;;
                    "get-function")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name " -- $cur) )
                        ;;
                    "update-function")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --description --entrance --memory --run-time --over-time --version --code --environment --log-set-id --log-topic-id --vpc-id --subnet-id " -- $cur) )
                        ;;
                    "delete-function")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name " -- $cur) )
                        ;;
                    "invoke")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --version-name --event " -- $cur) )
                        ;;
                    "async-invoke")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --version-name --event " -- $cur) )
                        ;;
                    "get-trigger")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --version-name --trigger-id " -- $cur) )
                        ;;
                    "list-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name " -- $cur) )
                        ;;
                    "create-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --description " -- $cur) )
                        ;;
                    "get-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --version-name " -- $cur) )
                        ;;
                    "delete-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --function-name --version-name " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "portal")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --url --lang --ak " -- $cur) )
                        ;;
                    "describe-products-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --ak " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "logs")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-collect-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --collect-info-uid " -- $cur) )
                        ;;
                    "update-collect-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --collect-info-uid --enabled --resource-type --resources --log-path --log-file --log-filters --filter-enabled " -- $cur) )
                        ;;
                    "describe-collect-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --collect-info-uid --page-number --page-size " -- $cur) )
                        ;;
                    "update-collect-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --collect-info-uid --action --resources " -- $cur) )
                        ;;
                    "create-collect-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logtopic-uid --enabled --app-code --service-code --resource-type --resources --template-uid --log-path --log-file --log-filters --filter-enabled " -- $cur) )
                        ;;
                    "describe-logd-ca")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-instance-collect-confs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-logsets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --name " -- $cur) )
                        ;;
                    "create-logset")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --description --life-cycle " -- $cur) )
                        ;;
                    "describe-logset")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid " -- $cur) )
                        ;;
                    "update-logset")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --description --life-cycle " -- $cur) )
                        ;;
                    "delete-logset")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uids " -- $cur) )
                        ;;
                    "describe-logtopics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --page-number --page-size --name " -- $cur) )
                        ;;
                    "create-logtopic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --name --description " -- $cur) )
                        ;;
                    "delete-logtopic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uids " -- $cur) )
                        ;;
                    "describe-logtopic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logtopic-uid " -- $cur) )
                        ;;
                    "update-logtopic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logtopic-uid --description " -- $cur) )
                        ;;
                    "test-metric-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid --aggregate --content --data-field --filter-content --filter-open --filter-type " -- $cur) )
                        ;;
                    "describe-metric-tasks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid --page-number --page-size " -- $cur) )
                        ;;
                    "create-metric-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid --aggregate --custom-unit --data-field --filter-content --filter-open --filter-type --interval --metric --name --unit " -- $cur) )
                        ;;
                    "describe-metric-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid --logmetrictask-uid " -- $cur) )
                        ;;
                    "update-metric-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid --logmetrictask-uid --custom-unit --filter-content --filter-open --filter-type --name --unit " -- $cur) )
                        ;;
                    "delete-metric-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid --logmetrictask-uid " -- $cur) )
                        ;;
                    "put")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --logtopic-uid --stream --timestamp --entries " -- $cur) )
                        ;;
                    "search-log-context")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid --anchor --direction --id --line-size --time " -- $cur) )
                        ;;
                    "search")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --logset-uid --logtopic-uid --action --expr --case-sensitive --start-time --end-time --page-number --page-size " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "jdccs")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-metrics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "describe-metric-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --metric --resource-id --start-time --end-time --time-interval --ip --port " -- $cur) )
                        ;;
                    "last-downsample")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --metric --resource-id " -- $cur) )
                        ;;
                    "describe-bandwidth-traffics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --page-number --page-size " -- $cur) )
                        ;;
                    "describe-bandwidth-traffic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --bandwidth-id " -- $cur) )
                        ;;
                    "describe-idcs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size " -- $cur) )
                        ;;
                    "describe-rooms")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --page-number --page-size --filters " -- $cur) )
                        ;;
                    "describe-cabinets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --idc --page-number --page-size --filters " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "clouddnsservice")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-action-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --start-time --end-time --key-word --success --type " -- $cur) )
                        ;;
                    "get-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --domain-name " -- $cur) )
                        ;;
                    "add-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pack-id --domain-name --domain-id --buy-type --time-span --time-unit --billing-type " -- $cur) )
                        ;;
                    "del-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id " -- $cur) )
                        ;;
                    "update-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-name --id " -- $cur) )
                        ;;
                    "get-domain-query-count")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --domain-name --start --end " -- $cur) )
                        ;;
                    "get-domain-query-traffic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --domain-name --start --end " -- $cur) )
                        ;;
                    "search-rr")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --page-number --page-size " -- $cur) )
                        ;;
                    "get-view-tree")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --load-mode --pack-id --view-id " -- $cur) )
                        ;;
                    "add-rr")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --req " -- $cur) )
                        ;;
                    "update-rr")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --req " -- $cur) )
                        ;;
                    "operate-rr")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --ids --action " -- $cur) )
                        ;;
                    "batch-set-dns-resolve")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --req " -- $cur) )
                        ;;
                    "add-user-view")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --req " -- $cur) )
                        ;;
                    "del-user-view")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --req " -- $cur) )
                        ;;
                    "get-user-view")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --view-id --view-name --page-number --page-size " -- $cur) )
                        ;;
                    "add-user-view-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --req " -- $cur) )
                        ;;
                    "del-user-view-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --req " -- $cur) )
                        ;;
                    "get-user-view-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --view-id --view-name --page-number --page-size " -- $cur) )
                        ;;
                    "get-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --page-index --page-size --search-value " -- $cur) )
                        ;;
                    "add-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --sub-domain-name " -- $cur) )
                        ;;
                    "get-targets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --sub-domain-name " -- $cur) )
                        ;;
                    "add-monitor-target")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --sub-domain-name --targets " -- $cur) )
                        ;;
                    "operate-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --action --ids --switch-target " -- $cur) )
                        ;;
                    "update-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --update-monitor " -- $cur) )
                        ;;
                    "get-monitor-alarm-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-id --page-index --page-size --search-value " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "cps")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-elastic-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --status --include-lb --filters " -- $cur) )
                        ;;
                    "apply-elastic-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --elastic-ip-spec " -- $cur) )
                        ;;
                    "describe-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --elastic-ip-id " -- $cur) )
                        ;;
                    "modify-elastic-ip-bandwidth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --elastic-ip-id --client-token --bandwidth " -- $cur) )
                        ;;
                    "describe-device-types")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --az " -- $cur) )
                        ;;
                    "describe-os")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --device-type --os-type " -- $cur) )
                        ;;
                    "describe-device-raids")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --device-type --volume-type " -- $cur) )
                        ;;
                    "describe-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --az --name --network-type --device-type --subnet-id --keypair-id --enable-internet --private-ip --filters " -- $cur) )
                        ;;
                    "create-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --instance-spec " -- $cur) )
                        ;;
                    "describe-instance-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --name --description " -- $cur) )
                        ;;
                    "describe-instance-raid")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-instance-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "restart-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token " -- $cur) )
                        ;;
                    "stop-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token " -- $cur) )
                        ;;
                    "start-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token " -- $cur) )
                        ;;
                    "reinstall-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token --instance-spec " -- $cur) )
                        ;;
                    "modify-bandwidth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token --bandwidth " -- $cur) )
                        ;;
                    "associate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token --elastic-ip-id " -- $cur) )
                        ;;
                    "disassociate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token --elastic-ip-id " -- $cur) )
                        ;;
                    "reset-password")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --client-token --password " -- $cur) )
                        ;;
                    "describe-instance-monitor-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --start-time --end-time --filters " -- $cur) )
                        ;;
                    "describe-keypairs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --name --filters " -- $cur) )
                        ;;
                    "create-keypairs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --name " -- $cur) )
                        ;;
                    "import-keypairs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --name --public-key " -- $cur) )
                        ;;
                    "describe-keypair")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --keypair-id " -- $cur) )
                        ;;
                    "delete-keypairs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --keypair-id " -- $cur) )
                        ;;
                    "describe-listeners")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --name --load-balancer-id --filters " -- $cur) )
                        ;;
                    "create-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --listener-spec " -- $cur) )
                        ;;
                    "modify-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --listener-id --algorithm --sticky-session --real-ip --name --description --health-check --health-check-timeout --health-check-interval --healthy-threshold --unhealthy-threshold --server-group-id " -- $cur) )
                        ;;
                    "describe-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --listener-id " -- $cur) )
                        ;;
                    "delete-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --listener-id " -- $cur) )
                        ;;
                    "start-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --listener-id --client-token " -- $cur) )
                        ;;
                    "stop-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --listener-id --client-token " -- $cur) )
                        ;;
                    "describe-load-balancers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --status --name --vpc-id --bind-eip --filters " -- $cur) )
                        ;;
                    "create-load-balancer")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --load-balancer-spec " -- $cur) )
                        ;;
                    "modify-load-balancer")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id --name --description " -- $cur) )
                        ;;
                    "describe-load-balancer")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id " -- $cur) )
                        ;;
                    "start-load-balancer")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id --client-token " -- $cur) )
                        ;;
                    "stop-load-balancer")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id --client-token " -- $cur) )
                        ;;
                    "associate-elastic-ip-lb")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id --client-token --elastic-ip-id " -- $cur) )
                        ;;
                    "disassociate-elastic-ip-lb")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --load-balancer-id --client-token --elastic-ip-id " -- $cur) )
                        ;;
                    "describe-regiones")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --network-type " -- $cur) )
                        ;;
                    "describe-cpslbregions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "describe-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id " -- $cur) )
                        ;;
                    "describe-route-tables")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --name --vpc-id --filters " -- $cur) )
                        ;;
                    "describe-servers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --server-group-id --page-number --page-size --listener-id --filters " -- $cur) )
                        ;;
                    "add-servers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --server-group-id --client-token --server-spec " -- $cur) )
                        ;;
                    "modify-server")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --server-group-id --server-id --weight " -- $cur) )
                        ;;
                    "remove-server")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --server-group-id --server-id " -- $cur) )
                        ;;
                    "describe-server-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --name --load-balancer-id --filters " -- $cur) )
                        ;;
                    "create-server-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --server-group-spec " -- $cur) )
                        ;;
                    "describe-server-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --server-group-id " -- $cur) )
                        ;;
                    "modify-server-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --server-group-id --name " -- $cur) )
                        ;;
                    "delete-server-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --server-group-id " -- $cur) )
                        ;;
                    "describe-basic-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --az " -- $cur) )
                        ;;
                    "describe-subnets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --az --name --vpc-id --filters " -- $cur) )
                        ;;
                    "create-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --subnet-spec " -- $cur) )
                        ;;
                    "describe-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id " -- $cur) )
                        ;;
                    "modify-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id --name --description " -- $cur) )
                        ;;
                    "delete-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id --client-token " -- $cur) )
                        ;;
                    "describe-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id " -- $cur) )
                        ;;
                    "modify-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --name --description " -- $cur) )
                        ;;
                    "delete-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --client-token " -- $cur) )
                        ;;
                    "describe-vpcs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --name --filters " -- $cur) )
                        ;;
                    "create-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-token --vpc-spec " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "cdn")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "query-online-billing-type")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "set-online-billing-type")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --all-type " -- $cur) )
                        ;;
                    "query-band")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --area --isp --period " -- $cur) )
                        ;;
                    "query-band-with-area")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --area --isp --period " -- $cur) )
                        ;;
                    "query-domain-config-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-id " -- $cur) )
                        ;;
                    "query-area-isp-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "preview-certificate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --content " -- $cur) )
                        ;;
                    "query-default-http-header-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "query-ip-black-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-ip-black-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ips " -- $cur) )
                        ;;
                    "operate-ip-black-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status " -- $cur) )
                        ;;
                    "create-cache-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --weight --ttl --contents --cache-type " -- $cur) )
                        ;;
                    "update-cache-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --weight --ttl --contents --cache-type --config-id " -- $cur) )
                        ;;
                    "delete-cache-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --config-id " -- $cur) )
                        ;;
                    "query-http-header")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-http-header")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --header-type --header-name --header-value " -- $cur) )
                        ;;
                    "delete-http-header")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --header-type --header-name " -- $cur) )
                        ;;
                    "set-video-draft")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status " -- $cur) )
                        ;;
                    "set-range")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status " -- $cur) )
                        ;;
                    "set-ignore-query-string")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status " -- $cur) )
                        ;;
                    "query-user-agent")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-user-agent-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --user-agent-type --user-agent-list " -- $cur) )
                        ;;
                    "query-accesskey-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-accesskey-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --accesskey-type --accesskey-key --accesskey-keep " -- $cur) )
                        ;;
                    "set-refer")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --refer-type --refer-list --allow-no-refer-header --allow-null-refer-header " -- $cur) )
                        ;;
                    "query-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --cycle --monitor-path --http-request-header " -- $cur) )
                        ;;
                    "stop-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-source")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --source-type --back-source-type --ip-source --domain-source --oss-source --default-source-host " -- $cur) )
                        ;;
                    "operate-share-cache")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status " -- $cur) )
                        ;;
                    "set-http-type")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --http-type --certificate --rsa-key --jump-type --cert-from --ssl-cert-id --sync-to-ssl --cert-name " -- $cur) )
                        ;;
                    "query-follow-redirect")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-follow-redirect")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status " -- $cur) )
                        ;;
                    "query-follow-source-protocol")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-follow-source-protocol")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status " -- $cur) )
                        ;;
                    "set-domain-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --http-type --back-source-type --jump-type " -- $cur) )
                        ;;
                    "query-domain-group-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --share-cache --page-number --page-size --primary-domain --domain-group-name " -- $cur) )
                        ;;
                    "query-domain-group-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --id " -- $cur) )
                        ;;
                    "query-domains-not-in-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "update-domain-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --id --domains --primary-domain --share-cache --domain-group-name " -- $cur) )
                        ;;
                    "create-domain-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --share-cache --primary-domain --domain-group-name --domains " -- $cur) )
                        ;;
                    "batch-delete-domain-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --ids " -- $cur) )
                        ;;
                    "get-domain-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-word --page-number --page-size --status --type --accelerate-region " -- $cur) )
                        ;;
                    "get-domain-list-by-filter")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-word --page-number --page-size --status --type --accelerate-region --tag-filters " -- $cur) )
                        ;;
                    "get-domain-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "create-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --source-type --cdn-type --back-source-type --daily-band-width --quaility --max-file-size --min-file-size --sum-file-size --avg-file-size --default-source-host --http-type --ip-source --domain-source --oss-source --accelerate-region " -- $cur) )
                        ;;
                    "delete-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "start-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "stop-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "query-oss-buckets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "batch-create")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domains --source-type --cdn-type --back-source-type --daily-band-width --quaility --max-file-size --min-file-size --sum-file-size --avg-file-size --default-source-host --http-type --ip-source --domain-source --oss-source --accelerate-region " -- $cur) )
                        ;;
                    "query-domain-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "check-whether-ip-belong-to-jcloud")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --ips " -- $cur) )
                        ;;
                    "set-live-domain-back-source")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --source-type --back-source-type --default-source-host --domain-source --ip-source " -- $cur) )
                        ;;
                    "set-live-domain-ip-black-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ips " -- $cur) )
                        ;;
                    "set-live-domain-refer")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --refer-type --refer-list --allow-no-refer-header --allow-null-refer-header " -- $cur) )
                        ;;
                    "operate-live-domain-ip-black-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --black-ips-enable " -- $cur) )
                        ;;
                    "set-live-domain-back-source-host")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --source-host " -- $cur) )
                        ;;
                    "set-live-domain-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --accesskey-type --accesskey-key --auth-life-time " -- $cur) )
                        ;;
                    "set-protocol-convert")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --certificate --rsa-key --cert-from --ssl-cert-id --sync-to-ssl --cert-name --protocol-converts " -- $cur) )
                        ;;
                    "delete-forbidden-stream")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --delete-streams " -- $cur) )
                        ;;
                    "query-push-domain-orapp-or-stream")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --app --stream --limit " -- $cur) )
                        ;;
                    "operate-live-domain-ignore-query-string")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --status " -- $cur) )
                        ;;
                    "set-push-ip-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ip-list " -- $cur) )
                        ;;
                    "set-publish-normal-timeout")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --timeout " -- $cur) )
                        ;;
                    "set-stream-notify-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --notify-url --notify-auth-key " -- $cur) )
                        ;;
                    "set-forward-authentication")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --accesskey-type --accesskey-key " -- $cur) )
                        ;;
                    "set-origin-authentication")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --accesskey-type --accesskey-key " -- $cur) )
                        ;;
                    "batch-create-live-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain --publish-domain --source-type --back-http-type --default-source-host --site-type --back-source-type --ip-source --domain-source --accelerate-region " -- $cur) )
                        ;;
                    "create-live-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain --publish-domain --source-type --back-http-type --default-source-host --site-type --back-source-type --play-protocol --forward-custom-vhost --ip-source --domain-source --video-type --audio-type " -- $cur) )
                        ;;
                    "bind-publish-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --publish-domain " -- $cur) )
                        ;;
                    "modify-live-domain-forward-custom-vhost")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --forward-custom-vhost " -- $cur) )
                        ;;
                    "query-live-domain-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "query-live-domain-detail-v2")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "describe-publish-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "describebinded-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "query-live-domain-apps")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "create-live-domain-prefecth-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --url-list --prefetch-time --action " -- $cur) )
                        ;;
                    "query-live-prefetch-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --url-list " -- $cur) )
                        ;;
                    "query-refresh-task-by-ids")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-ids --keyword " -- $cur) )
                        ;;
                    "query-refresh-task-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-id " -- $cur) )
                        ;;
                    "create-refresh-task-for-callback")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-type --url-items " -- $cur) )
                        ;;
                    "create-refresh-task-for-callback-v2")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-type --url-items " -- $cur) )
                        ;;
                    "query-refresh-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --keyword --task-id --task-status --task-type --page-number --page-size " -- $cur) )
                        ;;
                    "create-refresh-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --task-type --urls " -- $cur) )
                        ;;
                    "query-net-protection-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "set-net-protection-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --src-new-conn-limit-enable --dst-new-conn-limit-enable --datagram-range-min --datagram-range-max --dst-new-conn-limit-value --src-new-conn-limit-value --geo-black --ip-black --ip-white " -- $cur) )
                        ;;
                    "query-net-protection-rules-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "set-net-protection-rules-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --switch-status " -- $cur) )
                        ;;
                    "query-geo-areas")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "query-attack-type-count")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time " -- $cur) )
                        ;;
                    "query-ddos-graph")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time " -- $cur) )
                        ;;
                    "search-attack-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --page-number --page-size --sort-field --sort-rule " -- $cur) )
                        ;;
                    "get-all-upper-node-ip-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "get-ssl-cert-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --domain " -- $cur) )
                        ;;
                    "get-ssl-cert-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --ssl-cert-id " -- $cur) )
                        ;;
                    "upload-cert")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --cert-name --key-file --cert-file --alias-name " -- $cur) )
                        ;;
                    "query-mix-statistics-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --fields --area --isp --period --scheme " -- $cur) )
                        ;;
                    "query-mix-statistics-with-area-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --fields --area --isp --period " -- $cur) )
                        ;;
                    "query-mix-traffic-group-sum")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --fields --area --isp --period --group-by " -- $cur) )
                        ;;
                    "query-statistics-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --sub-domain --fields --area --isp --origin --period " -- $cur) )
                        ;;
                    "query-statistics-data-group-by-area")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --sub-domain --fields --area --isp --origin --period --group-by --scheme " -- $cur) )
                        ;;
                    "query-statistics-data-group-sum")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --sub-domain --fields --area --isp --origin --period --group-by " -- $cur) )
                        ;;
                    "query-live-statistics-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --app-name --stream-name --sub-domain --fields --area --isp --req-method --scheme --period " -- $cur) )
                        ;;
                    "query-live-statistics-area-data-group-by")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --app-name --fields --area --isp --stream-name --period --group-by --sub-domain --scheme --req-method " -- $cur) )
                        ;;
                    "query-live-traffic-group-sum")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --sub-domain --app-name --stream-name --fields --area --isp --scheme --period --group-by --req-method " -- $cur) )
                        ;;
                    "query-statistics-top-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --sub-domain --size --top-by " -- $cur) )
                        ;;
                    "query-domains-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domains --start-time --end-time --interval --log-type " -- $cur) )
                        ;;
                    "query-domain-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --start-time --end-time --interval --log-type --page-size --page-number " -- $cur) )
                        ;;
                    "query-statistics-top-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --sub-domain --size --top-by " -- $cur) )
                        ;;
                    "query-waf-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-waf-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --switch-status " -- $cur) )
                        ;;
                    "query-waf-white-rule-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-waf-white-rule-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --switch-status " -- $cur) )
                        ;;
                    "querywaf-white-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --rule-type --id --page-size --page-index " -- $cur) )
                        ;;
                    "create-waf-white-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --rule-type --match-op --val --actions " -- $cur) )
                        ;;
                    "update-waf-white-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --id --rule-type --match-op --val --actions " -- $cur) )
                        ;;
                    "enable-waf-white-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ids --rule-type " -- $cur) )
                        ;;
                    "disable-waf-white-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ids --rule-type " -- $cur) )
                        ;;
                    "delete-waf-white-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ids --rule-type " -- $cur) )
                        ;;
                    "query-waf-black-rule-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-waf-black-rule-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --switch-status " -- $cur) )
                        ;;
                    "querywaf-black-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --rule-type --id --page-size --page-index " -- $cur) )
                        ;;
                    "create-waf-black-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --rule-type --match-op --val --at-op --at-val " -- $cur) )
                        ;;
                    "update-waf-black-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --id --rule-type --match-op --val --at-op --at-val " -- $cur) )
                        ;;
                    "enable-waf-black-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ids --rule-type " -- $cur) )
                        ;;
                    "disable-waf-black-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ids --rule-type " -- $cur) )
                        ;;
                    "delete-waf-black-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ids --rule-type " -- $cur) )
                        ;;
                    "query-ccprotect-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-ccprotect-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --switch-status " -- $cur) )
                        ;;
                    "query-ccprotect-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --id --page-size --page-index " -- $cur) )
                        ;;
                    "create-ccprotect-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --uri --detect-period --single-ip-limit --block-type --block-time " -- $cur) )
                        ;;
                    "update-ccprotect-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --id --uri --detect-period --single-ip-limit --block-type --block-time " -- $cur) )
                        ;;
                    "enable-ccprotect-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ids " -- $cur) )
                        ;;
                    "disable-ccprotect-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ids " -- $cur) )
                        ;;
                    "delete-ccprotect-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --ids " -- $cur) )
                        ;;
                    "query-web-protect-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "set-web-protect-switch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --switch-status " -- $cur) )
                        ;;
                    "query-web-protect-settings")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "update-web-protect-settings")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain --waf-mode --waf-level --redirection " -- $cur) )
                        ;;
                    "query-waf-regions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --skip-type " -- $cur) )
                        ;;
                    "query-ip-black-setting-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain " -- $cur) )
                        ;;
                    "waf-query-pv-for-area-and-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain " -- $cur) )
                        ;;
                    "waf-query-pv")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain " -- $cur) )
                        ;;
                    "waf-query-attack-details")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --domain --sort-field --sort-rule --page-number --page-size " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "streambus")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-topic-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --keyword " -- $cur) )
                        ;;
                    "describe-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "add-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-model " -- $cur) )
                        ;;
                    "update-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-model " -- $cur) )
                        ;;
                    "delete-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "get-consumer-group-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-id " -- $cur) )
                        ;;
                    "create-consumer-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --consumer-group-str " -- $cur) )
                        ;;
                    "delete-consumer-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-id --consumer-group-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "httpdns")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-account-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "get-account-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "operate-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --action --key " -- $cur) )
                        ;;
                    "get-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-index --page-size --domain-name " -- $cur) )
                        ;;
                    "add-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-names " -- $cur) )
                        ;;
                    "del-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-names " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "apigateway")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "query-access-auths")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-access-auth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-auth-view " -- $cur) )
                        ;;
                    "check-auth-exist")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key --auth-user-type " -- $cur) )
                        ;;
                    "query-access-auth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-auth-id " -- $cur) )
                        ;;
                    "update-access-auth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-auth-id --access-auth-view " -- $cur) )
                        ;;
                    "delete-access-auth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-auth-id " -- $cur) )
                        ;;
                    "query-bind-group-auth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-auth-id " -- $cur) )
                        ;;
                    "bind-group-auth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-auth-id --deployment-ids " -- $cur) )
                        ;;
                    "query-auth-group-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --auth-user-type " -- $cur) )
                        ;;
                    "authorized-api-group-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "query-access-keys")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --description --access-key-type --access-key " -- $cur) )
                        ;;
                    "check-key-exist")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key --access-key-type " -- $cur) )
                        ;;
                    "query-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key-id " -- $cur) )
                        ;;
                    "update-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key-id --description --access-key-type --access-key " -- $cur) )
                        ;;
                    "delete-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key-id " -- $cur) )
                        ;;
                    "query-bind-group-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key-id " -- $cur) )
                        ;;
                    "bind-group-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key-id --deployment-ids " -- $cur) )
                        ;;
                    "query-key-group-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key-id " -- $cur) )
                        ;;
                    "query-apis")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-apis")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --api " -- $cur) )
                        ;;
                    "check-api-name-exist")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --api-name " -- $cur) )
                        ;;
                    "query-api")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --api-id --filters " -- $cur) )
                        ;;
                    "update-api")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --api-id --api " -- $cur) )
                        ;;
                    "delete-api")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --api-id " -- $cur) )
                        ;;
                    "update-api-by-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --api-name --api " -- $cur) )
                        ;;
                    "delete-api-by-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --api-name " -- $cur) )
                        ;;
                    "describe-api-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --tag-filters " -- $cur) )
                        ;;
                    "create-api-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --group-name --description --prefix --key-check --auth-type --prefix-strip --group-type --jdsf-name --jdsf-registry-name --jdsf-id " -- $cur) )
                        ;;
                    "check-group-name-exist")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --group-name " -- $cur) )
                        ;;
                    "describe-api-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id " -- $cur) )
                        ;;
                    "modify-api-group-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --group-name --description --prefix --key-check --auth-type --prefix-strip --group-type --jdsf-name --jdsf-registry-name --jdsf-id " -- $cur) )
                        ;;
                    "delete-api-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id " -- $cur) )
                        ;;
                    "describe-is-deploy-api-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters " -- $cur) )
                        ;;
                    "create-backend-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --backend-config-id --base-group-id --environment --backend-url --backend-service-type --header-params --query-params --description --create-time --sort --user-sort --jdsf-id --jdsf-param --jdsf-region --jdsf-pin " -- $cur) )
                        ;;
                    "describe-backend-configs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --environment --page-number --page-size --filters " -- $cur) )
                        ;;
                    "describe-backend-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --backend-config-id " -- $cur) )
                        ;;
                    "update-backend-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --backend-config-id --base-group-id --environment --backend-url --backend-service-type --header-params --query-params --description --create-time --sort --user-sort --jdsf-id --jdsf-param --jdsf-region --jdsf-pin " -- $cur) )
                        ;;
                    "delete-backend-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --backend-config-id " -- $cur) )
                        ;;
                    "describe-deployments")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --filters " -- $cur) )
                        ;;
                    "deploy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --environment --backend-service-type --backend-url --description --jdsf-name --jdsf-registry-name --jdsf-id " -- $cur) )
                        ;;
                    "describe-deployment")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --deployment-id " -- $cur) )
                        ;;
                    "offline")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --deployment-id " -- $cur) )
                        ;;
                    "batch-offline")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --deployment-ids " -- $cur) )
                        ;;
                    "query-keys")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --order-by --user-type --key-id " -- $cur) )
                        ;;
                    "create-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-name --key-desc " -- $cur) )
                        ;;
                    "reset-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-id " -- $cur) )
                        ;;
                    "update-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-id --key-name --key-desc " -- $cur) )
                        ;;
                    "query-key-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-id " -- $cur) )
                        ;;
                    "query-rate-limit-policies")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-rate-limit-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --rate-limit-policy-view " -- $cur) )
                        ;;
                    "check-policy-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --policy-name " -- $cur) )
                        ;;
                    "query-rate-limit-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --policy-id " -- $cur) )
                        ;;
                    "update-rate-limit-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --policy-id --rate-limit-policy-view " -- $cur) )
                        ;;
                    "delete-rate-limit-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --policy-id " -- $cur) )
                        ;;
                    "query-bind-group-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --policy-id " -- $cur) )
                        ;;
                    "bind-group-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --policy-id --deployment-ids " -- $cur) )
                        ;;
                    "query-policy-group-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --policy-id " -- $cur) )
                        ;;
                    "describe-revisions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-revision")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision --base-revision --revision-note " -- $cur) )
                        ;;
                    "get-revision-ids")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id " -- $cur) )
                        ;;
                    "check-revision-exist")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision " -- $cur) )
                        ;;
                    "query-revision")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "modify-revision")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision-id --revision-note " -- $cur) )
                        ;;
                    "delete-revision")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --api-group-id --revision-id " -- $cur) )
                        ;;
                    "query-subscription-keys")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-subscription-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --description --name " -- $cur) )
                        ;;
                    "query-subscription-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subscription-key-id " -- $cur) )
                        ;;
                    "update-subscription-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subscription-key-id --description --name " -- $cur) )
                        ;;
                    "delete-subscription-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subscription-key-id " -- $cur) )
                        ;;
                    "query-uc-access-keys")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "check-pin")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pin " -- $cur) )
                        ;;
                    "query-user-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --order-by --api-group-id " -- $cur) )
                        ;;
                    "create-user-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain --protocol --api-group-id " -- $cur) )
                        ;;
                    "delete-user-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --domain-ids --api-group-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "mps")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-style-delimiter")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucket-name " -- $cur) )
                        ;;
                    "set-style-delimiter")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucket-name --delimiters " -- $cur) )
                        ;;
                    "delete-style-delimiter")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucket-name " -- $cur) )
                        ;;
                    "list-thumbnail-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --status --begin --end --marker --limit " -- $cur) )
                        ;;
                    "create-thumbnail-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --task-id --status --error-code --created-time --last-updated-time --source --target --rule " -- $cur) )
                        ;;
                    "get-thumbnail-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --task-id " -- $cur) )
                        ;;
                    "get-notification")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "set-notification")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --enabled --endpoint --events --notify-strategy --notify-content-format " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "disk")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-disks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --tags --filters " -- $cur) )
                        ;;
                    "create-disks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-spec --max-count --client-token " -- $cur) )
                        ;;
                    "describe-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-id " -- $cur) )
                        ;;
                    "modify-disk-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-id --name --description " -- $cur) )
                        ;;
                    "delete-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-id " -- $cur) )
                        ;;
                    "restore-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-id --snapshot-id " -- $cur) )
                        ;;
                    "extend-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk-id --disk-size-gb --iops " -- $cur) )
                        ;;
                    "describe-snapshots")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --snapshot-source --filters " -- $cur) )
                        ;;
                    "create-snapshot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --snapshot-spec --client-token " -- $cur) )
                        ;;
                    "describe-snapshot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --snapshot-id " -- $cur) )
                        ;;
                    "modify-snapshot-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --snapshot-id --name --description " -- $cur) )
                        ;;
                    "delete-snapshot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --snapshot-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "nc")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-containers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-containers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-spec --max-count " -- $cur) )
                        ;;
                    "describe-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "delete-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "start-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "stop-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "modify-container-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --name --description " -- $cur) )
                        ;;
                    "associate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --elastic-ip-id " -- $cur) )
                        ;;
                    "disassociate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --elastic-ip-id " -- $cur) )
                        ;;
                    "get-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --tail-lines --since-seconds --limit-bytes " -- $cur) )
                        ;;
                    "describe-quota")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --resource-type " -- $cur) )
                        ;;
                    "describe-secrets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --secret-type --data " -- $cur) )
                        ;;
                    "describe-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "delete-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "vm")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id " -- $cur) )
                        ;;
                    "delete-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id " -- $cur) )
                        ;;
                    "describe-images")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-source --platform --ids --root-device-type --launch-permission --status --page-number --page-size " -- $cur) )
                        ;;
                    "describe-image-constraints")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id " -- $cur) )
                        ;;
                    "describe-image-constraints-batch")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ids " -- $cur) )
                        ;;
                    "share-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id --pins " -- $cur) )
                        ;;
                    "un-share-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id --pins " -- $cur) )
                        ;;
                    "release-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id " -- $cur) )
                        ;;
                    "un-release-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id " -- $cur) )
                        ;;
                    "describe-image-members")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id " -- $cur) )
                        ;;
                    "copy-images")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --source-image-ids --destination-region " -- $cur) )
                        ;;
                    "modify-image-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-id --name --description " -- $cur) )
                        ;;
                    "import-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --architecture --os-type --platform --disk-format --system-disk-size-gb --image-url --os-version --image-name --description --force-import --client-token " -- $cur) )
                        ;;
                    "image-tasks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --task-action --task-ids --task-status --start-time --end-time --page-number --page-size " -- $cur) )
                        ;;
                    "describe-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-spec --max-count --client-token " -- $cur) )
                        ;;
                    "describe-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "delete-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-instance-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "describe-instance-private-ip-address")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "stop-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "start-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "reboot-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "attach-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --network-interface-id --auto-delete " -- $cur) )
                        ;;
                    "detach-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --network-interface-id " -- $cur) )
                        ;;
                    "modify-instance-network-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --networks " -- $cur) )
                        ;;
                    "associate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --elastic-ip-id " -- $cur) )
                        ;;
                    "disassociate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --elastic-ip-id " -- $cur) )
                        ;;
                    "create-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --name --description --data-disks " -- $cur) )
                        ;;
                    "attach-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --disk-id --device-name --auto-delete " -- $cur) )
                        ;;
                    "detach-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --disk-id --force " -- $cur) )
                        ;;
                    "modify-instance-disk-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --data-disks " -- $cur) )
                        ;;
                    "modify-instance-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --name --description " -- $cur) )
                        ;;
                    "modify-instance-password")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --password " -- $cur) )
                        ;;
                    "describe-instance-vnc-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "resize-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --instance-type " -- $cur) )
                        ;;
                    "rebuild-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --password --image-id --key-names " -- $cur) )
                        ;;
                    "describe-instance-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-instance-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-template-data --name --description " -- $cur) )
                        ;;
                    "describe-instance-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-template-id " -- $cur) )
                        ;;
                    "update-instance-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-template-id --description --name " -- $cur) )
                        ;;
                    "delete-instance-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-template-id " -- $cur) )
                        ;;
                    "verify-instance-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-template-id " -- $cur) )
                        ;;
                    "describe-instance-types")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --service-name --filters " -- $cur) )
                        ;;
                    "describe-keypairs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-keypair")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-name " -- $cur) )
                        ;;
                    "import-keypair")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-name --public-key " -- $cur) )
                        ;;
                    "delete-keypair")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --key-name " -- $cur) )
                        ;;
                    "describe-quotas")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters --image-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "nativecontainer")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-containers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --tags " -- $cur) )
                        ;;
                    "create-containers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-spec --max-count --client-token " -- $cur) )
                        ;;
                    "describe-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "delete-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "start-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "stop-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id " -- $cur) )
                        ;;
                    "modify-container-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --name --description " -- $cur) )
                        ;;
                    "associate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --elastic-ip-id " -- $cur) )
                        ;;
                    "disassociate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --elastic-ip-id " -- $cur) )
                        ;;
                    "get-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --tail-lines --since-seconds --limit-bytes " -- $cur) )
                        ;;
                    "rebuild-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --image --secret --command --args --tty --working-dir --envs " -- $cur) )
                        ;;
                    "resize-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --instance-type " -- $cur) )
                        ;;
                    "exec-create")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --command --tty " -- $cur) )
                        ;;
                    "exec-get-exit-code")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --exec-id " -- $cur) )
                        ;;
                    "resize-tty")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --container-id --height --width --exec-id " -- $cur) )
                        ;;
                    "describe-instance-types")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters " -- $cur) )
                        ;;
                    "describe-quota")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --resource-type " -- $cur) )
                        ;;
                    "describe-secrets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --secret-type --data " -- $cur) )
                        ;;
                    "describe-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "delete-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "pod")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-container")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --container-name " -- $cur) )
                        ;;
                    "attach")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --container-name " -- $cur) )
                        ;;
                    "exec-create")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --container-name --command --tty " -- $cur) )
                        ;;
                    "exec-get-exit-code")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --container-name --exec-id " -- $cur) )
                        ;;
                    "resize-tty")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --container-name --height --width --exec-id " -- $cur) )
                        ;;
                    "describe-instance-types")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters " -- $cur) )
                        ;;
                    "describe-pods")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --tags " -- $cur) )
                        ;;
                    "create-pods")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-spec --max-count --client-token " -- $cur) )
                        ;;
                    "check-pod-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-name --max-count " -- $cur) )
                        ;;
                    "describe-pod")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id " -- $cur) )
                        ;;
                    "delete-pod")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id " -- $cur) )
                        ;;
                    "start-pod")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id " -- $cur) )
                        ;;
                    "stop-pod")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id " -- $cur) )
                        ;;
                    "modify-pod-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --description " -- $cur) )
                        ;;
                    "associate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --elastic-ip-id " -- $cur) )
                        ;;
                    "disassociate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --elastic-ip-id " -- $cur) )
                        ;;
                    "get-container-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --container-name --tail-lines --since-seconds --limit-bytes --start-time --end-time " -- $cur) )
                        ;;
                    "rebuild-pod")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --containers " -- $cur) )
                        ;;
                    "resize-pod")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pod-id --instance-type --container-resources " -- $cur) )
                        ;;
                    "describe-quota")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --resource-type " -- $cur) )
                        ;;
                    "describe-secrets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --secret-type --data " -- $cur) )
                        ;;
                    "describe-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "delete-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "iotcore")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "invoke-thing-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --identifier --product-key --topic-short-name --topic-message " -- $cur) )
                        ;;
                    "describe-thing-shadow")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --identifier --product-key " -- $cur) )
                        ;;
                    "update-thing-shadow")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --identifier --product-key --state --version " -- $cur) )
                        ;;
                    "invoke-thing-service")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --identifier --product-key --name --input --callback-bean-name " -- $cur) )
                        ;;
                    "query-device-page")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --device-name --status --product-key --device-type --now-page --page-size --order --direction --parent-id " -- $cur) )
                        ;;
                    "update-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --device-id --model --manufacturer --description --status " -- $cur) )
                        ;;
                    "add-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --instance-id --region-id --device-name --product-key --model --manufacturer --description " -- $cur) )
                        ;;
                    "query-device-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --device-name --instance-id --region-id --product-key " -- $cur) )
                        ;;
                    "remove-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --device-name --instance-id --region-id --product-key " -- $cur) )
                        ;;
                    "list-products")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-name --product-type --product-description --template-id --internal-tags " -- $cur) )
                        ;;
                    "describe-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key " -- $cur) )
                        ;;
                    "update-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key --product-name --product-description --dynamic-register " -- $cur) )
                        ;;
                    "delete-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key " -- $cur) )
                        ;;
                    "list-product-abilities")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key --page-number --page-size --filters " -- $cur) )
                        ;;
                    "import-thing-model")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key --thing-model " -- $cur) )
                        ;;
                    "export-thing-model")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key " -- $cur) )
                        ;;
                    "create-product-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --product-key --topic-short-name --topic-operation --topic-description " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "ams")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-streams-input")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --stream-id --start-time --end-time " -- $cur) )
                        ;;
                    "describe-authenticate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --p-id --ver " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "jdro")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-resource-type-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --product --search " -- $cur) )
                        ;;
                    "describe-resource-type-specification")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --resource-type " -- $cur) )
                        ;;
                    "describe-stacks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --stack-name --action --status --create-start-time --create-end-time --update-start-time --update-end-time --sort-field --sort-by " -- $cur) )
                        ;;
                    "create-stack")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --environment --template " -- $cur) )
                        ;;
                    "describe-stack")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --stack-id " -- $cur) )
                        ;;
                    "delete-stack")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --stack-id " -- $cur) )
                        ;;
                    "create-change-set")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --stack-id --environment --template " -- $cur) )
                        ;;
                    "execute-change-set")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --stack-id --changeset-id " -- $cur) )
                        ;;
                    "describe-stack-events")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --stack-id --page-number --page-size --start-time --end-time " -- $cur) )
                        ;;
                    "describe-stack-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --stack-id --page-number --page-size --search --product " -- $cur) )
                        ;;
                    "describe-stack-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --stack-id " -- $cur) )
                        ;;
                    "validate-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --environment --template --validate-mode " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "zfs")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-file-systems")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --tags --filters " -- $cur) )
                        ;;
                    "create-file-system")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --description --client-token --file-system-type " -- $cur) )
                        ;;
                    "describe-file-system")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --file-system-id " -- $cur) )
                        ;;
                    "modify-file-system-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --file-system-id --name --description " -- $cur) )
                        ;;
                    "delete-file-system")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --file-system-id " -- $cur) )
                        ;;
                    "describe-mount-targets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-mount-target")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --file-system-id --subnet-id --vpc-id --security-group-id --client-token " -- $cur) )
                        ;;
                    "describe-mount-target")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --mount-target-id " -- $cur) )
                        ;;
                    "delete-mount-target")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --mount-target-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "vod")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "list-categories")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --sorts " -- $cur) )
                        ;;
                    "create-category")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --name --parent-id --description " -- $cur) )
                        ;;
                    "get-category-with-children")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --category-id " -- $cur) )
                        ;;
                    "get-category")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --category-id " -- $cur) )
                        ;;
                    "update-category")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --category-id --name --parent-id --description " -- $cur) )
                        ;;
                    "delete-category")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --category-id " -- $cur) )
                        ;;
                    "list-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --sorts " -- $cur) )
                        ;;
                    "create-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --name " -- $cur) )
                        ;;
                    "get-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "delete-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "enable-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "disable-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "set-default-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "set-header")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id --header-name --header-value --header-type " -- $cur) )
                        ;;
                    "list-headers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "delete-header")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id --header-name --header-type " -- $cur) )
                        ;;
                    "set-referer-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id --config --enabled " -- $cur) )
                        ;;
                    "get-referer-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "set-urlrule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id --config --enabled " -- $cur) )
                        ;;
                    "get-urlrule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "set-iprule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id --config --enabled " -- $cur) )
                        ;;
                    "get-iprule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "set-http-ssl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id --source --title --ssl-cert --ssl-key --jump-type --enabled " -- $cur) )
                        ;;
                    "get-http-ssl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-id " -- $cur) )
                        ;;
                    "create-video-upload-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --http-method --title --file-name --file-size --cover-url --description --category-id --tags --transcode-template-ids --watermark-ids " -- $cur) )
                        ;;
                    "refresh-video-upload-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-id " -- $cur) )
                        ;;
                    "create-image-upload-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --http-method --file-name --file-size " -- $cur) )
                        ;;
                    "submit-quality-detection-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --media-id --template-ids " -- $cur) )
                        ;;
                    "batch-submit-quality-detection-jobs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --bulk-items " -- $cur) )
                        ;;
                    "list-quality-detection-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size " -- $cur) )
                        ;;
                    "create-quality-detection-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --name --template-type --detections " -- $cur) )
                        ;;
                    "get-quality-detection-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-id " -- $cur) )
                        ;;
                    "update-quality-detection-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-id --name --detections " -- $cur) )
                        ;;
                    "delete-quality-detection-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-id " -- $cur) )
                        ;;
                    "submit-transcode-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-id --template-ids --watermark-ids " -- $cur) )
                        ;;
                    "batch-submit-transcode-jobs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --bulk-items " -- $cur) )
                        ;;
                    "list-transcode-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-transcode-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --name --video --audio --encapsulation --definition --template-type " -- $cur) )
                        ;;
                    "get-transcode-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-id " -- $cur) )
                        ;;
                    "update-transcode-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-id --name --video --audio --encapsulation --definition --template-type " -- $cur) )
                        ;;
                    "delete-transcode-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-id " -- $cur) )
                        ;;
                    "list-videos")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --filters --sorts " -- $cur) )
                        ;;
                    "get-video")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-id " -- $cur) )
                        ;;
                    "update-video")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-id --name --category-id --tags --cover-url --description " -- $cur) )
                        ;;
                    "delete-video")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-id " -- $cur) )
                        ;;
                    "batch-delete-videos")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-ids " -- $cur) )
                        ;;
                    "batch-update-videos")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --bulk-items " -- $cur) )
                        ;;
                    "get-video-play-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-id " -- $cur) )
                        ;;
                    "delete-video-streams")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --video-id --task-ids " -- $cur) )
                        ;;
                    "list-watermarks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size " -- $cur) )
                        ;;
                    "create-watermark")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --name --img-url --width --height --size-unit --position --offset-x --offset-y --offset-unit " -- $cur) )
                        ;;
                    "get-watermark")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --watermark-id " -- $cur) )
                        ;;
                    "update-watermark")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --watermark-id --name --img-url --width --height --size-unit --position --offset-x --offset-y --offset-unit " -- $cur) )
                        ;;
                    "delete-watermark")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --watermark-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "yundingdatapush")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-datapush-venders")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --appkey --page-number --page-size --yd-rds-instance-id --rds-instance-name --vender-id --vender-name " -- $cur) )
                        ;;
                    "add-datapush-vender")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --datapush-vender " -- $cur) )
                        ;;
                    "delete-datapush-vender")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --appkey --yd-rds-instance-id --vender-id " -- $cur) )
                        ;;
                    "describe-rds-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --appkey " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "datastar")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-large-screen-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --region --industry --start-date --end-date --first-index --second-index " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "kms")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-key-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size " -- $cur) )
                        ;;
                    "create-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-cfg " -- $cur) )
                        ;;
                    "describe-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id " -- $cur) )
                        ;;
                    "update-key-description")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --key-cfg " -- $cur) )
                        ;;
                    "enable-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id " -- $cur) )
                        ;;
                    "disable-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id " -- $cur) )
                        ;;
                    "schedule-key-deletion")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --delay-days " -- $cur) )
                        ;;
                    "cancel-key-deletion")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id " -- $cur) )
                        ;;
                    "key-rotation")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id " -- $cur) )
                        ;;
                    "encrypt")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --plaintext " -- $cur) )
                        ;;
                    "decrypt")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --ciphertext-blob " -- $cur) )
                        ;;
                    "get-public-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id " -- $cur) )
                        ;;
                    "sign")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --plaintext " -- $cur) )
                        ;;
                    "validate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --plaintext --signature " -- $cur) )
                        ;;
                    "generate-data-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id " -- $cur) )
                        ;;
                    "describe-key-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --page-number --page-size " -- $cur) )
                        ;;
                    "enable-key-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --version " -- $cur) )
                        ;;
                    "disable-key-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --version " -- $cur) )
                        ;;
                    "schedule-key-version-deletion")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --version --delay-days " -- $cur) )
                        ;;
                    "cancel-key-version-deletion")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --key-id --version " -- $cur) )
                        ;;
                    "describe-secret-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size " -- $cur) )
                        ;;
                    "create-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-cfg " -- $cur) )
                        ;;
                    "import-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-package " -- $cur) )
                        ;;
                    "describe-secret-version-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id --page-number --page-size " -- $cur) )
                        ;;
                    "update-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id --secret-desc-cfg " -- $cur) )
                        ;;
                    "enable-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id " -- $cur) )
                        ;;
                    "disable-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id " -- $cur) )
                        ;;
                    "delete-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id " -- $cur) )
                        ;;
                    "create-secret-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id --secret-version-cfg " -- $cur) )
                        ;;
                    "export-secret")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id " -- $cur) )
                        ;;
                    "describe-secret-version-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id --version " -- $cur) )
                        ;;
                    "update-secret-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id --version --secret-time-cfg " -- $cur) )
                        ;;
                    "enable-secret-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id --version " -- $cur) )
                        ;;
                    "disable-secret-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id --version " -- $cur) )
                        ;;
                    "delete-secret-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --secret-id --version " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "elite")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "jdx-query-delivery-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --order-number " -- $cur) )
                        ;;
                    "jdx-report-order")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --report-order-info " -- $cur) )
                        ;;
                    "jdx-create-order")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --create-order-info " -- $cur) )
                        ;;
                    "jdx-query-price")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --query-price-param " -- $cur) )
                        ;;
                    "jdx-query-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-no --page-size " -- $cur) )
                        ;;
                    "list-sale-service")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-no --page-size --deliver-number --deliver-status --create-dt-start --create-dt-end " -- $cur) )
                        ;;
                    "get-sale-service-by-deliver-number")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --deliver-number " -- $cur) )
                        ;;
                    "confirm-sale-service-delivery")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --confirm-delivery-info " -- $cur) )
                        ;;
                    "get-store-service")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --buyer-pin --business-data --query-all " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "ossopenapi")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-single-bucket-capacity")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucket-name --capacity-types --begin-time --end-time --period-type --method " -- $cur) )
                        ;;
                    "get-back-source-configuration")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucket-name " -- $cur) )
                        ;;
                    "put-back-source-configuration")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucket-name --back-source-rules " -- $cur) )
                        ;;
                    "delete-back-source-configuration")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucket-name " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "iam")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "enable-sub-user-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user --access-key " -- $cur) )
                        ;;
                    "disable-sub-user-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user --access-key " -- $cur) )
                        ;;
                    "delete-sub-user-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user --access-key " -- $cur) )
                        ;;
                    "create-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --create-group-info " -- $cur) )
                        ;;
                    "describe-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name " -- $cur) )
                        ;;
                    "update-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name --update-group-info " -- $cur) )
                        ;;
                    "delete-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name " -- $cur) )
                        ;;
                    "describe-group-sub-users")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name --page-number --page-size " -- $cur) )
                        ;;
                    "describe-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --keyword --sort " -- $cur) )
                        ;;
                    "describe-attached-group-policies")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name " -- $cur) )
                        ;;
                    "detach-group-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name --policy-name " -- $cur) )
                        ;;
                    "attach-group-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name --policy-name " -- $cur) )
                        ;;
                    "remove-sub-user-from-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name --sub-user " -- $cur) )
                        ;;
                    "add-sub-user-to-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --group-name --sub-user " -- $cur) )
                        ;;
                    "create-permission")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --create-permission-info " -- $cur) )
                        ;;
                    "describe-permission-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --permission-id " -- $cur) )
                        ;;
                    "update-permission")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --permission-id --update-permission-info " -- $cur) )
                        ;;
                    "describe-permissions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --keyword --query-type " -- $cur) )
                        ;;
                    "describe-sub-user-permissions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --sub-user --page-number --page-size " -- $cur) )
                        ;;
                    "add-permissions-to-sub-user")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --sub-user --add-permissions-info " -- $cur) )
                        ;;
                    "remove-permission-of-sub-user")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --permission-id --sub-user " -- $cur) )
                        ;;
                    "create-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --create-policy-info " -- $cur) )
                        ;;
                    "describe-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --policy-name " -- $cur) )
                        ;;
                    "update-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --policy-name --update-policy-info " -- $cur) )
                        ;;
                    "delete-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --policy-name " -- $cur) )
                        ;;
                    "update-policy-description")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --policy-name --update-policy-description-info " -- $cur) )
                        ;;
                    "describe-policies")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --keyword --query-type --sort " -- $cur) )
                        ;;
                    "create-role")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --create-role-info " -- $cur) )
                        ;;
                    "describe-role")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --role-name " -- $cur) )
                        ;;
                    "delete-role")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --role-name " -- $cur) )
                        ;;
                    "update-assume-role-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --role-name --update-assume-role-policy-info " -- $cur) )
                        ;;
                    "describe-roles")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --role-name --type --sort " -- $cur) )
                        ;;
                    "attach-role-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --role-name --policy-name " -- $cur) )
                        ;;
                    "detach-role-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --role-name --policy-name " -- $cur) )
                        ;;
                    "describe-role-policies")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --role-name --page-number --page-size --keyword --sort " -- $cur) )
                        ;;
                    "create-sub-user")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --create-sub-user-info " -- $cur) )
                        ;;
                    "describe-sub-user")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user " -- $cur) )
                        ;;
                    "update-sub-user")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user --update-sub-user-info " -- $cur) )
                        ;;
                    "delete-sub-user")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user " -- $cur) )
                        ;;
                    "describe-sub-users")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --keyword --sort " -- $cur) )
                        ;;
                    "describe-sub-user-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user " -- $cur) )
                        ;;
                    "describe-attached-sub-user-policies")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user " -- $cur) )
                        ;;
                    "detach-sub-user-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user --policy-name " -- $cur) )
                        ;;
                    "attach-sub-user-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --sub-user --policy-name " -- $cur) )
                        ;;
                    "describe-user-access-keys")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-user-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "enabled-user-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key " -- $cur) )
                        ;;
                    "disabled-user-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key " -- $cur) )
                        ;;
                    "delete-user-access-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --access-key " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "iothub")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-thing-shadow")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --identifier --product-key " -- $cur) )
                        ;;
                    "update-thing-shadow")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --identifier --product-key --state --version " -- $cur) )
                        ;;
                    "invoke-thing-service")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --identifier --product-key --name --input " -- $cur) )
                        ;;
                    "query-device-page")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --device-name --status --product-key --device-type --now-page --page-size --order --direction --parent-id " -- $cur) )
                        ;;
                    "update-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --device-id --model --manufacturer --description --status " -- $cur) )
                        ;;
                    "add-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --device-name --product-key --model --manufacturer --description " -- $cur) )
                        ;;
                    "query-device-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --device-name --region-id --product-key " -- $cur) )
                        ;;
                    "remove-device")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --device-name --region-id --product-key " -- $cur) )
                        ;;
                    "remove-device-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --device-id " -- $cur) )
                        ;;
                    "list-products")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --product-name --product-type --product-description --template-id " -- $cur) )
                        ;;
                    "describe-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --product-key " -- $cur) )
                        ;;
                    "update-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --product-key --product-name --product-description --dynamic-register " -- $cur) )
                        ;;
                    "delete-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --product-key " -- $cur) )
                        ;;
                    "list-product-abilities")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --product-key --page-number --page-size --filters " -- $cur) )
                        ;;
                    "import-thing-model")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --product-key --thing-model " -- $cur) )
                        ;;
                    "export-thing-model")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --product-key " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "sms")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "batch-send")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --template-id --sign-id --phone-list --params " -- $cur) )
                        ;;
                    "status-report")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --sequence-number --phone-list " -- $cur) )
                        ;;
                    "reply")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --app-id --data-date --phone-list " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "jcq")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-access-point")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name " -- $cur) )
                        ;;
                    "describe-consumer-group-ids")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-dead-letter-numbers")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --consumer-group-id --page-number --page-size " -- $cur) )
                        ;;
                    "describe-dead-letter-numbers-with-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id --page-number --page-size " -- $cur) )
                        ;;
                    "list-dead-letters")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id --page-number --page-size --start-time --end-time " -- $cur) )
                        ;;
                    "delete-dead-letters")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id --message-ids " -- $cur) )
                        ;;
                    "resend-dead-letters")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id --message-ids " -- $cur) )
                        ;;
                    "describe-messages")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --start-time --end-time --page-size --page-number " -- $cur) )
                        ;;
                    "describe-message")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --message-id " -- $cur) )
                        ;;
                    "describe-message-trace")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --message-id " -- $cur) )
                        ;;
                    "describe-messages-by-business-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --business-id " -- $cur) )
                        ;;
                    "describe-permission")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name " -- $cur) )
                        ;;
                    "add-permission")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --permission --target-user-id " -- $cur) )
                        ;;
                    "remove-permission")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --permission --target-user-id " -- $cur) )
                        ;;
                    "describe-subscriptions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-filter --page-size --page-number " -- $cur) )
                        ;;
                    "create-subscription")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id --message-invisible-time-in-seconds --dlq-enable --max-retry-times " -- $cur) )
                        ;;
                    "describe-subscription")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id " -- $cur) )
                        ;;
                    "modify-subscription-attribute")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id --max-retry-times --message-invisible-time-in-seconds --dlq-enable " -- $cur) )
                        ;;
                    "delete-subscription")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id " -- $cur) )
                        ;;
                    "clean-messages")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id " -- $cur) )
                        ;;
                    "reset-consume-offset")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --consumer-group-id --time " -- $cur) )
                        ;;
                    "describe-topics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-size --page-number --topic-filter --tag-filters " -- $cur) )
                        ;;
                    "create-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name --type --description " -- $cur) )
                        ;;
                    "describe-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name " -- $cur) )
                        ;;
                    "delete-topic")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --topic-name " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "baseanti")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-attack-logs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --start-time --end-time --ip " -- $cur) )
                        ;;
                    "describe-attack-statistics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --ip " -- $cur) )
                        ;;
                    "describe-attack-type-count")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --ip " -- $cur) )
                        ;;
                    "describe-ip-monitor-flow")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --start-time --end-time --ip " -- $cur) )
                        ;;
                    "describe-ip-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip " -- $cur) )
                        ;;
                    "describe-elastic-ip-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size " -- $cur) )
                        ;;
                    "describe-cps-ip-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size " -- $cur) )
                        ;;
                    "describe-ccs-ip-resources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size " -- $cur) )
                        ;;
                    "describe-ip-resource-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip " -- $cur) )
                        ;;
                    "describe-ip-safety-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip " -- $cur) )
                        ;;
                    "set-clean-threshold")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip --clean-threshold-spec " -- $cur) )
                        ;;
                    "set-ip-clean-threshold")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip-clean-threshold-spec " -- $cur) )
                        ;;
                    "describe-ip-clean-threshold-range")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip " -- $cur) )
                        ;;
                    "describe-ip-resource-protect-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip --start --limit " -- $cur) )
                        ;;
                    "describe-ip-resource-flow")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --ip --end-time " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "ias")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "apps")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pin --app-name --client-id --multi-tenant --state --scope --start-time --end-time --account-type --page-index --page-size --offset " -- $cur) )
                        ;;
                    "app-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-id " -- $cur) )
                        ;;
                    "state")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-app")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-name --token-endpoint-auth-method --grant-types --redirect-uris --client-uri --logo-uri --tos-uri --policy-uri --scope --jwks-uri --jwks --contacts --extension --access-token-validity-seconds --refresh-token-validity-seconds --multi-tenant --secret --user-type " -- $cur) )
                        ;;
                    "get-app")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-id " -- $cur) )
                        ;;
                    "update-app")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-id --client-name --token-endpoint-auth-method --grant-types --redirect-uris --client-uri --logo-uri --tos-uri --policy-uri --scope --jwks-uri --jwks --contacts --extension --access-token-validity-seconds --refresh-token-validity-seconds --multi-tenant --secret --user-type " -- $cur) )
                        ;;
                    "delete-app")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --client-id " -- $cur) )
                        ;;
                    "get-apps")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "mongodb")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --tag-filters --sorts " -- $cur) )
                        ;;
                    "create-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-spec --charge-spec " -- $cur) )
                        ;;
                    "delete-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "reset-password")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-password " -- $cur) )
                        ;;
                    "modify-instance-spec")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --instance-class --instance-storage-gb " -- $cur) )
                        ;;
                    "modify-instance-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --instance-name " -- $cur) )
                        ;;
                    "describe-backup-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-backup-policy")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --preferred-backup-time " -- $cur) )
                        ;;
                    "restore-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --backup-id " -- $cur) )
                        ;;
                    "describe-flavors")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-available-zones")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "describe-backups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --backup-name " -- $cur) )
                        ;;
                    "delete-backup")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backup-id " -- $cur) )
                        ;;
                    "backup-download-url")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --backup-id " -- $cur) )
                        ;;
                    "describe-security-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-security-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --modify-mode --security-ips " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "live")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-live-app")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "add-live-app")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name " -- $cur) )
                        ;;
                    "stop-live-app")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name " -- $cur) )
                        ;;
                    "describe-live-play-auth-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain " -- $cur) )
                        ;;
                    "set-live-play-auth-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain --auth-status --auth-key " -- $cur) )
                        ;;
                    "describe-live-restart-auth-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --restart-domain " -- $cur) )
                        ;;
                    "set-live-restart-auth-key")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --restart-domain --auth-status --auth-key " -- $cur) )
                        ;;
                    "describe-live-domain-certificate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain " -- $cur) )
                        ;;
                    "set-live-domain-certificate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain --cert-status --cert --key --title " -- $cur) )
                        ;;
                    "describe-live-restart-domain-certificate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --restart-domain " -- $cur) )
                        ;;
                    "set-live-restart-domain-certificate")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --restart-domain --cert-status --cert --key --title " -- $cur) )
                        ;;
                    "describe-live-domains")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --publish-domain " -- $cur) )
                        ;;
                    "add-live-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --play-domain " -- $cur) )
                        ;;
                    "start-live-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "stop-live-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "describe-live-domain-detail")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "delete-live-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "add-live-restart-domain")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain --restart-domain " -- $cur) )
                        ;;
                    "add-custom-live-stream-quality-detection-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template --modules " -- $cur) )
                        ;;
                    "describe-custom-live-stream-quality-detection-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "add-live-stream-app-quality-detection")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "add-live-stream-domain-quality-detection")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "set-live-stream-quality-detection-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --notify-url " -- $cur) )
                        ;;
                    "delete-custom-live-stream-quality-detection-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "delete-live-stream-app-quality-detection")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "delete-live-stream-domain-quality-detection")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "describe-live-stream-quality-detection-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "delete-live-stream-quality-detection-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "describe-quality-detection-binding")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "open-live-p2p")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain " -- $cur) )
                        ;;
                    "close-live-p2p")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain " -- $cur) )
                        ;;
                    "describe-live-p2p-configs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --play-domain " -- $cur) )
                        ;;
                    "describe-custom-live-stream-record-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "add-custom-live-stream-record-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --record-period --save-bucket --save-endpoint --record-file-type --template " -- $cur) )
                        ;;
                    "add-live-stream-app-record")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "add-live-stream-domain-record")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "describe-custom-live-stream-record-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "set-live-stream-record-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --notify-url " -- $cur) )
                        ;;
                    "delete-custom-live-stream-record-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "delete-live-stream-app-record")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "delete-live-stream-domain-record")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "describe-live-stream-record-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "delete-live-stream-record-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "add-live-record-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --stream-name --record-times --save-bucket --save-endpoint --record-file-type --save-object --task-external-id " -- $cur) )
                        ;;
                    "describe-record-binding")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "describe-live-statistic-group-by-stream")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --isp-name --location-name --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-statistic-group-by-area")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --isp-name --location-name --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-statistic-group-by-area-isp")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --isp-name --location-name --protocol-type --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-publish-stream-info-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-stream-history-user-num")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --isp-name --location-name --protocol-type --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-publish-stream-num")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --protocol-type --isp-name --location-name --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-stream-player-ranking-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --protocol-type --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-transcode-stream-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name " -- $cur) )
                        ;;
                    "describe-live-transcode-stream-num")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name " -- $cur) )
                        ;;
                    "describe-live-transcode-stream-player-user-num")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --isp-name --location-name --protocol-type --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-transcode-stream-bandwidth")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --isp-name --location-name --protocol-type --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-domain-online-stream")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --page-num --page-size --start-time --end-time " -- $cur) )
                        ;;
                    "describe-domains-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domains --interval --start-time --end-time " -- $cur) )
                        ;;
                    "describe-url-ranking")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --size --rankfield --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-transcoding-duration-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --grade --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-file-storage-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-stream-bandwidth-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --isp-name --location-name --protocol-type --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-stream-publish-bandwidth-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --isp-name --location-name --protocol-type --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-stream-traffic-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --isp-name --location-name --protocol-type --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-stream-publish-traffic-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --domain-name --app-name --stream-name --isp-name --location-name --protocol-type --period --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-snapshot-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --stream-name --start-time --end-time " -- $cur) )
                        ;;
                    "describe-live-porn-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --stream-name --start-time --end-time " -- $cur) )
                        ;;
                    "add-custom-live-stream-snapshot-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --format --width --height --fill-type --snapshot-interval --save-mode --save-bucket --save-endpoint --template " -- $cur) )
                        ;;
                    "describe-custom-live-stream-snapshot-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "describe-custom-live-stream-snapshot-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "add-live-stream-app-snapshot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "add-live-stream-domain-snapshot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "set-live-stream-snapshot-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --notify-url " -- $cur) )
                        ;;
                    "delete-custom-live-stream-snapshot-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "delete-live-stream-app-snapshot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "delete-live-stream-domain-snapshot")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "describe-live-stream-snapshot-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "delete-live-stream-snapshot-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "describe-snapshot-binding")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "forbid-live-stream")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --stream-name --forbid-time " -- $cur) )
                        ;;
                    "resume-live-stream")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --stream-name " -- $cur) )
                        ;;
                    "interrupt-live-stream")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --stream-name " -- $cur) )
                        ;;
                    "describe-live-stream-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --stream-name " -- $cur) )
                        ;;
                    "set-live-stream-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --notify-url " -- $cur) )
                        ;;
                    "describe-live-stream-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "delete-live-stream-notify-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain " -- $cur) )
                        ;;
                    "describe-live-stream-online-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --page-num --page-size --app-name " -- $cur) )
                        ;;
                    "describe-live-stream-publish-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --page-num --page-size --app-name --stream-name --start-time --end-time " -- $cur) )
                        ;;
                    "open-live-restart")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --restart-domain " -- $cur) )
                        ;;
                    "close-live-restart")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --restart-domain " -- $cur) )
                        ;;
                    "describe-live-restart-configs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --restart-domain " -- $cur) )
                        ;;
                    "open-live-timeshift")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain " -- $cur) )
                        ;;
                    "close-live-timeshift")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --play-domain " -- $cur) )
                        ;;
                    "describe-live-timeshift-configs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --play-domain " -- $cur) )
                        ;;
                    "add-live-stream-domain-transcode")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "add-live-stream-app-transcode")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "add-custom-live-stream-transcode-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template-name --video-codec --video-code-rate --video-frame-rate --width --height --template --audio-codec --audio-format --audio-sample-rate --audio-channel --audio-code-rate --jdchd --audio-comfort " -- $cur) )
                        ;;
                    "describe-custom-live-stream-transcode-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "describe-system-live-stream-transcode-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "describe-live-stream-transcode-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "delete-live-stream-domain-transcode")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "delete-live-stream-app-transcode")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "describe-custom-live-stream-transcode-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "delete-custom-live-stream-transcode-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "describe-transcode-binding")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "add-custom-live-stream-watermark-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --position --offset-unit --offset-x --offset-y --size-unit --width --height --template --upload-id --url " -- $cur) )
                        ;;
                    "describe-custom-live-stream-watermark-templates")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "add-live-stream-app-watermark")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "add-live-stream-domain-watermark")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "describe-custom-live-stream-watermark-config")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-num --page-size --filters " -- $cur) )
                        ;;
                    "delete-custom-live-stream-watermark-template")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;
                    "delete-live-stream-app-watermark")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --app-name --template " -- $cur) )
                        ;;
                    "delete-live-stream-domain-watermark")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --publish-domain --template " -- $cur) )
                        ;;
                    "describe-watermark-binding")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --template " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "jdfusion")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-cloud-infos")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --driver " -- $cur) )
                        ;;
                    "regist-cloud-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cloud " -- $cur) )
                        ;;
                    "get-cloud-info-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cloud-id " -- $cur) )
                        ;;
                    "unregist-cloud-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cloud-id " -- $cur) )
                        ;;
                    "valid-cloud-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --cloud-id " -- $cur) )
                        ;;
                    "get-deployments")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-deployment")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --deployment " -- $cur) )
                        ;;
                    "reverse-deployment")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --reverse " -- $cur) )
                        ;;
                    "get-deployments-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "edit-deployment")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --deployment " -- $cur) )
                        ;;
                    "delete-deployment")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "clone-deployment")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --deployment " -- $cur) )
                        ;;
                    "dryrun-deployment")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "apply-deployment")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --apply " -- $cur) )
                        ;;
                    "get-deployment-result")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-deployment-versions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-deployments-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --version_id " -- $cur) )
                        ;;
                    "rollback-deployments-version")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --version_id " -- $cur) )
                        ;;
                    "get-deployments-results-by-id-record")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --record " -- $cur) )
                        ;;
                    "get-disks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vm-id " -- $cur) )
                        ;;
                    "create-disk")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --disk " -- $cur) )
                        ;;
                    "get-disk-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "remove-disk-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "attach-disk-to-vm-instance-by-disk-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --attach " -- $cur) )
                        ;;
                    "detach-disk-to-vm-instance-by-disk-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --detach " -- $cur) )
                        ;;
                    "get-buckets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-bucket")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --bucket " -- $cur) )
                        ;;
                    "get-bucket-by-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "delete-bucket")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "get-bucket-files")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name --marker " -- $cur) )
                        ;;
                    "get-transfer-tasks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-transfer-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --task " -- $cur) )
                        ;;
                    "get-transfer-task-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "edit-transfer-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --task " -- $cur) )
                        ;;
                    "delete-transfer-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "start-transfer-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "stop-transfer-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-transfer-task-progress")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-transfer-task-failed-files")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-rds-accounts-by-inst-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id " -- $cur) )
                        ;;
                    "create-rds-accounts")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id --account " -- $cur) )
                        ;;
                    "get-rds-accounts-by-inst-id-and-account-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id --account-name " -- $cur) )
                        ;;
                    "delete-rds-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id --account-name " -- $cur) )
                        ;;
                    "grant-rds-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id --account-name --db-privilege-info " -- $cur) )
                        ;;
                    "revoke-rds-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id --account-name --db-name " -- $cur) )
                        ;;
                    "grant-rds-accounts-by-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id --account-name --info " -- $cur) )
                        ;;
                    "get-rds-databases-by-inst-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id " -- $cur) )
                        ;;
                    "create-rds-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id --database " -- $cur) )
                        ;;
                    "get-rds-database-by-inst-id-and-db-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id --db-name " -- $cur) )
                        ;;
                    "delete-rds-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id --db-name " -- $cur) )
                        ;;
                    "get-rds-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-rds-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance " -- $cur) )
                        ;;
                    "get-rds-by-inst-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id " -- $cur) )
                        ;;
                    "delete-rds-by-inst-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --inst-id " -- $cur) )
                        ;;
                    "get-channels")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-channel")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --channel " -- $cur) )
                        ;;
                    "delete-channel")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "start-channel")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "stop-channel")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-datasources")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-datasource")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --datasource " -- $cur) )
                        ;;
                    "delete-datasource")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-rds-specification")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --engine " -- $cur) )
                        ;;
                    "get-regions")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "get-regions-available-zones")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --region " -- $cur) )
                        ;;
                    "get-task-info-history-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --task " -- $cur) )
                        ;;
                    "get-task-info-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --task --file-name " -- $cur) )
                        ;;
                    "get-vm-images")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --image-source " -- $cur) )
                        ;;
                    "get-vm-instances-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "delete-vm-instance-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-vm-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-vm-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vm " -- $cur) )
                        ;;
                    "stop-vm-instance-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "start-vm-instance-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "reboot-vm-instance-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-vm-instance-types")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --az " -- $cur) )
                        ;;
                    "get-vm-keypairs-by-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "delete-vm-keypair-by-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --name " -- $cur) )
                        ;;
                    "get-vm-keypairs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-vm-keypair")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --keypair " -- $cur) )
                        ;;
                    "get-vpc-eips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-vpc-eip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --allocate " -- $cur) )
                        ;;
                    "get-vpc-eip-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "delete-vpc-eip-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "associate-vpc-eip-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --associate " -- $cur) )
                        ;;
                    "disassociate-vpc-eip-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --unassociate " -- $cur) )
                        ;;
                    "get-lb-http-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --slbid " -- $cur) )
                        ;;
                    "create-vpc-lbhttp-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --http-listener " -- $cur) )
                        ;;
                    "get-vpc-network-interface-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "delete-vpc-network-interface-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-vpc-network-interfaces")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vm-id " -- $cur) )
                        ;;
                    "create-vpc-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --net-interface " -- $cur) )
                        ;;
                    "attach-vpc-network-interface-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --attach " -- $cur) )
                        ;;
                    "detach-vpc-network-interface-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --detach " -- $cur) )
                        ;;
                    "get-vpc-security-group-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "delete-vpc-security-group-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-vpc-security-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-vpc-security-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --security-group " -- $cur) )
                        ;;
                    "create-security-groups-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --sg-rule " -- $cur) )
                        ;;
                    "delete-security-groups-rule")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --rule-type --protocol --from-port --to-port --nic-type --policy --priority --cidr-ip " -- $cur) )
                        ;;
                    "get-vpc-slb-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "delete-vpc-slb-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-vpc-slbs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-vpc-slb")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --slb " -- $cur) )
                        ;;
                    "start-slb")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "stop-slb")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "delete-slbs-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --listener-port " -- $cur) )
                        ;;
                    "start-slb-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --listener-port " -- $cur) )
                        ;;
                    "stop-slb-listener")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id --listener-port " -- $cur) )
                        ;;
                    "get-vpc-subnet-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "delete-vpc-subnet-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-vpc-subnets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-vpc-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet " -- $cur) )
                        ;;
                    "get-vpc-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "delete-vpc-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "get-vpcs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc " -- $cur) )
                        ;;
                    "get-vpc-vserver-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --slbid " -- $cur) )
                        ;;
                    "create-vpc-vserver-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vserver-group " -- $cur) )
                        ;;
                    "get-vserver-groups-by-id")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;
                    "delete-vserver-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "detection")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-agent-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --filters " -- $cur) )
                        ;;
                    "describe-metric-data-am")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --resource-id --start-time --end-time --time-interval " -- $cur) )
                        ;;
                    "create-probe-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --client-token --create-probe-task-spec " -- $cur) )
                        ;;
                    "delete-probe-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --probe-task-ids " -- $cur) )
                        ;;
                    "describe-probe-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --probe-task-id " -- $cur) )
                        ;;
                    "update-probe-task")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --probe-task-id --http-body --http-cookie --http-header --http-type --name --probes " -- $cur) )
                        ;;
                    "describe-probe-history")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --probe-task-id --probe-id --start-time --end-time " -- $cur) )
                        ;;
                    "discribe-probes")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --probe-task-id --filters " -- $cur) )
                        ;;
                    "probe-task-enable")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --enabled --task-id " -- $cur) )
                        ;;
                    "describe-probe-tasks")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --name --type --time-interval --with-stats --with-deleted --enabled --filters " -- $cur) )
                        ;;
                    "get-site-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --name-or-addr --name --id --task-type --page-number --page-size --with-stats --with-deleted --time-interval --filters " -- $cur) )
                        ;;
                    "create-site-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --address --advance-checked --created-time --cycle --default-source --dns-option --enabled --ftp-option --hawkeye-id --http-option --id --is-deleted --name --pin --ping-option --pop3option --port --smtp-option --source --stats --task-type --tcp-option --udp-option --updated-time " -- $cur) )
                        ;;
                    "update-site-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --address --advance-checked --created-time --cycle --default-source --dns-option --enabled --ftp-option --hawkeye-id --http-option --id --is-deleted --name --pin --ping-option --pop3option --port --smtp-option --source --stats --task-type --tcp-option --udp-option --updated-time " -- $cur) )
                        ;;
                    "delete-site-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --filters " -- $cur) )
                        ;;
                    "enable-site-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --list " -- $cur) )
                        ;;
                    "validate-site-monitor-address")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --address " -- $cur) )
                        ;;
                    "get-site-monitor-data-points")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --id --start-time --end-time " -- $cur) )
                        ;;
                    "get-site-monitor-source")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json " -- $cur) )
                        ;;
                    "test-site-monitor")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --address --advance-checked --created-time --cycle --default-source --dns-option --enabled --ftp-option --hawkeye-id --http-option --id --is-deleted --name --pin --ping-option --pop3option --port --smtp-option --source --stats --task-type --tcp-option --udp-option --updated-time " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "renewal")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "set-renewal")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --set-renewal-param " -- $cur) )
                        ;;
                    "query-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --query-instance-param " -- $cur) )
                        ;;
                    "renew-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --renew-instance-param " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "iotlink")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "gprs-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --iccid " -- $cur) )
                        ;;
                    "on-off-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --iccid " -- $cur) )
                        ;;
                    "life-status")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --iccid " -- $cur) )
                        ;;
                    "gprs-realtime-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --iccid " -- $cur) )
                        ;;
                    "open-iot-card")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --iccids " -- $cur) )
                        ;;
                    "close-iot-card")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --iccids " -- $cur) )
                        ;;
                    "open-iot-flow")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --iccids " -- $cur) )
                        ;;
                    "close-iot-flow")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --iccids " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "yunding")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "assign-secondary-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --force --secondary-ips --secondary-ip-count " -- $cur) )
                        ;;
                    "unassign-secondary-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --secondary-ips " -- $cur) )
                        ;;
                    "describe-rds-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --type " -- $cur) )
                        ;;
                    "describe-rds-instance")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-instance-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "describe-rds-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id " -- $cur) )
                        ;;
                    "modify-rds-white-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --ips " -- $cur) )
                        ;;
                    "describe-rds-accounts")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --page-number --page-size " -- $cur) )
                        ;;
                    "create-rds-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --account-password " -- $cur) )
                        ;;
                    "delete-rds-account")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name " -- $cur) )
                        ;;
                    "grant-rds-privilege")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --account-name --account-privileges " -- $cur) )
                        ;;
                    "describe-rds-databases")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --page-number --page-size " -- $cur) )
                        ;;
                    "create-rds-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name --character-set-name " -- $cur) )
                        ;;
                    "delete-rds-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-id --db-name " -- $cur) )
                        ;;
                    "describe-yd-rds-instances")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --app-key " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "vpc")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-elastic-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters --tags " -- $cur) )
                        ;;
                    "create-elastic-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --max-count --elastic-ip-address --elastic-ip-spec --user-tags " -- $cur) )
                        ;;
                    "describe-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --elastic-ip-id " -- $cur) )
                        ;;
                    "modify-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --elastic-ip-id --bandwidth-mbps " -- $cur) )
                        ;;
                    "delete-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --elastic-ip-id " -- $cur) )
                        ;;
                    "describe-network-acls")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-network-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --network-acl-name --description " -- $cur) )
                        ;;
                    "describe-network-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id " -- $cur) )
                        ;;
                    "modify-network-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id --network-acl-name --description " -- $cur) )
                        ;;
                    "delete-network-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id " -- $cur) )
                        ;;
                    "associate-network-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id --subnet-ids " -- $cur) )
                        ;;
                    "disassociate-network-acl")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id --subnet-id " -- $cur) )
                        ;;
                    "add-network-acl-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id --network-acl-rule-specs " -- $cur) )
                        ;;
                    "remove-network-acl-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id --rule-ids " -- $cur) )
                        ;;
                    "modify-network-acl-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-acl-id --modify-network-acl-rule-specs " -- $cur) )
                        ;;
                    "describe-network-interfaces")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id --az --network-interface-name --primary-ip-address --secondary-ip-addresses --secondary-ip-count --security-groups --sanity-check --description " -- $cur) )
                        ;;
                    "describe-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id " -- $cur) )
                        ;;
                    "modify-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --network-interface-name --description --security-groups " -- $cur) )
                        ;;
                    "delete-network-interface")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id " -- $cur) )
                        ;;
                    "associate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --elastic-ip-id --private-ip-address --elastic-ip-address " -- $cur) )
                        ;;
                    "disassociate-elastic-ip")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --elastic-ip-id --elastic-ip-address " -- $cur) )
                        ;;
                    "assign-secondary-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --force --secondary-ips --secondary-ip-count " -- $cur) )
                        ;;
                    "unassign-secondary-ips")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-interface-id --secondary-ips " -- $cur) )
                        ;;
                    "describe-network-security-groups")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-network-security-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --network-security-group-name --description " -- $cur) )
                        ;;
                    "describe-network-security-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-security-group-id " -- $cur) )
                        ;;
                    "modify-network-security-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-security-group-id --network-security-group-name --description " -- $cur) )
                        ;;
                    "delete-network-security-group")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-security-group-id " -- $cur) )
                        ;;
                    "add-network-security-group-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-security-group-id --network-security-group-rule-specs " -- $cur) )
                        ;;
                    "remove-network-security-group-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-security-group-id --rule-ids " -- $cur) )
                        ;;
                    "modify-network-security-group-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --network-security-group-id --modify-security-group-rule-specs " -- $cur) )
                        ;;
                    "describe-quota")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --type --parent-resource-id " -- $cur) )
                        ;;
                    "describe-route-tables")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --route-table-name --description " -- $cur) )
                        ;;
                    "describe-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id " -- $cur) )
                        ;;
                    "modify-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id --route-table-name --description " -- $cur) )
                        ;;
                    "delete-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id " -- $cur) )
                        ;;
                    "add-route-table-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id --route-table-rule-specs " -- $cur) )
                        ;;
                    "remove-route-table-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id --rule-ids " -- $cur) )
                        ;;
                    "modify-route-table-rules")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id --modify-route-table-rule-specs " -- $cur) )
                        ;;
                    "associate-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id --subnet-ids " -- $cur) )
                        ;;
                    "disassociate-route-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --route-table-id --subnet-id " -- $cur) )
                        ;;
                    "describe-subnets")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --subnet-name --address-prefix --route-table-id --description " -- $cur) )
                        ;;
                    "describe-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id " -- $cur) )
                        ;;
                    "modify-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id --subnet-name --description " -- $cur) )
                        ;;
                    "delete-subnet")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --subnet-id " -- $cur) )
                        ;;
                    "describe-vpcs")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-name --address-prefix --description " -- $cur) )
                        ;;
                    "describe-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id " -- $cur) )
                        ;;
                    "modify-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id --vpc-name --description " -- $cur) )
                        ;;
                    "delete-vpc")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-id " -- $cur) )
                        ;;
                    "describe-vpc-peerings")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --page-number --page-size --filters " -- $cur) )
                        ;;
                    "create-vpc-peering")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-peering-name --vpc-id --remote-vpc-id --description " -- $cur) )
                        ;;
                    "describe-vpc-peering")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-peering-id " -- $cur) )
                        ;;
                    "modify-vpc-peering")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-peering-id --vpc-peering-name --description " -- $cur) )
                        ;;
                    "delete-vpc-peering")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --vpc-peering-id " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "monitor")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "describe-alarms")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --service-code --product --dimension --rule-name --rule-type --enabled --rule-status --filters " -- $cur) )
                        ;;
                    "create-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --base-contact --client-token --dimension --enabled --notice-option --product --resource-option --rule-name --rule-option --rule-type --tags --web-hook-option " -- $cur) )
                        ;;
                    "describe-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --alarm-id " -- $cur) )
                        ;;
                    "update-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --alarm-id --base-contact --dimension --enabled --notice-option --product --resource-option --rule-name --rule-option --rule-type --tags --web-hook-option " -- $cur) )
                        ;;
                    "delete-alarms")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --alarm-id " -- $cur) )
                        ;;
                    "describe-alarm-contacts")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --alarm-id --page-number --page-size --reference-type " -- $cur) )
                        ;;
                    "describe-metrics-for-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --service-code --product --dimension --metric-type " -- $cur) )
                        ;;
                    "describe-products-for-alarm")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --service-code --product " -- $cur) )
                        ;;
                    "enable-alarms")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --alarm-ids --state " -- $cur) )
                        ;;
                    "describe-alarm-history")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --page-number --page-size --service-code --product --dimension --is-alarming --status --start-time --end-time --rule-type --rule-name --filters " -- $cur) )
                        ;;
                    "describe-metrics")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --service-code --type " -- $cur) )
                        ;;
                    "last-downsample")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --metric --service-code --dimension --resource-id --tags --start-time --end-time --time-interval --aggr-type --down-aggr-type " -- $cur) )
                        ;;
                    "describe-metric-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --metric --aggr-type --down-sample-type --start-time --end-time --time-interval --tags --group-by --rate --service-code --dimension --resource-id " -- $cur) )
                        ;;
                    "describe-services")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --filters --product-type " -- $cur) )
                        ;;
                    "put-metric-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --metric-data-list " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "xdata")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "list-database-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-name " -- $cur) )
                        ;;
                    "get-database-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --database-name --instance-name " -- $cur) )
                        ;;
                    "create-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --database-name --instance-name --description " -- $cur) )
                        ;;
                    "delete-database")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --database-name --instance-name " -- $cur) )
                        ;;
                    "list-instance-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "execute-ras-query")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --database-name --sql --user-name --queue-name --source --call-back-url --instance-name --instance-owner-name --is-explain " -- $cur) )
                        ;;
                    "execute-py-spark-query")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --script --user-name --instance-name --instance-owner-name --script-type " -- $cur) )
                        ;;
                    "get-ras-query-state")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "get-py-spark-execute-state")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "get-ras-query-log")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "get-ras-query-result")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "get-py-spark-execute-result")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "cancel-ras-query")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "cancel-py-spark-job")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --user-name --query-id " -- $cur) )
                        ;;
                    "list-table-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-name --database-name " -- $cur) )
                        ;;
                    "create-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --instance-name --db-model-dbtable " -- $cur) )
                        ;;
                    "get-table-info")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --table-name --instance-name --database-name " -- $cur) )
                        ;;
                    "delete-table")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --table-name --instance-name --database-name " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "containerregistry")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-authorization-token")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --expired-after-hours " -- $cur) )
                        ;;
                    "describe-authorization-tokens")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --filters --page-number --page-size " -- $cur) )
                        ;;
                    "release-authorization-token")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --authorization-token --force-all " -- $cur) )
                        ;;
                    "describe-images")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters --page-number --page-size " -- $cur) )
                        ;;
                    "delete-image")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --repository-name --image-digest --image-tag --image-tag-status " -- $cur) )
                        ;;
                    "describe-quotas")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters " -- $cur) )
                        ;;
                    "describe-registries")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id " -- $cur) )
                        ;;
                    "create-registry")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --description " -- $cur) )
                        ;;
                    "describe-registry")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name " -- $cur) )
                        ;;
                    "delete-registry")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name " -- $cur) )
                        ;;
                    "check-registry-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name " -- $cur) )
                        ;;
                    "create-repository")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --repository-name --description " -- $cur) )
                        ;;
                    "describe-repositories")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --filters --registry-name --page-number --page-size " -- $cur) )
                        ;;
                    "delete-repository")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --repository-name --force " -- $cur) )
                        ;;
                    "check-repository-name")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --registry-name --repository-name " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "partner")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "query-my-customer-list")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --customer-pin --alias-name --login-name --start-rel-time --end-rel-time --page-index --page-size " -- $cur) )
                        ;;
                    "get-total-consumption")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time " -- $cur) )
                        ;;
                    "get-each-consumption")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --start-time --end-time --pin --page-size --page-index " -- $cur) )
                        ;;
                    "describe-customer-bill-by-product")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --pin --start-time --end-time --page-size --page-index " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;

	        "industrydata")
                case "$prev" in
                    # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                    "get-large-screen-data")
                        COMPREPLY=( $(compgen \
                            -W "-h --help --headers --input-json --region-id --region --industry --start-date --end-date --first-index --second-index " -- $cur) )
                        ;;

                    "generate-skeleton")
                        COMPREPLY=( $(compgen -W "-h --help --api" -- $cur) )
                        ;;
                esac
                ;;


            "configure")
                case "$prev" in
                # HANDLE EVERYTHING AFTER THE THIRD LEVEL NAMESPACE
                "add")
                    COMPREPLY=( $(compgen -W "-h --help --access-key --region-id --secret-key --endpoint --profile --scheme" -- $cur) )
                    ;;

                "delete")
                    COMPREPLY=( $(compgen -W "-h --help --profile" -- $cur) )
                    ;;

                "show-current")
                    COMPREPLY=( $(compgen -W "-h --help" -- $cur) )
                    ;;

                "show-all")
                    COMPREPLY=( $(compgen -W "-h --help" -- $cur) )
                    ;;

                "use")
                    COMPREPLY=( $(compgen -W "-h --help --profile" -- $cur) )
                    ;;

                esac
        esac
    fi

    return 0

} &&
complete -F _jdc_complete jdc
