# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from argparse import RawTextHelpFormatter
from jdcloud_cli.cement.ext.ext_argparse import expose
from jdcloud_cli.controllers.base_controller import BaseController
from jdcloud_cli.client_factory import ClientFactory
from jdcloud_cli.parameter_builder import collect_user_args, collect_user_headers
from jdcloud_cli.printer import Printer
from jdcloud_cli.skeleton import Skeleton


class IpantiController(BaseController):
    class Meta:
        label = 'ipanti'
        help = '京东云IP高防相关接口'
        description = '''
        ipanti cli 子命令，京东云IP高防相关接口。
        OpenAPI文档地址为：https://docs.jdcloud.com/cn/anti-ddos-pro/api/overview
        '''
        stacked_on = 'base'
        stacked_type = 'nested'

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--page-number'], dict(help="""(int) 页码, 默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为10, 取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--search-type'], dict(help="""(string) 查询类型名称, domain:源站域名, ip:源站 IP, port: 转发端口, originPort: 源站端口, serviceIp: 高防IP(仅支持BGP线路的实例) """, dest='searchType',  required=False)),
            (['--search-value'], dict(help="""(string) 查询类型值 """, dest='searchValue',  required=False)),
            (['--sorts'], dict(help="""(array: sort) 排序属性：; port - 按转发端口排序，默认不排序,asc表示按转发端口升序，desc表示按转发端口降序;  """, dest='sorts',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询某个实例下的非网站转发配置 ''',
        description='''
            查询某个实例下的非网站转发配置。

            示例: jdc ipanti describe-forward-rules  --instance-id xxx
        ''',
    )
    def describe_forward_rules(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeForwardRulesRequest import DescribeForwardRulesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeForwardRulesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--forward-rule-spec'], dict(help="""(forwardRuleSpec) 添加非网站类规则请求参数 """, dest='forwardRuleSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 添加非网站类规则 ''',
        description='''
            添加非网站类规则。

            示例: jdc ipanti create-forward-rule  --instance-id xxx --forward-rule-spec '{"":""}'
        ''',
    )
    def create_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CreateForwardRuleRequest import CreateForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--forward-rule-spec-list'], dict(help="""(array: forwardRuleSpec) 批量添加非网站类规则请求参数 """, dest='forwardRuleSpecList',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 批量添加非网站类规则 ''',
        description='''
            批量添加非网站类规则。

            示例: jdc ipanti create-forward-rules  --instance-id xxx --forward-rule-spec-list ['{"":""}']
        ''',
    )
    def create_forward_rules(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CreateForwardRulesRequest import CreateForwardRulesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateForwardRulesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--forward-rule-id'], dict(help="""(string) 转发规则 Id """, dest='forwardRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询非网站类规则 ''',
        description='''
            查询非网站类规则。

            示例: jdc ipanti describe-forward-rule  --instance-id xxx --forward-rule-id xxx
        ''',
    )
    def describe_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeForwardRuleRequest import DescribeForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--forward-rule-id'], dict(help="""(string) 转发规则 Id """, dest='forwardRuleId',  required=True)),
            (['--forward-rule-spec'], dict(help="""(forwardRuleSpec) 更新非网站类规则请求参数 """, dest='forwardRuleSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 更新非网站类规则 ''',
        description='''
            更新非网站类规则。

            示例: jdc ipanti modify-forward-rule  --instance-id xxx --forward-rule-id xxx --forward-rule-spec '{"":""}'
        ''',
    )
    def modify_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyForwardRuleRequest import ModifyForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--forward-rule-id'], dict(help="""(string) 转发规则 Id """, dest='forwardRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除非网站规则, 批量操作时, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败 ''',
        description='''
            删除非网站规则, 批量操作时, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败。

            示例: jdc ipanti delete-forward-rule  --instance-id xxx --forward-rule-id xxx
        ''',
    )
    def delete_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DeleteForwardRuleRequest import DeleteForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--forward-rule-id'], dict(help="""(string) 转发规则 Id """, dest='forwardRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 非网站类规则切换成防御状态。支持批量操作, 批量操作时 forwardRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败 ''',
        description='''
            非网站类规则切换成防御状态。支持批量操作, 批量操作时 forwardRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败。

            示例: jdc ipanti switch-forward-rule-protect  --instance-id xxx --forward-rule-id xxx
        ''',
    )
    def switch_forward_rule_protect(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.SwitchForwardRuleProtectRequest import SwitchForwardRuleProtectRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = SwitchForwardRuleProtectRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--forward-rule-id'], dict(help="""(string) 转发规则 Id """, dest='forwardRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 非网站类规则切换成回源状态。支持批量操作, 批量操作时 forwardRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败 ''',
        description='''
            非网站类规则切换成回源状态。支持批量操作, 批量操作时 forwardRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败。

            示例: jdc ipanti switch-forward-rule-origin  --instance-id xxx --forward-rule-id xxx
        ''',
    )
    def switch_forward_rule_origin(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.SwitchForwardRuleOriginRequest import SwitchForwardRuleOriginRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = SwitchForwardRuleOriginRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--forward-rule-id'], dict(help="""(string) 转发规则 Id """, dest='forwardRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询非网站类转发规则的防护规则 ''',
        description='''
            查询非网站类转发规则的防护规则。

            示例: jdc ipanti describe-protection-rule-of-forward-rule  --instance-id xxx --forward-rule-id xxx
        ''',
    )
    def describe_protection_rule_of_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeProtectionRuleOfForwardRuleRequest import DescribeProtectionRuleOfForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeProtectionRuleOfForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--forward-rule-id'], dict(help="""(string) 转发规则 Id """, dest='forwardRuleId',  required=True)),
            (['--forward-protection-rule-spec'], dict(help="""(forwardProtectionRuleSpec) 修改非网站类转发规则的防护规则请求参数 """, dest='forwardProtectionRuleSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改非网站类转发规则的防护规则 ''',
        description='''
            修改非网站类转发规则的防护规则。

            示例: jdc ipanti modify-protection-rule-of-forward-rule  --instance-id xxx --forward-rule-id xxx --forward-protection-rule-spec '{"":""}'
        ''',
    )
    def modify_protection_rule_of_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyProtectionRuleOfForwardRuleRequest import ModifyProtectionRuleOfForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyProtectionRuleOfForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询非网站类转发规则的防护规则 Geo 拦截可设置区域编码 ''',
        description='''
            查询非网站类转发规则的防护规则 Geo 拦截可设置区域编码。

            示例: jdc ipanti describe-geo-areas 
        ''',
    )
    def describe_geo_areas(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeGeoAreasRequest import DescribeGeoAreasRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeGeoAreasRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--forward-rule-id'], dict(help="""(string) 转发规则 Id """, dest='forwardRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询转发规则的黑名单规则 ''',
        description='''
            查询转发规则的黑名单规则。

            示例: jdc ipanti describe-black-list-rule-of-forward-rule  --instance-id xxx --forward-rule-id xxx
        ''',
    )
    def describe_black_list_rule_of_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeBlackListRuleOfForwardRuleRequest import DescribeBlackListRuleOfForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeBlackListRuleOfForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--forward-rule-id'], dict(help="""(string) 转发规则 Id """, dest='forwardRuleId',  required=True)),
            (['--modify-spec'], dict(help="""(modifyBlackListRuleOfForwardRuleSpec) 修改转发规则的黑名单规则请求参数 """, dest='modifySpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改转发规则的黑名单规则 ''',
        description='''
            修改转发规则的黑名单规则。

            示例: jdc ipanti modify-black-list-rule-of-forward-rule  --instance-id xxx --forward-rule-id xxx --modify-spec '{"":""}'
        ''',
    )
    def modify_black_list_rule_of_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyBlackListRuleOfForwardRuleRequest import ModifyBlackListRuleOfForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyBlackListRuleOfForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--forward-rule-id'], dict(help="""(string) 转发规则 Id """, dest='forwardRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 开启转发规则的黑名单规则 ''',
        description='''
            开启转发规则的黑名单规则。

            示例: jdc ipanti enable-black-list-rule-of-forward-rule  --instance-id xxx --forward-rule-id xxx
        ''',
    )
    def enable_black_list_rule_of_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableBlackListRuleOfForwardRuleRequest import EnableBlackListRuleOfForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableBlackListRuleOfForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--forward-rule-id'], dict(help="""(string) 转发规则 Id """, dest='forwardRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 关闭转发规则的黑名单规则 ''',
        description='''
            关闭转发规则的黑名单规则。

            示例: jdc ipanti disable-black-list-rule-of-forward-rule  --instance-id xxx --forward-rule-id xxx
        ''',
    )
    def disable_black_list_rule_of_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableBlackListRuleOfForwardRuleRequest import DisableBlackListRuleOfForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableBlackListRuleOfForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--forward-rule-id'], dict(help="""(string) 转发规则 Id """, dest='forwardRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询转发规则的白名单规则 ''',
        description='''
            查询转发规则的白名单规则。

            示例: jdc ipanti describe-white-list-rule-of-forward-rule  --instance-id xxx --forward-rule-id xxx
        ''',
    )
    def describe_white_list_rule_of_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeWhiteListRuleOfForwardRuleRequest import DescribeWhiteListRuleOfForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeWhiteListRuleOfForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--forward-rule-id'], dict(help="""(string) 转发规则 Id """, dest='forwardRuleId',  required=True)),
            (['--modify-spec'], dict(help="""(modifyWhiteListRuleOfForwardRuleSpec) 修改转发规则的黑名单规则请求参数 """, dest='modifySpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改转发规则的白名单规则 ''',
        description='''
            修改转发规则的白名单规则。

            示例: jdc ipanti modify-white-list-rule-of-forward-rule  --instance-id xxx --forward-rule-id xxx --modify-spec '{"":""}'
        ''',
    )
    def modify_white_list_rule_of_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyWhiteListRuleOfForwardRuleRequest import ModifyWhiteListRuleOfForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyWhiteListRuleOfForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--forward-rule-id'], dict(help="""(string) 转发规则 Id """, dest='forwardRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 开启转发规则的白名单规则 ''',
        description='''
            开启转发规则的白名单规则。

            示例: jdc ipanti enable-white-list-rule-of-forward-rule  --instance-id xxx --forward-rule-id xxx
        ''',
    )
    def enable_white_list_rule_of_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableWhiteListRuleOfForwardRuleRequest import EnableWhiteListRuleOfForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableWhiteListRuleOfForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--forward-rule-id'], dict(help="""(string) 转发规则 Id """, dest='forwardRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 关闭转发规则的白名单规则 ''',
        description='''
            关闭转发规则的白名单规则。

            示例: jdc ipanti disable-white-list-rule-of-forward-rule  --instance-id xxx --forward-rule-id xxx
        ''',
    )
    def disable_white_list_rule_of_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableWhiteListRuleOfForwardRuleRequest import DisableWhiteListRuleOfForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableWhiteListRuleOfForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能查询最近 90 天以内的数据, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=False)),
            (['--instance-id'], dict(help="""(array: string) 高防实例 Id 列表 """, dest='instanceId',  required=False)),
            (['--service-ip'], dict(help="""(array: string) 高防IP列表. <br>- 使用 <a href='http://docs.jdcloud.com/anti-ddos-pro/api/describeServiceIpList'>describeServiceIpList</a> 接口查询实例的高防 IP """, dest='serviceIp',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' DDos 防护流量报表; 参数 serviceIp 优先级大于 instanceId.; - 指定 serviceIp 参数时, 忽略 instanceId 参数, 查询 ip 相关报表; - 未指定 serviceIp 时, 查询 instanceId 指定实例相关报表; - serviceIp 和 instanceId 均未指定时, 查询用户所有实例报表;  ''',
        description='''
            DDos 防护流量报表; 参数 serviceIp 优先级大于 instanceId.; - 指定 serviceIp 参数时, 忽略 instanceId 参数, 查询 ip 相关报表; - 未指定 serviceIp 时, 查询 instanceId 指定实例相关报表; - serviceIp 和 instanceId 均未指定时, 查询用户所有实例报表; 。

            示例: jdc ipanti describe-ddo-sgraph  --start-time xxx
        ''',
    )
    def describe_ddo_sgraph(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeDDoSGraphRequest import DescribeDDoSGraphRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeDDoSGraphRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能查询最近 90 天以内的数据, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=False)),
            (['--instance-id'], dict(help="""(array: string) 高防实例 Id 列表 """, dest='instanceId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 转发流量报表 ''',
        description='''
            转发流量报表。

            示例: jdc ipanti describe-fwd-graph  --start-time xxx
        ''',
    )
    def describe_fwd_graph(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeFwdGraphRequest import DescribeFwdGraphRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeFwdGraphRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能查询最近 90 天以内的数据, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=False)),
            (['--instance-id'], dict(help="""(array: string) 高防实例 Id 列表 """, dest='instanceId',  required=False)),
            (['--service-ip'], dict(help="""(array: string) 高防IP列表. <br>- 使用 <a href='http://docs.jdcloud.com/anti-ddos-pro/api/describeServiceIpList'>describeServiceIpList</a> 接口查询实例的高防 IP """, dest='serviceIp',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 业务流量报表        ; 参数 serviceIp 优先级大于 instanceId.; - 指定 serviceIp 参数时, 忽略 instanceId 参数, 查询 ip 相关报表; - 未指定 serviceIp 时, 查询 instanceId 指定实例相关报表; - serviceIp 和 instanceId 均未指定时, 查询用户所有实例报表;  ''',
        description='''
            业务流量报表        ; 参数 serviceIp 优先级大于 instanceId.; - 指定 serviceIp 参数时, 忽略 instanceId 参数, 查询 ip 相关报表; - 未指定 serviceIp 时, 查询 instanceId 指定实例相关报表; - serviceIp 和 instanceId 均未指定时, 查询用户所有实例报表; 。

            示例: jdc ipanti describe-business-graph  --start-time xxx
        ''',
    )
    def describe_business_graph(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeBusinessGraphRequest import DescribeBusinessGraphRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeBusinessGraphRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能查询最近 90 天以内的数据, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=False)),
            (['--instance-id'], dict(help="""(array: string) 高防实例 Id 列表 """, dest='instanceId',  required=False)),
            (['--sub-domain'], dict(help="""(array: string) 规则域名列表 """, dest='subDomain',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' CC 防护流量报表 ''',
        description='''
            CC 防护流量报表。

            示例: jdc ipanti describe-ccgraph  --start-time xxx
        ''',
    )
    def describe_ccgraph(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeCCGraphRequest import DescribeCCGraphRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeCCGraphRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能查询最近 7 天以内的数据, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=False)),
            (['--instance-id'], dict(help="""(array: string) 高防实例 Id 列表 """, dest='instanceId',  required=False)),
            (['--sub-domain'], dict(help="""(array: string) 规则域名列表 """, dest='subDomain',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 高防返回客户端状态码报表 ''',
        description='''
            高防返回客户端状态码报表。

            示例: jdc ipanti describe-status-graph  --start-time xxx
        ''',
    )
    def describe_status_graph(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeStatusGraphRequest import DescribeStatusGraphRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeStatusGraphRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能查询最近 90 天以内的数据, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=False)),
            (['--instance-id'], dict(help="""(array: string) 高防实例 Id 列表 """, dest='instanceId',  required=False)),
            (['--service-ip'], dict(help="""(array: string) 高防IP列表. <br>- 使用 <a href='http://docs.jdcloud.com/anti-ddos-pro/api/describeServiceIpList'>describeServiceIpList</a> 接口查询实例的高防 IP """, dest='serviceIp',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 新建与并发连接数统计报表        ; 参数 serviceIp 优先级大于 instanceId.; - 指定 serviceIp 参数时, 忽略 instanceId 参数, 查询 ip 相关报表; - 未指定 serviceIp 时, 查询 instanceId 指定实例相关报表; - serviceIp 和 instanceId 均未指定时, 查询用户所有实例报表;  ''',
        description='''
            新建与并发连接数统计报表        ; 参数 serviceIp 优先级大于 instanceId.; - 指定 serviceIp 参数时, 忽略 instanceId 参数, 查询 ip 相关报表; - 未指定 serviceIp 时, 查询 instanceId 指定实例相关报表; - serviceIp 和 instanceId 均未指定时, 查询用户所有实例报表; 。

            示例: jdc ipanti describe-conn-stat-graph  --start-time xxx
        ''',
    )
    def describe_conn_stat_graph(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeConnStatGraphRequest import DescribeConnStatGraphRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeConnStatGraphRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码, 默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为10, 取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能查询最近 90 天以内的数据, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=False)),
            (['--instance-id'], dict(help="""(array: string) 高防实例 ID """, dest='instanceId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询 DDoS 攻击日志, 仅能查询非BGP实例的攻击记录, 同时查询BGP和非BGP实例请使用 <a href='http://docs.jdcloud.com/anti-ddos-pro/api/describeDDoSIpAttackLogs'>describeDDoSIpAttackLogs</a> ''',
        description='''
            查询 DDoS 攻击日志, 仅能查询非BGP实例的攻击记录, 同时查询BGP和非BGP实例请使用 <a href='http://docs.jdcloud.com/anti-ddos-pro/api/describeDDoSIpAttackLogs'>describeDDoSIpAttackLogs</a>。

            示例: jdc ipanti describe-ddo-sattack-logs  --start-time xxx
        ''',
    )
    def describe_ddo_sattack_logs(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeDDoSAttackLogsRequest import DescribeDDoSAttackLogsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeDDoSAttackLogsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码, 默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为10, 取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能查询最近 90 天以内的数据, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=False)),
            (['--instance-id'], dict(help="""(array: string) 高防实例 ID """, dest='instanceId',  required=False)),
            (['--service-ip'], dict(help="""(array: string) 高防IP列表. <br>- 使用 <a href='http://docs.jdcloud.com/anti-ddos-pro/api/describeServiceIpList'>describeServiceIpList</a> 接口查询实例的高防 IP """, dest='serviceIp',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询高防IP的 DDoS 攻击日志, 仅BGP实例返回的是IP级别的攻击记录, 非BGP实例返回的仍是实例级别的攻击记录(serviceIp 字段为空); 参数 serviceIp 优先级大于 instanceId.; - 指定 serviceIp 参数时, 忽略 instanceId 参数, 查询 ip 相关攻击记录.; - 未指定 serviceIp 时, 查询 instanceId 指定实例相关攻击记录.; - serviceIp 和 instanceId 均未指定时, 查询用户所有攻击记录;  ''',
        description='''
            查询高防IP的 DDoS 攻击日志, 仅BGP实例返回的是IP级别的攻击记录, 非BGP实例返回的仍是实例级别的攻击记录(serviceIp 字段为空); 参数 serviceIp 优先级大于 instanceId.; - 指定 serviceIp 参数时, 忽略 instanceId 参数, 查询 ip 相关攻击记录.; - 未指定 serviceIp 时, 查询 instanceId 指定实例相关攻击记录.; - serviceIp 和 instanceId 均未指定时, 查询用户所有攻击记录; 。

            示例: jdc ipanti describe-ddo-sip-attack-logs  --start-time xxx
        ''',
    )
    def describe_ddo_sip_attack_logs(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeDDoSIpAttackLogsRequest import DescribeDDoSIpAttackLogsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeDDoSIpAttackLogsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码, 默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为10, 取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能查询最近 90 天以内的数据, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=False)),
            (['--instance-id'], dict(help="""(array: string) 高防实例 ID """, dest='instanceId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询 CC 攻击日志 ''',
        description='''
            查询 CC 攻击日志。

            示例: jdc ipanti describe-ccattack-logs  --start-time xxx
        ''',
    )
    def describe_ccattack_logs(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeCCAttackLogsRequest import DescribeCCAttackLogsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeCCAttackLogsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码, 默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为10, 取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能查询最近 90 天以内的数据, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ, attackId 为空时必传 """, dest='startTime',  required=False)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 ID """, dest='instanceId',  required=False)),
            (['--sub-domain'], dict(help="""(array: string) 查询的子域名, 只有选中某一个实例后才能多选子域名 """, dest='subDomain',  required=False)),
            (['--attack-id'], dict(help="""(string) CC 攻击记录 Id, 不为空时忽略 startTime, endTime """, dest='attackId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询 CC 攻击日志详情.; - 参数 attackId 优先级高于 instanceId, attackId 不为空时, 忽略 instanceId;  ''',
        description='''
            查询 CC 攻击日志详情.; - 参数 attackId 优先级高于 instanceId, attackId 不为空时, 忽略 instanceId; 。

            示例: jdc ipanti describe-ccattack-log-details 
        ''',
    )
    def describe_ccattack_log_details(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeCCAttackLogDetailsRequest import DescribeCCAttackLogDetailsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeCCAttackLogDetailsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能查询最近 90 天以内的数据, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=False)),
            (['--instance-id'], dict(help="""(array: string) 高防实例 ID """, dest='instanceId',  required=False)),
            (['--service-ip'], dict(help="""(array: string) 高防IP列表. <br>- 使用 <a href='http://docs.jdcloud.com/anti-ddos-pro/api/describeServiceIpList'>describeServiceIpList</a> 接口查询实例的高防 IP """, dest='serviceIp',  required=False)),
            (['--type'], dict(help="""(int) 攻击类型, 0 为 DDoS, 1 为 CC """, dest='type', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询攻击次数及流量峰值; 参数 serviceIp 优先级大于 instanceId.; - 指定 serviceIp 参数时, 忽略 instanceId 参数, 统计 ip 相关攻击; - 未指定 serviceIp 时, 统计 instanceId 指定实例相关攻击; - serviceIp 和 instanceId 均未指定时, 统计用户所有攻击记录; CC攻击为实例级别, 查询类型 type 为 cc 时, 参数 serviceIp 无效;  ''',
        description='''
            查询攻击次数及流量峰值; 参数 serviceIp 优先级大于 instanceId.; - 指定 serviceIp 参数时, 忽略 instanceId 参数, 统计 ip 相关攻击; - 未指定 serviceIp 时, 统计 instanceId 指定实例相关攻击; - serviceIp 和 instanceId 均未指定时, 统计用户所有攻击记录; CC攻击为实例级别, 查询类型 type 为 cc 时, 参数 serviceIp 无效; 。

            示例: jdc ipanti describe-attack-statistics  --start-time xxx --type 5
        ''',
    )
    def describe_attack_statistics(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeAttackStatisticsRequest import DescribeAttackStatisticsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeAttackStatisticsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能查询最近 90 天以内的数据, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=False)),
            (['--instance-id'], dict(help="""(array: string) 高防实例 ID """, dest='instanceId',  required=False)),
            (['--service-ip'], dict(help="""(array: string) 高防IP列表. <br>- 使用 <a href='http://docs.jdcloud.com/anti-ddos-pro/api/describeServiceIpList'>describeServiceIpList</a> 接口查询实例的高防 IP """, dest='serviceIp',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询各类型攻击次数; 参数 serviceIp 优先级大于 instanceId.; - 指定 serviceIp 参数时, 忽略 instanceId 参数, 统计 ip 相关攻击; - 未指定 serviceIp 时, 统计 instanceId 指定实例相关攻击; - serviceIp 和 instanceId 均未指定时, 统计用户所有攻击记录;  ''',
        description='''
            查询各类型攻击次数; 参数 serviceIp 优先级大于 instanceId.; - 指定 serviceIp 参数时, 忽略 instanceId 参数, 统计 ip 相关攻击; - 未指定 serviceIp 时, 统计 instanceId 指定实例相关攻击; - serviceIp 和 instanceId 均未指定时, 统计用户所有攻击记录; 。

            示例: jdc ipanti describe-attack-type-count  --start-time xxx
        ''',
    )
    def describe_attack_type_count(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeAttackTypeCountRequest import DescribeAttackTypeCountRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeAttackTypeCountRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--page-number'], dict(help="""(int) 页码, 默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为10, 取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--name'], dict(help="""(string) 实例名称, 可模糊匹配 """, dest='name',  required=False)),
            (['--inner-ip'], dict(help="""(string) 云内IP, 可模糊匹配 """, dest='innerIp',  required=False)),
            (['--service-ip'], dict(help="""(string) 高防IP, 可模糊匹配 """, dest='serviceIp',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询某个实例下的防护调度规则 ''',
        description='''
            查询某个实例下的防护调度规则。

            示例: jdc ipanti describe-dispatch-rules  --instance-id xxx
        ''',
    )
    def describe_dispatch_rules(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeDispatchRulesRequest import DescribeDispatchRulesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeDispatchRulesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--create-dispatch-rule-spec'], dict(help="""(createDispatchRuleSpec) 添加防护调度规则请求参数 """, dest='createDispatchRuleSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 添加防护调度规则 ''',
        description='''
            添加防护调度规则。

            示例: jdc ipanti create-dispatch-rule  --instance-id xxx --create-dispatch-rule-spec '{"":""}'
        ''',
    )
    def create_dispatch_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CreateDispatchRuleRequest import CreateDispatchRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateDispatchRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--dispatch-rule-spec-list'], dict(help="""(array: createDispatchRuleSpec) 批量添加防护调度规则请求参数 """, dest='dispatchRuleSpecList',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 批量添加防护调度规则 ''',
        description='''
            批量添加防护调度规则。

            示例: jdc ipanti create-dispatch-rules  --instance-id xxx --dispatch-rule-spec-list ['{"":""}']
        ''',
    )
    def create_dispatch_rules(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CreateDispatchRulesRequest import CreateDispatchRulesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateDispatchRulesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--dispatch-rule-id'], dict(help="""(string) 防护调度规则 Id """, dest='dispatchRuleId',  required=True)),
            (['--modify-dispatch-rule-spec'], dict(help="""(modifyDispatchRuleSpec) 更新防护调度规则请求参数 """, dest='modifyDispatchRuleSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 更新防护调度规则 ''',
        description='''
            更新防护调度规则。

            示例: jdc ipanti modify-dispatch-rule  --instance-id xxx --dispatch-rule-id xxx --modify-dispatch-rule-spec '{"":""}'
        ''',
    )
    def modify_dispatch_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyDispatchRuleRequest import ModifyDispatchRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyDispatchRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--dispatch-rule-id'], dict(help="""(string) 防护调度规则 Id """, dest='dispatchRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除防护调度规则 ''',
        description='''
            删除防护调度规则。

            示例: jdc ipanti delete-dispatch-rule  --instance-id xxx --dispatch-rule-id xxx
        ''',
    )
    def delete_dispatch_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DeleteDispatchRuleRequest import DeleteDispatchRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteDispatchRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--dispatch-rule-id'], dict(help="""(string) 防护调度规则 Id """, dest='dispatchRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 防护调度规则切换成防御状态 ''',
        description='''
            防护调度规则切换成防御状态。

            示例: jdc ipanti switch-dispatch-rule-protect  --instance-id xxx --dispatch-rule-id xxx
        ''',
    )
    def switch_dispatch_rule_protect(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.SwitchDispatchRuleProtectRequest import SwitchDispatchRuleProtectRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = SwitchDispatchRuleProtectRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--dispatch-rule-id'], dict(help="""(string) 防护调度规则 Id """, dest='dispatchRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 防护调度规则切换成回源状态 ''',
        description='''
            防护调度规则切换成回源状态。

            示例: jdc ipanti switch-dispatch-rule-origin  --instance-id xxx --dispatch-rule-id xxx
        ''',
    )
    def switch_dispatch_rule_origin(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.SwitchDispatchRuleOriginRequest import SwitchDispatchRuleOriginRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = SwitchDispatchRuleOriginRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 实例 ID """, dest='instanceId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询实例全局访问控制配置，包括全局的IP黑白名单和geo拦截配置 ''',
        description='''
            查询实例全局访问控制配置，包括全局的IP黑白名单和geo拦截配置。

            示例: jdc ipanti describe-instance-acl  --instance-id xxx
        ''',
    )
    def describe_instance_acl(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeInstanceAclRequest import DescribeInstanceAclRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeInstanceAclRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 实例 ID """, dest='instanceId',  required=True)),
            (['--instance-acl-spec'], dict(help="""(instanceAclSpec) 修改实例全局访问控制配置参数 """, dest='instanceAclSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改实例全局访问控制配置，包括全局的IP黑白名单和geo拦截配置 ''',
        description='''
            修改实例全局访问控制配置，包括全局的IP黑白名单和geo拦截配置。

            示例: jdc ipanti modify-instance-acl  --instance-id xxx --instance-acl-spec '{"":""}'
        ''',
    )
    def modify_instance_acl(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyInstanceAclRequest import ModifyInstanceAclRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyInstanceAclRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 实例 ID """, dest='instanceId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 实例全局访问控制配置可以恢复到上一次下发成功的配置时，调用此接口回滚到上一次下发成功的配置 ''',
        description='''
            实例全局访问控制配置可以恢复到上一次下发成功的配置时，调用此接口回滚到上一次下发成功的配置。

            示例: jdc ipanti recover-instance-acl  --instance-id xxx
        ''',
    )
    def recover_instance_acl(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.RecoverInstanceAclRequest import RecoverInstanceAclRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = RecoverInstanceAclRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 实例 ID """, dest='instanceId',  required=True)),
            (['--status'], dict(help="""(string) 自定义页面状态, 可取值approving: 审批中, refused: 审批不通过, approved: 审批通过, 为空时查询全部 """, dest='status',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询自定义页面列表 ''',
        description='''
            查询自定义页面列表。

            示例: jdc ipanti describe-custom-pages  --instance-id xxx
        ''',
    )
    def describe_custom_pages(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeCustomPagesRequest import DescribeCustomPagesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeCustomPagesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 实例 ID """, dest='instanceId',  required=True)),
            (['--custom-page-spec'], dict(help="""(customPageSpec) 添加自定义页面请求参数 """, dest='customPageSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 添加自定义页面 ''',
        description='''
            添加自定义页面。

            示例: jdc ipanti create-custom-page  --instance-id xxx --custom-page-spec '{"":""}'
        ''',
    )
    def create_custom_page(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CreateCustomPageRequest import CreateCustomPageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateCustomPageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 实例 ID """, dest='instanceId',  required=True)),
            (['--page-id'], dict(help="""(string) 自定义页面Id """, dest='pageId',  required=True)),
            (['--custom-page-spec'], dict(help="""(customPageSpec) 修改自定义页面请求参数 """, dest='customPageSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改自定义页面 ''',
        description='''
            修改自定义页面。

            示例: jdc ipanti modify-custom-page  --instance-id xxx --page-id xxx --custom-page-spec '{"":""}'
        ''',
    )
    def modify_custom_page(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyCustomPageRequest import ModifyCustomPageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyCustomPageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 实例 ID """, dest='instanceId',  required=True)),
            (['--page-id'], dict(help="""(string) 自定义页面Id """, dest='pageId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除自定义页面, 使用中的不允许删除 ''',
        description='''
            删除自定义页面, 使用中的不允许删除。

            示例: jdc ipanti delete-custom-page  --instance-id xxx --page-id xxx
        ''',
    )
    def delete_custom_page(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DeleteCustomPageRequest import DeleteCustomPageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteCustomPageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 实例 ID """, dest='instanceId',  required=True)),
            (['--page-id'], dict(help="""(string) 自定义页面Id """, dest='pageId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改实例错误状态码返回页面为自定义页面 ''',
        description='''
            修改实例错误状态码返回页面为自定义页面。

            示例: jdc ipanti modify-instance-custom-page  --instance-id xxx --page-id xxx
        ''',
    )
    def modify_instance_custom_page(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyInstanceCustomPageRequest import ModifyInstanceCustomPageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyInstanceCustomPageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 实例 ID """, dest='instanceId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改实例页面错误状态码返回页面为为默认页面 ''',
        description='''
            修改实例页面错误状态码返回页面为为默认页面。

            示例: jdc ipanti modify-instance-custom-page-default  --instance-id xxx
        ''',
    )
    def modify_instance_custom_page_default(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyInstanceCustomPageDefaultRequest import ModifyInstanceCustomPageDefaultRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyInstanceCustomPageDefaultRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 实例 ID """, dest='instanceId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 开启实例错误状态码返回页面, 错误状态码返回默认页面或自定义页面 ''',
        description='''
            开启实例错误状态码返回页面, 错误状态码返回默认页面或自定义页面。

            示例: jdc ipanti enable-instance-custom-page  --instance-id xxx
        ''',
    )
    def enable_instance_custom_page(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableInstanceCustomPageRequest import EnableInstanceCustomPageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableInstanceCustomPageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 实例 ID """, dest='instanceId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 关闭实例错误状态码返回页面, 透传错误状态码 ''',
        description='''
            关闭实例错误状态码返回页面, 透传错误状态码。

            示例: jdc ipanti disable-instance-custom-page  --instance-id xxx
        ''',
    )
    def disable_instance_custom_page(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableInstanceCustomPageRequest import DisableInstanceCustomPageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableInstanceCustomPageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码, 默认为 1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为 10, 取值范围[10, 100], 0 表示全量 """, dest='pageSize', type=int, required=False)),
            (['--name'], dict(help="""(string) 实例名称, 可模糊匹配 """, dest='name',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询实例列表 ''',
        description='''
            查询实例列表。

            示例: jdc ipanti describe-instances 
        ''',
    )
    def describe_instances(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeInstancesRequest import DescribeInstancesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeInstancesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--create-instance-spec'], dict(help="""(createInstanceSpec) 新购或升级实例请求参数 """, dest='createInstanceSpec',  required=True)),
            (['--auto-renewal-spec'], dict(help="""(autoRenewalSpec) 自动续费配置, 默认不开通, 仅新购实例时可设置 """, dest='autoRenewalSpec',  required=False)),
            (['--auto-pay'], dict(help="""(bool) 自动支付标识 """, dest='autoPay', type=bool, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 新购或升级高防实例 ''',
        description='''
            新购或升级高防实例。

            示例: jdc ipanti create-instance  --create-instance-spec '{"":""}'
        ''',
    )
    def create_instance(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CreateInstanceRequest import CreateInstanceRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateInstanceRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 实例 ID """, dest='instanceId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询实例 ''',
        description='''
            查询实例。

            示例: jdc ipanti describe-instance  --instance-id xxx
        ''',
    )
    def describe_instance(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeInstanceRequest import DescribeInstanceRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeInstanceRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 实例 ID """, dest='instanceId',  required=True)),
            (['--rename-instance-spec'], dict(help="""(renameInstanceSpec) 修改实例名称请求参数 """, dest='renameInstanceSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改实例名称 ''',
        description='''
            修改实例名称。

            示例: jdc ipanti modify-instance-name  --instance-id xxx --rename-instance-spec '{"":""}'
        ''',
    )
    def modify_instance_name(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyInstanceNameRequest import ModifyInstanceNameRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyInstanceNameRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 实例 ID """, dest='instanceId',  required=True)),
            (['--modify-instance-epbspec'], dict(help="""(modifyInstanceEPBSpec) 修改实例名称请求参数 """, dest='modifyInstanceEPBSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 更新实例弹性防护带宽 ''',
        description='''
            更新实例弹性防护带宽。

            示例: jdc ipanti modify-epb  --instance-id xxx --modify-instance-epbspec '{"":""}'
        ''',
    )
    def modify_epb(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyEPBRequest import ModifyEPBRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyEPBRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 实例 ID """, dest='instanceId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询告警配置 ''',
        description='''
            查询告警配置。

            示例: jdc ipanti describe-alarm-config  --instance-id xxx
        ''',
    )
    def describe_alarm_config(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeAlarmConfigRequest import DescribeAlarmConfigRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeAlarmConfigRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 实例 ID """, dest='instanceId',  required=True)),
            (['--alarm-config-spec'], dict(help="""(alarmConfigSpec) 更新告警配置请求参数 """, dest='alarmConfigSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 更新告警配置 ''',
        description='''
            更新告警配置。

            示例: jdc ipanti modify-alarm-config  --instance-id xxx --alarm-config-spec '{"":""}'
        ''',
    )
    def modify_alarm_config(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyAlarmConfigRequest import ModifyAlarmConfigRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyAlarmConfigRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 实例 ID """, dest='instanceId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询高防实例回源 IP 白名单列表 ''',
        description='''
            查询高防实例回源 IP 白名单列表。

            示例: jdc ipanti describe-origin-white-ip-list  --instance-id xxx
        ''',
    )
    def describe_origin_white_ip_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeOriginWhiteIpListRequest import DescribeOriginWhiteIpListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeOriginWhiteIpListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 实例 ID """, dest='instanceId',  required=True)),
            (['--page-number'], dict(help="""(int) 页码, 默认为 1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为 10, 取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询实例高防 IP 列表 ''',
        description='''
            查询实例高防 IP 列表。

            示例: jdc ipanti describe-service-ip-list  --instance-id xxx
        ''',
    )
    def describe_service_ip_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeServiceIpListRequest import DescribeServiceIpListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeServiceIpListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--resource-id'], dict(help="""(string) 高防实例计费资源ID """, dest='resourceId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据高防计费资源ID查询对应的实例Id, 调用 <a href='http://docs.jdcloud.com/anti-ddos-pro/api/createInstance'>createInstance</a> 接口成功后，跟据message字段返回的计费资源Id查询对应的高防实例ID, 需要高防实例实际创建成功以后才可查询得到 ''',
        description='''
            根据高防计费资源ID查询对应的实例Id, 调用 <a href='http://docs.jdcloud.com/anti-ddos-pro/api/createInstance'>createInstance</a> 接口成功后，跟据message字段返回的计费资源Id查询对应的高防实例ID, 需要高防实例实际创建成功以后才可查询得到。

            示例: jdc ipanti describe-instance-id-by-resource-id  --resource-id xxx
        ''',
    )
    def describe_instance_id_by_resource_id(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeInstanceIdByResourceIdRequest import DescribeInstanceIdByResourceIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeInstanceIdByResourceIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 高防实例 ID, 为空则查询所有实例名称 """, dest='id',  required=False)),
            (['--name'], dict(help="""(string) 实例名称, 可模糊匹配 """, dest='name',  required=False)),
            (['--page-number'], dict(help="""(int) 页码, 默认为 1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为 10, 取值范围 [10, 100] """, dest='pageSize', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询高防实例名称列表 ''',
        description='''
            查询高防实例名称列表。

            示例: jdc ipanti describe-name-list 
        ''',
    )
    def describe_name_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeNameListRequest import DescribeNameListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeNameListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询高防实例防护统计信息 ''',
        description='''
            查询高防实例防护统计信息。

            示例: jdc ipanti describe-protection-statistics 
        ''',
    )
    def describe_protection_statistics(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeProtectionStatisticsRequest import DescribeProtectionStatisticsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeProtectionStatisticsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询高防实例防护概要 ''',
        description='''
            查询高防实例防护概要。

            示例: jdc ipanti describe-protection-outline 
        ''',
    )
    def describe_protection_outline(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeProtectionOutlineRequest import DescribeProtectionOutlineRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeProtectionOutlineRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--name'], dict(help="""(string) 待检测实例名称 """, dest='name',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 检测实例名称是否合法 ''',
        description='''
            检测实例名称是否合法。

            示例: jdc ipanti check-name  --name xxx
        ''',
    )
    def check_name(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CheckNameRequest import CheckNameRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CheckNameRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码, 默认为 1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为 10, 取值范围 [0, 100], 0 表示全量 """, dest='pageSize', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询用户可设置为网站类规则回源 IP 的京东云云内弹性公网 IP 资源 ''',
        description='''
            查询用户可设置为网站类规则回源 IP 的京东云云内弹性公网 IP 资源。

            示例: jdc ipanti describe-vpc-ip-list 
        ''',
    )
    def describe_vpc_ip_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeVpcIpListRequest import DescribeVpcIpListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeVpcIpListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码, 默认为 1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为 10, 取值范围 [0, 100], 0 表示全量 """, dest='pageSize', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询用户可设置为网站类规则回源 IP 的京东云云物理服务器公网 IP 资源 ''',
        description='''
            查询用户可设置为网站类规则回源 IP 的京东云云物理服务器公网 IP 资源。

            示例: jdc ipanti describe-cps-ip-list 
        ''',
    )
    def describe_cps_ip_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeCpsIpListRequest import DescribeCpsIpListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeCpsIpListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码, 默认为 1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为 10, 取值范围 [0, 100], 0 表示全量 """, dest='pageSize', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询用户可设置为网站类规则回源 IP 的京东云托管区公网 IP 资源 ''',
        description='''
            查询用户可设置为网站类规则回源 IP 的京东云托管区公网 IP 资源。

            示例: jdc ipanti describe-ccs-ip-list 
        ''',
    )
    def describe_ccs_ip_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeCcsIpListRequest import DescribeCcsIpListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeCcsIpListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--page-number'], dict(help="""(int) 页码, 默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为10, 取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询实例的 IP 黑白名单库列表 ''',
        description='''
            查询实例的 IP 黑白名单库列表。

            示例: jdc ipanti describe-ip-sets  --instance-id xxx
        ''',
    )
    def describe_ip_sets(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeIpSetsRequest import DescribeIpSetsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeIpSetsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--ip-set-spec'], dict(help="""(ipSetSpec) 添加实例的 IP 黑白名单请求参数 """, dest='ipSetSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 添加实例的 IP 黑白名单, 预定义的 IP 黑白名单绑定到转发规则的黑名单或白名单后生效 ''',
        description='''
            添加实例的 IP 黑白名单, 预定义的 IP 黑白名单绑定到转发规则的黑名单或白名单后生效。

            示例: jdc ipanti create-ip-set  --instance-id xxx --ip-set-spec '{"":""}'
        ''',
    )
    def create_ip_set(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CreateIpSetRequest import CreateIpSetRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateIpSetRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--ip-set-id'], dict(help="""(string) IP 黑白名单 Id """, dest='ipSetId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询实例的 IP 黑白名单 ''',
        description='''
            查询实例的 IP 黑白名单。

            示例: jdc ipanti describe-ip-set  --instance-id xxx --ip-set-id xxx
        ''',
    )
    def describe_ip_set(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeIpSetRequest import DescribeIpSetRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeIpSetRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--ip-set-id'], dict(help="""(string) IP 黑白名单 Id """, dest='ipSetId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除实例的 IP 黑白名单. 支持批量操作, 批量操作时 ipSetId 传多个, 以 ',' 分隔. IP 黑白名单规则被引用时不允许删除 ''',
        description='''
            删除实例的 IP 黑白名单. 支持批量操作, 批量操作时 ipSetId 传多个, 以 ',' 分隔. IP 黑白名单规则被引用时不允许删除。

            示例: jdc ipanti delete-ip-set  --instance-id xxx --ip-set-id xxx
        ''',
    )
    def delete_ip_set(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DeleteIpSetRequest import DeleteIpSetRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteIpSetRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询实例的 IP 黑白名单用量信息 ''',
        description='''
            查询实例的 IP 黑白名单用量信息。

            示例: jdc ipanti describe-ip-set-usage  --instance-id xxx
        ''',
    )
    def describe_ip_set_usage(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeIpSetUsageRequest import DescribeIpSetUsageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeIpSetUsageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--page-number'], dict(help="""(int) 页码, 默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为10, 取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--search-type'], dict(help="""(string) 查询类型名称, domain:源站域名, ip:源站 IP, rawDomain: 域名, serviceIp: 高防IP(仅支持BGP线路的实例) """, dest='searchType',  required=False)),
            (['--search-value'], dict(help="""(string) 查询类型值 """, dest='searchValue',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询某个实例下的网站类规则 ''',
        description='''
            查询某个实例下的网站类规则。

            示例: jdc ipanti describe-web-rules  --instance-id xxx
        ''',
    )
    def describe_web_rules(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeWebRulesRequest import DescribeWebRulesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeWebRulesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-spec'], dict(help="""(webRuleSpec) 添加网站类规则请求参数 """, dest='webRuleSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 添加网站类规则 ''',
        description='''
            添加网站类规则。

            示例: jdc ipanti create-web-rule  --instance-id xxx --web-rule-spec '{"":""}'
        ''',
    )
    def create_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CreateWebRuleRequest import CreateWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-spec-list'], dict(help="""(array: webRuleSpec) 批量添加网站类规则请求参数 """, dest='webRuleSpecList',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 批量添加网站类规则 ''',
        description='''
            批量添加网站类规则。

            示例: jdc ipanti create-web-rules  --instance-id xxx --web-rule-spec-list ['{"":""}']
        ''',
    )
    def create_web_rules(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CreateWebRulesRequest import CreateWebRulesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateWebRulesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询网站类规则 ''',
        description='''
            查询网站类规则。

            示例: jdc ipanti describe-web-rule  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def describe_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeWebRuleRequest import DescribeWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--web-rule-spec'], dict(help="""(webRuleSpec) 更新网站类规则请求参数 """, dest='webRuleSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改网站类规则 ''',
        description='''
            修改网站类规则。

            示例: jdc ipanti modify-web-rule  --instance-id xxx --web-rule-id xxx --web-rule-spec '{"":""}'
        ''',
    )
    def modify_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyWebRuleRequest import ModifyWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除网站规则。支持批量操作, 批量操作时 webRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败 ''',
        description='''
            删除网站规则。支持批量操作, 批量操作时 webRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败。

            示例: jdc ipanti delete-web-rule  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def delete_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DeleteWebRuleRequest import DeleteWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--cert-id'], dict(help="""(string) 证书 Id. 使用 <a href='https://docs.jdcloud.com/cn/ssl-certificate/api/describecerts'>describeCerts</a> 接口, 按照域名检索可绑定的证书, 域名不匹配将导致证书配置失败 """, dest='certId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 网站类规则绑定 SSL 证书 ''',
        description='''
            网站类规则绑定 SSL 证书。

            示例: jdc ipanti bind-cert  --instance-id xxx --web-rule-id xxx --cert-id xxx
        ''',
    )
    def bind_cert(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.BindCertRequest import BindCertRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = BindCertRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 网站类规则切换成防御状态。支持批量操作, 批量操作时 webRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败 ''',
        description='''
            网站类规则切换成防御状态。支持批量操作, 批量操作时 webRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败。

            示例: jdc ipanti switch-web-rule-protect  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def switch_web_rule_protect(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.SwitchWebRuleProtectRequest import SwitchWebRuleProtectRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = SwitchWebRuleProtectRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 网站类规则切换成回源状态。支持批量操作, 批量操作时 webRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败 ''',
        description='''
            网站类规则切换成回源状态。支持批量操作, 批量操作时 webRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败。

            示例: jdc ipanti switch-web-rule-origin  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def switch_web_rule_origin(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.SwitchWebRuleOriginRequest import SwitchWebRuleOriginRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = SwitchWebRuleOriginRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 网站类规则开启 CC 防护, 开启后网站类规则已配置的防护规则和 CC 防护配置生效, 若没有配置过 CC 防护, 默认的 CC 防护配置生效。支持批量操作, 批量操作时 webRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败 ''',
        description='''
            网站类规则开启 CC 防护, 开启后网站类规则已配置的防护规则和 CC 防护配置生效, 若没有配置过 CC 防护, 默认的 CC 防护配置生效。支持批量操作, 批量操作时 webRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败。

            示例: jdc ipanti enable-web-rule-cc  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def enable_web_rule_cc(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableWebRuleCCRequest import EnableWebRuleCCRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableWebRuleCCRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 关闭网站类规则 CC 防护, 网站类规则的 CC 防护规则和 CC 防护配置失效。支持批量操作, 批量操作时 webRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败 ''',
        description='''
            关闭网站类规则 CC 防护, 网站类规则的 CC 防护规则和 CC 防护配置失效。支持批量操作, 批量操作时 webRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败。

            示例: jdc ipanti disable-web-rule-cc  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def disable_web_rule_cc(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableWebRuleCCRequest import DisableWebRuleCCRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableWebRuleCCRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 开启网站类规则 CC 观察者模式, 观察模式下, CC 防护只告警不防御。支持批量操作, 批量操作时 webRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败 ''',
        description='''
            开启网站类规则 CC 观察者模式, 观察模式下, CC 防护只告警不防御。支持批量操作, 批量操作时 webRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败。

            示例: jdc ipanti enable-web-rule-ccobserver-mode  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def enable_web_rule_ccobserver_mode(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableWebRuleCCObserverModeRequest import EnableWebRuleCCObserverModeRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableWebRuleCCObserverModeRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 关闭网站类规则 CC 观察者模式, 观察模式下, CC 防护只告警不防御。支持批量操作, 批量操作时 webRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败 ''',
        description='''
            关闭网站类规则 CC 观察者模式, 观察模式下, CC 防护只告警不防御。支持批量操作, 批量操作时 webRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败。

            示例: jdc ipanti disable-web-rule-ccobserver-mode  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def disable_web_rule_ccobserver_mode(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableWebRuleCCObserverModeRequest import DisableWebRuleCCObserverModeRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableWebRuleCCObserverModeRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--page-number'], dict(help="""(int) 页码, 默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为10, 取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询网站类规则允许插入JS指纹的页面 ''',
        description='''
            查询网站类规则允许插入JS指纹的页面。

            示例: jdc ipanti describe-js-pages-of-web-rule  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def describe_js_pages_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeJsPagesOfWebRuleRequest import DescribeJsPagesOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeJsPagesOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--js-page-spec'], dict(help="""(jsPageSpec) 添加 JS 指纹页面请求参数 """, dest='jsPageSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 添加网站类规则允许插入JS指纹的页面 ''',
        description='''
            添加网站类规则允许插入JS指纹的页面。

            示例: jdc ipanti create-js-page-of-web-rule  --instance-id xxx --web-rule-id xxx --js-page-spec '{"":""}'
        ''',
    )
    def create_js_page_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CreateJsPageOfWebRuleRequest import CreateJsPageOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateJsPageOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--js-pages-spec'], dict(help="""(jsPagesSpec) 添加 JS 指纹页面请求参数 """, dest='jsPagesSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 批量添加网站类规则允许插入JS指纹的页面 ''',
        description='''
            批量添加网站类规则允许插入JS指纹的页面。

            示例: jdc ipanti create-js-pages-of-web-rule  --instance-id xxx --web-rule-id xxx --js-pages-spec '{"":""}'
        ''',
    )
    def create_js_pages_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CreateJsPagesOfWebRuleRequest import CreateJsPagesOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateJsPagesOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--js-page-id'], dict(help="""(string) 支持插入JS指纹的页面 Id """, dest='jsPageId',  required=True)),
            (['--js-page-spec'], dict(help="""(jsPageSpec) 修改网站类规则允许插入 JS 指纹的页面请求参数 """, dest='jsPageSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改网站类规则允许插入 JS 指纹的页面 ''',
        description='''
            修改网站类规则允许插入 JS 指纹的页面。

            示例: jdc ipanti modify-js-page-of-web-rule  --instance-id xxx --web-rule-id xxx --js-page-id xxx --js-page-spec '{"":""}'
        ''',
    )
    def modify_js_page_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyJsPageOfWebRuleRequest import ModifyJsPageOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyJsPageOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--js-page-id'], dict(help="""(string) 支持插入JS指纹的页面 Id """, dest='jsPageId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除网站类规则允许插入 JS 指纹的页面。支持批量操作, 批量操作时 jsPageId 传多个, 以 ',' 分隔 ''',
        description='''
            删除网站类规则允许插入 JS 指纹的页面。支持批量操作, 批量操作时 jsPageId 传多个, 以 ',' 分隔。

            示例: jdc ipanti delete-js-page-of-web-rule  --instance-id xxx --web-rule-id xxx --js-page-id xxx
        ''',
    )
    def delete_js_page_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DeleteJsPageOfWebRuleRequest import DeleteJsPageOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteJsPageOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 关闭网站类规则的JS指纹开关 ''',
        description='''
            关闭网站类规则的JS指纹开关。

            示例: jdc ipanti disable-web-rule-js-page  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def disable_web_rule_js_page(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableWebRuleJsPageRequest import DisableWebRuleJsPageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableWebRuleJsPageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 打开网站类规则的JS指纹开关 ''',
        description='''
            打开网站类规则的JS指纹开关。

            示例: jdc ipanti enable-web-rule-js-page  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def enable_web_rule_js_page(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableWebRuleJsPageRequest import EnableWebRuleJsPageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableWebRuleJsPageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 插入JS指纹到所有页面, 需要打开网站类规则的JS指纹开关 ''',
        description='''
            插入JS指纹到所有页面, 需要打开网站类规则的JS指纹开关。

            示例: jdc ipanti modify-web-rule-js-page-to-all  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def modify_web_rule_js_page_to_all(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyWebRuleJsPageToAllRequest import ModifyWebRuleJsPageToAllRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyWebRuleJsPageToAllRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 插入JS指纹到配置的自定义页面, 需要打开网站类规则的JS指纹开关 ''',
        description='''
            插入JS指纹到配置的自定义页面, 需要打开网站类规则的JS指纹开关。

            示例: jdc ipanti modify-web-rule-js-page-to-custom  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def modify_web_rule_js_page_to_custom(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyWebRuleJsPageToCustomRequest import ModifyWebRuleJsPageToCustomRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyWebRuleJsPageToCustomRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询网站类规则的 CC 防护规则列表 ''',
        description='''
            查询网站类规则的 CC 防护规则列表。

            示例: jdc ipanti describe-ccprotection-rules-of-web-rule  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def describe_ccprotection_rules_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeCCProtectionRulesOfWebRuleRequest import DescribeCCProtectionRulesOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeCCProtectionRulesOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--cc-protection-rule-spec'], dict(help="""(cCProtectionRuleSpec) 添加 CC 防护规则请求参数 """, dest='ccProtectionRuleSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 添加网站类规则的 CC 防护规则 ''',
        description='''
            添加网站类规则的 CC 防护规则。

            示例: jdc ipanti create-ccprotection-rule-of-web-rule  --instance-id xxx --web-rule-id xxx --cc-protection-rule-spec '{"":""}'
        ''',
    )
    def create_ccprotection_rule_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CreateCCProtectionRuleOfWebRuleRequest import CreateCCProtectionRuleOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateCCProtectionRuleOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--cc-protection-rule-id'], dict(help="""(string) 网站类规则的 CC 防护规则 Id """, dest='ccProtectionRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询网站类规则的 CC 防护规则 ''',
        description='''
            查询网站类规则的 CC 防护规则。

            示例: jdc ipanti describe-ccprotection-rule-of-web-rule  --instance-id xxx --web-rule-id xxx --cc-protection-rule-id xxx
        ''',
    )
    def describe_ccprotection_rule_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeCCProtectionRuleOfWebRuleRequest import DescribeCCProtectionRuleOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeCCProtectionRuleOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--cc-protection-rule-id'], dict(help="""(string) 网站类规则的 CC 防护规则 Id """, dest='ccProtectionRuleId',  required=True)),
            (['--cc-protection-rule-spec'], dict(help="""(cCProtectionRuleSpec) 修改 CC 防护规则请求参数 """, dest='ccProtectionRuleSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改网站类规则的 CC 防护规则 ''',
        description='''
            修改网站类规则的 CC 防护规则。

            示例: jdc ipanti modify-ccprotection-rule-of-web-rule  --instance-id xxx --web-rule-id xxx --cc-protection-rule-id xxx --cc-protection-rule-spec '{"":""}'
        ''',
    )
    def modify_ccprotection_rule_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyCCProtectionRuleOfWebRuleRequest import ModifyCCProtectionRuleOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyCCProtectionRuleOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--cc-protection-rule-id'], dict(help="""(string) 网站类规则的 CC 防护规则 Id """, dest='ccProtectionRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除网站规则的 CC 防护规则 ''',
        description='''
            删除网站规则的 CC 防护规则。

            示例: jdc ipanti delete-ccprotection-rule-of-web-rule  --instance-id xxx --web-rule-id xxx --cc-protection-rule-id xxx
        ''',
    )
    def delete_ccprotection_rule_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DeleteCCProtectionRuleOfWebRuleRequest import DeleteCCProtectionRuleOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteCCProtectionRuleOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--cc-protection-rule-id'], dict(help="""(string) 网站类规则的 CC 防护规则 Id """, dest='ccProtectionRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 开启网站类规则的 CC 防护规则 ''',
        description='''
            开启网站类规则的 CC 防护规则。

            示例: jdc ipanti enable-ccprotection-rule-of-web-rule  --instance-id xxx --web-rule-id xxx --cc-protection-rule-id xxx
        ''',
    )
    def enable_ccprotection_rule_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableCCProtectionRuleOfWebRuleRequest import EnableCCProtectionRuleOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableCCProtectionRuleOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--cc-protection-rule-id'], dict(help="""(string) 网站类规则的 CC 防护规则 Id """, dest='ccProtectionRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 关闭网站类规则的 CC 防护规则 ''',
        description='''
            关闭网站类规则的 CC 防护规则。

            示例: jdc ipanti disable-ccprotection-rule-of-web-rule  --instance-id xxx --web-rule-id xxx --cc-protection-rule-id xxx
        ''',
    )
    def disable_ccprotection_rule_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableCCProtectionRuleOfWebRuleRequest import DisableCCProtectionRuleOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableCCProtectionRuleOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 开启网站类规则的自定义 CC 防护规则总开关, 状态为开启的自定义 CC 防护规则生效 ''',
        description='''
            开启网站类规则的自定义 CC 防护规则总开关, 状态为开启的自定义 CC 防护规则生效。

            示例: jdc ipanti enable-web-rule-ccprotection-rule  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def enable_web_rule_ccprotection_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableWebRuleCCProtectionRuleRequest import EnableWebRuleCCProtectionRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableWebRuleCCProtectionRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 关闭网站类规则的自定义 CC 防护规则总开关, 所有自定义 CC 防护规则失效 ''',
        description='''
            关闭网站类规则的自定义 CC 防护规则总开关, 所有自定义 CC 防护规则失效。

            示例: jdc ipanti disable-web-rule-ccprotection-rule  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def disable_web_rule_ccprotection_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableWebRuleCCProtectionRuleRequest import DisableWebRuleCCProtectionRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableWebRuleCCProtectionRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询网站类规则的 CC 防护配置 ''',
        description='''
            查询网站类规则的 CC 防护配置。

            示例: jdc ipanti describe-ccprotection-config-of-web-rule  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def describe_ccprotection_config_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeCCProtectionConfigOfWebRuleRequest import DescribeCCProtectionConfigOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeCCProtectionConfigOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--cc-protection-config-spec'], dict(help="""(cCProtectionConfigSpec) 修改 CC 防护配置请求参数 """, dest='ccProtectionConfigSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改网站类规则的 CC 防护配置 ''',
        description='''
            修改网站类规则的 CC 防护配置。

            示例: jdc ipanti modify-ccprotection-config-of-web-rule  --instance-id xxx --web-rule-id xxx --cc-protection-config-spec '{"":""}'
        ''',
    )
    def modify_ccprotection_config_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyCCProtectionConfigOfWebRuleRequest import ModifyCCProtectionConfigOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyCCProtectionConfigOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询网站类规则的 CC 防护默认配置 ''',
        description='''
            查询网站类规则的 CC 防护默认配置。

            示例: jdc ipanti describe-ccprotection-default-config-of-web-rule  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def describe_ccprotection_default_config_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeCCProtectionDefaultConfigOfWebRuleRequest import DescribeCCProtectionDefaultConfigOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeCCProtectionDefaultConfigOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--cert-info-modify-spec'], dict(help="""(certInfoModifySpec) 编辑网站规则证书信息请求参数 """, dest='certInfoModifySpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 编辑网站规则证书信息 ''',
        description='''
            编辑网站规则证书信息。

            示例: jdc ipanti modify-cert-info  --instance-id xxx --web-rule-id xxx --cert-info-modify-spec '{"":""}'
        ''',
    )
    def modify_cert_info(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyCertInfoRequest import ModifyCertInfoRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyCertInfoRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询网站类防护规则的黑名单用量信息 ''',
        description='''
            查询网站类防护规则的黑名单用量信息。

            示例: jdc ipanti describe-web-rule-black-list-usage  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def describe_web_rule_black_list_usage(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeWebRuleBlackListUsageRequest import DescribeWebRuleBlackListUsageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeWebRuleBlackListUsageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--page-number'], dict(help="""(int) 页码, 默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为10, 取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询网站类规则的黑名单规则列表 ''',
        description='''
            查询网站类规则的黑名单规则列表。

            示例: jdc ipanti describe-black-list-rules-of-web-rule  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def describe_black_list_rules_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeBlackListRulesOfWebRuleRequest import DescribeBlackListRulesOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeBlackListRulesOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--web-black-list-rule-spec'], dict(help="""(webBlackListRuleSpec) 添加网站类规则的黑名单规则请求参数 """, dest='webBlackListRuleSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 添加网站类规则的黑名单规则 ''',
        description='''
            添加网站类规则的黑名单规则。

            示例: jdc ipanti create-black-list-rule-of-web-rule  --instance-id xxx --web-rule-id xxx --web-black-list-rule-spec '{"":""}'
        ''',
    )
    def create_black_list_rule_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CreateBlackListRuleOfWebRuleRequest import CreateBlackListRuleOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateBlackListRuleOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--web-black-list-rule-id'], dict(help="""(string) 网站类规则的黑名单规则 Id """, dest='webBlackListRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询网站类规则的黑名单规则 ''',
        description='''
            查询网站类规则的黑名单规则。

            示例: jdc ipanti describe-black-list-rule-of-web-rule  --instance-id xxx --web-rule-id xxx --web-black-list-rule-id xxx
        ''',
    )
    def describe_black_list_rule_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeBlackListRuleOfWebRuleRequest import DescribeBlackListRuleOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeBlackListRuleOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--web-black-list-rule-id'], dict(help="""(string) 网站类规则的黑名单规则 Id """, dest='webBlackListRuleId',  required=True)),
            (['--web-black-list-rule-spec'], dict(help="""(webBlackListRuleSpec) 修改网站类规则的黑名单规则请求参数 """, dest='webBlackListRuleSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改网站类规则的黑名单规则 ''',
        description='''
            修改网站类规则的黑名单规则。

            示例: jdc ipanti modify-black-list-rule-of-web-rule  --instance-id xxx --web-rule-id xxx --web-black-list-rule-id xxx --web-black-list-rule-spec '{"":""}'
        ''',
    )
    def modify_black_list_rule_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyBlackListRuleOfWebRuleRequest import ModifyBlackListRuleOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyBlackListRuleOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--web-black-list-rule-id'], dict(help="""(string) 网站类规则的黑名单规则 Id """, dest='webBlackListRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除网站类规则的黑名单规则, 批量操作时 webBlackListRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败 ''',
        description='''
            删除网站类规则的黑名单规则, 批量操作时 webBlackListRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败。

            示例: jdc ipanti delete-black-list-rule-of-web-rule  --instance-id xxx --web-rule-id xxx --web-black-list-rule-id xxx
        ''',
    )
    def delete_black_list_rule_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DeleteBlackListRuleOfWebRuleRequest import DeleteBlackListRuleOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteBlackListRuleOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 开启网站类规则的黑名单 ''',
        description='''
            开启网站类规则的黑名单。

            示例: jdc ipanti enable-web-rule-black-list  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def enable_web_rule_black_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableWebRuleBlackListRequest import EnableWebRuleBlackListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableWebRuleBlackListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--web-black-list-rule-id'], dict(help="""(string) 网站类规则的黑名单规则 Id """, dest='webBlackListRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 开启网站类规则的黑名单规则, 批量操作时 webBlackListRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败 ''',
        description='''
            开启网站类规则的黑名单规则, 批量操作时 webBlackListRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败。

            示例: jdc ipanti enable-black-list-rule-of-web-rule  --instance-id xxx --web-rule-id xxx --web-black-list-rule-id xxx
        ''',
    )
    def enable_black_list_rule_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableBlackListRuleOfWebRuleRequest import EnableBlackListRuleOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableBlackListRuleOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 关闭网站类规则的黑名单 ''',
        description='''
            关闭网站类规则的黑名单。

            示例: jdc ipanti disable-web-rule-black-list  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def disable_web_rule_black_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableWebRuleBlackListRequest import DisableWebRuleBlackListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableWebRuleBlackListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--web-black-list-rule-id'], dict(help="""(string) 网站类规则的黑名单规则 Id """, dest='webBlackListRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 关闭网站类规则的黑名单规则, 批量操作时 webBlackListRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败 ''',
        description='''
            关闭网站类规则的黑名单规则, 批量操作时 webBlackListRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败。

            示例: jdc ipanti disable-black-list-rule-of-web-rule  --instance-id xxx --web-rule-id xxx --web-black-list-rule-id xxx
        ''',
    )
    def disable_black_list_rule_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableBlackListRuleOfWebRuleRequest import DisableBlackListRuleOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableBlackListRuleOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询网站类防护规则的白名单用量信息 ''',
        description='''
            查询网站类防护规则的白名单用量信息。

            示例: jdc ipanti describe-web-rule-white-list-usage  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def describe_web_rule_white_list_usage(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeWebRuleWhiteListUsageRequest import DescribeWebRuleWhiteListUsageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeWebRuleWhiteListUsageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--page-number'], dict(help="""(int) 页码, 默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为10, 取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询网站类规则的白名单规则列表 ''',
        description='''
            查询网站类规则的白名单规则列表。

            示例: jdc ipanti describe-white-list-rules-of-web-rule  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def describe_white_list_rules_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeWhiteListRulesOfWebRuleRequest import DescribeWhiteListRulesOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeWhiteListRulesOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--web-white-list-rule-spec'], dict(help="""(webWhiteListRuleSpec) 添加网站类规则的白名单规则请求参数 """, dest='webWhiteListRuleSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 添加网站类规则的白名单规则 ''',
        description='''
            添加网站类规则的白名单规则。

            示例: jdc ipanti create-white-list-rule-of-web-rule  --instance-id xxx --web-rule-id xxx --web-white-list-rule-spec '{"":""}'
        ''',
    )
    def create_white_list_rule_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CreateWhiteListRuleOfWebRuleRequest import CreateWhiteListRuleOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateWhiteListRuleOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--web-white-list-rule-id'], dict(help="""(string) 网站类规则的白名单规则 Id """, dest='webWhiteListRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询网站类规则的白名单规则 ''',
        description='''
            查询网站类规则的白名单规则。

            示例: jdc ipanti describe-white-list-rule-of-web-rule  --instance-id xxx --web-rule-id xxx --web-white-list-rule-id xxx
        ''',
    )
    def describe_white_list_rule_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeWhiteListRuleOfWebRuleRequest import DescribeWhiteListRuleOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeWhiteListRuleOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--web-white-list-rule-id'], dict(help="""(string) 网站类规则的白名单规则 Id """, dest='webWhiteListRuleId',  required=True)),
            (['--web-white-list-rule-spec'], dict(help="""(webWhiteListRuleSpec) 修改网站类规则的白名单规则请求参数 """, dest='webWhiteListRuleSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改网站类规则的白名单规则 ''',
        description='''
            修改网站类规则的白名单规则。

            示例: jdc ipanti modify-white-list-rule-of-web-rule  --instance-id xxx --web-rule-id xxx --web-white-list-rule-id xxx --web-white-list-rule-spec '{"":""}'
        ''',
    )
    def modify_white_list_rule_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyWhiteListRuleOfWebRuleRequest import ModifyWhiteListRuleOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyWhiteListRuleOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--web-white-list-rule-id'], dict(help="""(string) 网站类规则的白名单规则 Id """, dest='webWhiteListRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除网站类规则的白名单规则, 批量操作时 webWhiteListRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败 ''',
        description='''
            删除网站类规则的白名单规则, 批量操作时 webWhiteListRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败。

            示例: jdc ipanti delete-white-list-rule-of-web-rule  --instance-id xxx --web-rule-id xxx --web-white-list-rule-id xxx
        ''',
    )
    def delete_white_list_rule_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DeleteWhiteListRuleOfWebRuleRequest import DeleteWhiteListRuleOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteWhiteListRuleOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 开启网站类规则的白名单 ''',
        description='''
            开启网站类规则的白名单。

            示例: jdc ipanti enable-web-rule-white-list  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def enable_web_rule_white_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableWebRuleWhiteListRequest import EnableWebRuleWhiteListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableWebRuleWhiteListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--web-white-list-rule-id'], dict(help="""(string) 网站类规则的白名单规则 Id """, dest='webWhiteListRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 开启网站类规则的白名单规则, 批量操作时 webWhiteListRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败 ''',
        description='''
            开启网站类规则的白名单规则, 批量操作时 webWhiteListRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败。

            示例: jdc ipanti enable-white-list-rule-of-web-rule  --instance-id xxx --web-rule-id xxx --web-white-list-rule-id xxx
        ''',
    )
    def enable_white_list_rule_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableWhiteListRuleOfWebRuleRequest import EnableWhiteListRuleOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableWhiteListRuleOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 关闭网站类规则的白名单 ''',
        description='''
            关闭网站类规则的白名单。

            示例: jdc ipanti disable-web-rule-white-list  --instance-id xxx --web-rule-id xxx
        ''',
    )
    def disable_web_rule_white_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableWebRuleWhiteListRequest import DisableWebRuleWhiteListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableWebRuleWhiteListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 高防实例 Id """, dest='instanceId',  required=True)),
            (['--web-rule-id'], dict(help="""(string) 网站规则 Id """, dest='webRuleId',  required=True)),
            (['--web-white-list-rule-id'], dict(help="""(string) 网站类规则的白名单规则 Id """, dest='webWhiteListRuleId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 关闭网站类规则的白名单规则, 批量操作时 webWhiteListRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败 ''',
        description='''
            关闭网站类规则的白名单规则, 批量操作时 webWhiteListRuleId 传多个, 以 ',' 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败。

            示例: jdc ipanti disable-white-list-rule-of-web-rule  --instance-id xxx --web-rule-id xxx --web-white-list-rule-id xxx
        ''',
    )
    def disable_white_list_rule_of_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableWhiteListRuleOfWebRuleRequest import DisableWhiteListRuleOfWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableWhiteListRuleOfWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询网站类转发规则 Geo 模式的黑名单可设置区域编码 ''',
        description='''
            查询网站类转发规则 Geo 模式的黑名单可设置区域编码。

            示例: jdc ipanti describe-web-rule-black-list-geo-areas 
        ''',
    )
    def describe_web_rule_black_list_geo_areas(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeWebRuleBlackListGeoAreasRequest import DescribeWebRuleBlackListGeoAreasRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeWebRuleBlackListGeoAreasRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询网站类转发规则 Geo 模式的白名单可设置区域编码 ''',
        description='''
            查询网站类转发规则 Geo 模式的白名单可设置区域编码。

            示例: jdc ipanti describe-web-rule-white-list-geo-areas 
        ''',
    )
    def describe_web_rule_white_list_geo_areas(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeWebRuleWhiteListGeoAreasRequest import DescribeWebRuleWhiteListGeoAreasRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeWebRuleWhiteListGeoAreasRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 ID, 高防不区分区域, 传 cn-north-1 即可 """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--jdcloud-header'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='jdcloudHeaders', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询网站类转发规则按地域回源配置 geoRsRoute 可设置的区域 ''',
        description='''
            查询网站类转发规则按地域回源配置 geoRsRoute 可设置的区域。

            示例: jdc ipanti describe-web-rule-rsgeo-areas 
        ''',
    )
    def describe_web_rule_rsgeo_areas(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeWebRuleRSGeoAreasRequest import DescribeWebRuleRSGeoAreasRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeWebRuleRSGeoAreasRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--api'], dict(help="""(string) api name """, choices=['describe-forward-rules','create-forward-rule','create-forward-rules','describe-forward-rule','modify-forward-rule','delete-forward-rule','switch-forward-rule-protect','switch-forward-rule-origin','describe-protection-rule-of-forward-rule','modify-protection-rule-of-forward-rule','describe-geo-areas','describe-black-list-rule-of-forward-rule','modify-black-list-rule-of-forward-rule','enable-black-list-rule-of-forward-rule','disable-black-list-rule-of-forward-rule','describe-white-list-rule-of-forward-rule','modify-white-list-rule-of-forward-rule','enable-white-list-rule-of-forward-rule','disable-white-list-rule-of-forward-rule','describe-ddo-sgraph','describe-fwd-graph','describe-business-graph','describe-ccgraph','describe-status-graph','describe-conn-stat-graph','describe-ddo-sattack-logs','describe-ddo-sip-attack-logs','describe-ccattack-logs','describe-ccattack-log-details','describe-attack-statistics','describe-attack-type-count','describe-dispatch-rules','create-dispatch-rule','create-dispatch-rules','modify-dispatch-rule','delete-dispatch-rule','switch-dispatch-rule-protect','switch-dispatch-rule-origin','describe-instance-acl','modify-instance-acl','recover-instance-acl','describe-custom-pages','create-custom-page','modify-custom-page','delete-custom-page','modify-instance-custom-page','modify-instance-custom-page-default','enable-instance-custom-page','disable-instance-custom-page','describe-instances','create-instance','describe-instance','modify-instance-name','modify-epb','describe-alarm-config','modify-alarm-config','describe-origin-white-ip-list','describe-service-ip-list','describe-instance-id-by-resource-id','describe-name-list','describe-protection-statistics','describe-protection-outline','check-name','describe-vpc-ip-list','describe-cps-ip-list','describe-ccs-ip-list','describe-ip-sets','create-ip-set','describe-ip-set','delete-ip-set','describe-ip-set-usage','describe-web-rules','create-web-rule','create-web-rules','describe-web-rule','modify-web-rule','delete-web-rule','bind-cert','switch-web-rule-protect','switch-web-rule-origin','enable-web-rule-cc','disable-web-rule-cc','enable-web-rule-ccobserver-mode','disable-web-rule-ccobserver-mode','describe-js-pages-of-web-rule','create-js-page-of-web-rule','create-js-pages-of-web-rule','modify-js-page-of-web-rule','delete-js-page-of-web-rule','disable-web-rule-js-page','enable-web-rule-js-page','modify-web-rule-js-page-to-all','modify-web-rule-js-page-to-custom','describe-ccprotection-rules-of-web-rule','create-ccprotection-rule-of-web-rule','describe-ccprotection-rule-of-web-rule','modify-ccprotection-rule-of-web-rule','delete-ccprotection-rule-of-web-rule','enable-ccprotection-rule-of-web-rule','disable-ccprotection-rule-of-web-rule','enable-web-rule-ccprotection-rule','disable-web-rule-ccprotection-rule','describe-ccprotection-config-of-web-rule','modify-ccprotection-config-of-web-rule','describe-ccprotection-default-config-of-web-rule','modify-cert-info','describe-web-rule-black-list-usage','describe-black-list-rules-of-web-rule','create-black-list-rule-of-web-rule','describe-black-list-rule-of-web-rule','modify-black-list-rule-of-web-rule','delete-black-list-rule-of-web-rule','enable-web-rule-black-list','enable-black-list-rule-of-web-rule','disable-web-rule-black-list','disable-black-list-rule-of-web-rule','describe-web-rule-white-list-usage','describe-white-list-rules-of-web-rule','create-white-list-rule-of-web-rule','describe-white-list-rule-of-web-rule','modify-white-list-rule-of-web-rule','delete-white-list-rule-of-web-rule','enable-web-rule-white-list','enable-white-list-rule-of-web-rule','disable-web-rule-white-list','disable-white-list-rule-of-web-rule','describe-web-rule-black-list-geo-areas','describe-web-rule-white-list-geo-areas','describe-web-rule-rsgeo-areas',], required=True)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 生成单个API接口的json骨架空字符串 ''',
        description='''
            生成单个API接口的json骨架空字符串。

            示例: jdc nc generate-skeleton --api describeContainer ''',
    )
    def generate_skeleton(self):
        skeleton = Skeleton('ipanti', self.app.pargs.api)
        skeleton.show()
