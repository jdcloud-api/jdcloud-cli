# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from argparse import RawTextHelpFormatter
from jdcloud_cli.cement.ext.ext_argparse import expose
from jdcloud_cli.controllers.base_controller import BaseController
from jdcloud_cli.client_factory import ClientFactory
from jdcloud_cli.parameter_builder import collect_user_args, collect_user_headers
from jdcloud_cli.printer import Printer
from jdcloud_cli.skeleton import Skeleton


class IpantiController(BaseController):
    class Meta:
        label = 'ipanti'
        help = '京东云IP高防相关接口'
        description = '''
        ipanti cli 子命令，京东云IP高防相关接口。
        OpenAPI文档地址为：https://docs.jdcloud.com/cn/anti-ddos-pro/api/overview
        '''
        stacked_on = 'base'
        stacked_type = 'nested'

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码, 默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为10, 取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能查询最近 60 天以内的数据, UTC 时间, 格式：yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式：yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=True)),
            (['--instance-id'], dict(help="""(array: int) 高防实例 ID """, dest='instanceId', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询 DDos 攻击日志 ''',
        description='''
            查询 DDos 攻击日志。

            示例: jdc ipanti describe-ddo-sattack-logs  --start-time xxx --end-time xxx
        ''',
    )
    def describe_ddo_sattack_logs(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeDDoSAttackLogsRequest import DescribeDDoSAttackLogsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeDDoSAttackLogsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码, 默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为10, 取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能查询最近 60 天以内的数据, UTC 时间, 格式：yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式：yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=True)),
            (['--instance-id'], dict(help="""(array: int) 高防实例 ID """, dest='instanceId', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询 CC 攻击日志 ''',
        description='''
            查询 CC 攻击日志。

            示例: jdc ipanti describe-ccattack-logs  --start-time xxx --end-time xxx
        ''',
    )
    def describe_ccattack_logs(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeCCAttackLogsRequest import DescribeCCAttackLogsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeCCAttackLogsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码, 默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为10, 取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能查询最近 60 天以内的数据, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=True)),
            (['--instance-id'], dict(help="""(int) 高防实例 ID """, dest='instanceId', type=int, required=True)),
            (['--sub-domain'], dict(help="""(array: string) 子域名 """, dest='subDomain',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询 CC 攻击日志详情 ''',
        description='''
            查询 CC 攻击日志详情。

            示例: jdc ipanti describe-ccattack-log-details  --start-time xxx --end-time xxx --instance-id 0
        ''',
    )
    def describe_ccattack_log_details(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeCCAttackLogDetailsRequest import DescribeCCAttackLogDetailsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeCCAttackLogDetailsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能下载最近 60 天以内的数据, UTC 时间, 格式：yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式：yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=True)),
            (['--instance-id'], dict(help="""(array: int) 高防实例 ID """, dest='instanceId', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 下载 DDos 攻击日志 ''',
        description='''
            下载 DDos 攻击日志。

            示例: jdc ipanti download-ddo-sattack-logs  --start-time xxx --end-time xxx
        ''',
    )
    def download_ddo_sattack_logs(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DownloadDDoSAttackLogsRequest import DownloadDDoSAttackLogsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DownloadDDoSAttackLogsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能下载最近 60 天以内的数据, UTC 时间, 格式：yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式：yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=True)),
            (['--instance-id'], dict(help="""(array: int) 高防实例 ID """, dest='instanceId', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 下载 CC 攻击日志 ''',
        description='''
            下载 CC 攻击日志。

            示例: jdc ipanti download-ccattack-logs  --start-time xxx --end-time xxx
        ''',
    )
    def download_ccattack_logs(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DownloadCCAttackLogsRequest import DownloadCCAttackLogsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DownloadCCAttackLogsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能下载最近 60 天以内的数据, UTC 时间, 格式：yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式：yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=True)),
            (['--instance-id'], dict(help="""(int) 高防实例 ID """, dest='instanceId', type=int, required=True)),
            (['--sub-domain'], dict(help="""(array: string) 子域名 """, dest='subDomain',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 下载 CC 攻击日志详情 ''',
        description='''
            下载 CC 攻击日志详情。

            示例: jdc ipanti download-ccattack-log-details  --start-time xxx --end-time xxx --instance-id 0
        ''',
    )
    def download_ccattack_log_details(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DownloadCCAttackLogDetailsRequest import DownloadCCAttackLogDetailsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DownloadCCAttackLogDetailsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能查询最近 60 天以内的数据, UTC 时间, 格式：yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式：yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=True)),
            (['--instance-id'], dict(help="""(array: int) 高防实例 ID """, dest='instanceId', type=int, required=False)),
            (['--type'], dict(help="""(int) 攻击类型, 0 为 DDos, 1 为 CC """, dest='type', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询攻击次数及流量峰值 ''',
        description='''
            查询攻击次数及流量峰值。

            示例: jdc ipanti describe-attack-statistics  --start-time xxx --end-time xxx --type 0
        ''',
    )
    def describe_attack_statistics(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeAttackStatisticsRequest import DescribeAttackStatisticsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeAttackStatisticsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 只能查询最近 60 天以内的数据, UTC 时间, 格式：yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式：yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=True)),
            (['--instance-id'], dict(help="""(array: int) 高防实例 ID """, dest='instanceId', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询各类型攻击次数 ''',
        description='''
            查询各类型攻击次数。

            示例: jdc ipanti describe-attack-type-count  --start-time xxx --end-time xxx
        ''',
    )
    def describe_attack_type_count(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeAttackTypeCountRequest import DescribeAttackTypeCountRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeAttackTypeCountRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 最多查最近 60 天, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=True)),
            (['--instance-id'], dict(help="""(array: int) 高防实例 Id 列表 """, dest='instanceId', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' DDos 防护流量报表 ''',
        description='''
            DDos 防护流量报表。

            示例: jdc ipanti describe-ddo-sgraph  --start-time xxx --end-time xxx
        ''',
    )
    def describe_ddo_sgraph(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeDDoSGraphRequest import DescribeDDoSGraphRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeDDoSGraphRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 最多查最近 60 天, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=True)),
            (['--instance-id'], dict(help="""(array: int) 高防实例 Id 列表 """, dest='instanceId', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 转发流量报表 ''',
        description='''
            转发流量报表。

            示例: jdc ipanti describe-fwd-graph  --start-time xxx --end-time xxx
        ''',
    )
    def describe_fwd_graph(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeFwdGraphRequest import DescribeFwdGraphRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeFwdGraphRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--start-time'], dict(help="""(string) 开始时间, 最多查最近 60 天, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='startTime',  required=True)),
            (['--end-time'], dict(help="""(string) 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ """, dest='endTime',  required=True)),
            (['--instance-id'], dict(help="""(array: int) 高防实例 Id 列表 """, dest='instanceId', type=int, required=False)),
            (['--sub-domain'], dict(help="""(array: string) 规则域名列表 """, dest='subDomain',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' CC 防护流量报表 ''',
        description='''
            CC 防护流量报表。

            示例: jdc ipanti describe-ccgraph  --start-time xxx --end-time xxx
        ''',
    )
    def describe_ccgraph(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeCCGraphRequest import DescribeCCGraphRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeCCGraphRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--page-number'], dict(help="""(int) 页码, 默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为10, 取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--search-type'], dict(help="""(string) 查询类型名称, domain:源站域名, ip:源站 IP, port: 转发端口, originPort: 源站端口 """, dest='searchType',  required=False)),
            (['--search-value'], dict(help="""(string) 查询类型值 """, dest='searchValue',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询某个实例下的非网站转发配置 ''',
        description='''
            查询某个实例下的非网站转发配置。

            示例: jdc ipanti describe-forward-rules  --instance-id 5
        ''',
    )
    def describe_forward_rules(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeForwardRulesRequest import DescribeForwardRulesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeForwardRulesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--forward-rule-spec'], dict(help="""(forwardRuleSpec) 添加非网站类规则请求参数 """, dest='forwardRuleSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 添加非网站类规则 ''',
        description='''
            添加非网站类规则。

            示例: jdc ipanti create-forward-rule  --instance-id 5 --forward-rule-spec '{"":""}'
        ''',
    )
    def create_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CreateForwardRuleRequest import CreateForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--forward-rule-id'], dict(help="""(int) 转发规则 Id """, dest='forwardRuleId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询非网站类规则 ''',
        description='''
            查询非网站类规则。

            示例: jdc ipanti describe-forward-rule  --instance-id 5 --forward-rule-id 5
        ''',
    )
    def describe_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeForwardRuleRequest import DescribeForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--forward-rule-id'], dict(help="""(int) 转发规则 Id """, dest='forwardRuleId', type=int, required=True)),
            (['--forward-rule-spec'], dict(help="""(forwardRuleSpec) 更新非网站类规则请求参数 """, dest='forwardRuleSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 更新非网站类规则 ''',
        description='''
            更新非网站类规则。

            示例: jdc ipanti modify-forward-rule  --instance-id 5 --forward-rule-id 5 --forward-rule-spec '{"":""}'
        ''',
    )
    def modify_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyForwardRuleRequest import ModifyForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--forward-rule-id'], dict(help="""(int) 转发规则 Id """, dest='forwardRuleId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除非网站规则 ''',
        description='''
            删除非网站规则。

            示例: jdc ipanti delete-forward-rule  --instance-id 5 --forward-rule-id 5
        ''',
    )
    def delete_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DeleteForwardRuleRequest import DeleteForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--forward-rule-id'], dict(help="""(int) 转发规则 Id """, dest='forwardRuleId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 非网站类规则切换成防御状态 ''',
        description='''
            非网站类规则切换成防御状态。

            示例: jdc ipanti switch-forward-rule-protect  --instance-id 5 --forward-rule-id 5
        ''',
    )
    def switch_forward_rule_protect(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.SwitchForwardRuleProtectRequest import SwitchForwardRuleProtectRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = SwitchForwardRuleProtectRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--forward-rule-id'], dict(help="""(int) 转发规则 Id """, dest='forwardRuleId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 非网站类规则切换成回源状态 ''',
        description='''
            非网站类规则切换成回源状态。

            示例: jdc ipanti switch-forward-rule-origin  --instance-id 5 --forward-rule-id 5
        ''',
    )
    def switch_forward_rule_origin(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.SwitchForwardRuleOriginRequest import SwitchForwardRuleOriginRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = SwitchForwardRuleOriginRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--forward-rule-id'], dict(help="""(int) 转发规则 Id """, dest='forwardRuleId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询非网站类转发规则的防护规则 ''',
        description='''
            查询非网站类转发规则的防护规则。

            示例: jdc ipanti describe-protection-rule-of-forward-rule  --instance-id 5 --forward-rule-id 5
        ''',
    )
    def describe_protection_rule_of_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeProtectionRuleOfForwardRuleRequest import DescribeProtectionRuleOfForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeProtectionRuleOfForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--forward-rule-id'], dict(help="""(int) 转发规则 Id """, dest='forwardRuleId', type=int, required=True)),
            (['--forward-protection-rule-spec'], dict(help="""(forwardProtectionRuleSpec) 修改非网站类转发规则的防护规则请求参数 """, dest='forwardProtectionRuleSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改非网站类转发规则的防护规则 ''',
        description='''
            修改非网站类转发规则的防护规则。

            示例: jdc ipanti modify-protection-rule-of-forward-rule  --instance-id 5 --forward-rule-id 5 --forward-protection-rule-spec '{"":""}'
        ''',
    )
    def modify_protection_rule_of_forward_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyProtectionRuleOfForwardRuleRequest import ModifyProtectionRuleOfForwardRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyProtectionRuleOfForwardRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询非网站类转发规则的防护规则 Geo 拦截可设置区域编码 ''',
        description='''
            查询非网站类转发规则的防护规则 Geo 拦截可设置区域编码。

            示例: jdc ipanti describe-geo-areas 
        ''',
    )
    def describe_geo_areas(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeGeoAreasRequest import DescribeGeoAreasRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeGeoAreasRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码, 默认为 1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为 10, 取值范围[10, 100], 0 表示全量 """, dest='pageSize', type=int, required=False)),
            (['--name'], dict(help="""(string) 实例名称，可模糊匹配 """, dest='name',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询实例列表 ''',
        description='''
            查询实例列表。

            示例: jdc ipanti describe-instances 
        ''',
    )
    def describe_instances(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeInstancesRequest import DescribeInstancesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeInstancesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--create-instance-spec'], dict(help="""(createInstanceSpec) 新购或升级实例请求参数 """, dest='createInstanceSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 新购或升级高防实例 ''',
        description='''
            新购或升级高防实例。

            示例: jdc ipanti create-instance  --create-instance-spec '{"":""}'
        ''',
    )
    def create_instance(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CreateInstanceRequest import CreateInstanceRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateInstanceRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询实例 ''',
        description='''
            查询实例。

            示例: jdc ipanti describe-instance  --instance-id 5
        ''',
    )
    def describe_instance(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeInstanceRequest import DescribeInstanceRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeInstanceRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--rename-instance-spec'], dict(help="""(renameInstanceSpec) 修改实例名称请求参数 """, dest='renameInstanceSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改实例名称 ''',
        description='''
            修改实例名称。

            示例: jdc ipanti modify-instance-name  --instance-id 5 --rename-instance-spec '{"":""}'
        ''',
    )
    def modify_instance_name(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyInstanceNameRequest import ModifyInstanceNameRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyInstanceNameRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--modify-instance-epbspec'], dict(help="""(modifyInstanceEPBSpec) 修改实例名称请求参数 """, dest='modifyInstanceEPBSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 更新实例弹性防护带宽 ''',
        description='''
            更新实例弹性防护带宽。

            示例: jdc ipanti modify-epb  --instance-id 5 --modify-instance-epbspec '{"":""}'
        ''',
    )
    def modify_epb(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyEPBRequest import ModifyEPBRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyEPBRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--c-cspec'], dict(help="""(cCSpec) CC 参数 """, dest='cCSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 设置实例 CC 防护 ''',
        description='''
            设置实例 CC 防护。

            示例: jdc ipanti modify-instance-cc  --instance-id 5 --c-cspec '{"":""}'
        ''',
    )
    def modify_instance_cc(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyInstanceCCRequest import ModifyInstanceCCRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyInstanceCCRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 开启实例 CC 防护 ''',
        description='''
            开启实例 CC 防护。

            示例: jdc ipanti enable-instance-cc  --instance-id 5
        ''',
    )
    def enable_instance_cc(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableInstanceCCRequest import EnableInstanceCCRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableInstanceCCRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 关闭实例 CC 防护 ''',
        description='''
            关闭实例 CC 防护。

            示例: jdc ipanti disable-instance-cc  --instance-id 5
        ''',
    )
    def disable_instance_cc(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableInstanceCCRequest import DisableInstanceCCRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableInstanceCCRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--url-white-list'], dict(help="""(array: string) 网站类规则参数 """, dest='urlWhiteList',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 设置实例 Url 白名单 ''',
        description='''
            设置实例 Url 白名单。

            示例: jdc ipanti modify-instance-url-white-list  --instance-id 5
        ''',
    )
    def modify_instance_url_white_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyInstanceUrlWhiteListRequest import ModifyInstanceUrlWhiteListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyInstanceUrlWhiteListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 开启实例 Url 白名单 ''',
        description='''
            开启实例 Url 白名单。

            示例: jdc ipanti enable-instance-url-white-list  --instance-id 5
        ''',
    )
    def enable_instance_url_white_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableInstanceUrlWhiteListRequest import EnableInstanceUrlWhiteListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableInstanceUrlWhiteListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 关闭实例 Url 白名单 ''',
        description='''
            关闭实例 Url 白名单。

            示例: jdc ipanti disable-instance-url-white-list  --instance-id 5
        ''',
    )
    def disable_instance_url_white_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableInstanceUrlWhiteListRequest import DisableInstanceUrlWhiteListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableInstanceUrlWhiteListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--ip-bw-list-spec'], dict(help="""(ipBwListSpec) 设置 IP 黑名单请求 """, dest='ipBwListSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 设置实例 IP 黑名单 ''',
        description='''
            设置实例 IP 黑名单。

            示例: jdc ipanti modify-instance-ip-black-list  --instance-id 5 --ip-bw-list-spec '{"":""}'
        ''',
    )
    def modify_instance_ip_black_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyInstanceIpBlackListRequest import ModifyInstanceIpBlackListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyInstanceIpBlackListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 开启实例 IP 黑名单 ''',
        description='''
            开启实例 IP 黑名单。

            示例: jdc ipanti enable-instance-ip-black-list  --instance-id 5
        ''',
    )
    def enable_instance_ip_black_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableInstanceIpBlackListRequest import EnableInstanceIpBlackListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableInstanceIpBlackListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 关闭实例 IP 黑名单 ''',
        description='''
            关闭实例 IP 黑名单。

            示例: jdc ipanti disable-instance-ip-black-list  --instance-id 5
        ''',
    )
    def disable_instance_ip_black_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableInstanceIpBlackListRequest import DisableInstanceIpBlackListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableInstanceIpBlackListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--ip-bw-list-spec'], dict(help="""(ipBwListSpec) 设置 IP 白名单请求参数 """, dest='ipBwListSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 设置实例 IP 白名单 ''',
        description='''
            设置实例 IP 白名单。

            示例: jdc ipanti modify-instance-ip-white-list  --instance-id 5 --ip-bw-list-spec '{"":""}'
        ''',
    )
    def modify_instance_ip_white_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyInstanceIpWhiteListRequest import ModifyInstanceIpWhiteListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyInstanceIpWhiteListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 开启实例 IP 白名单 ''',
        description='''
            开启实例 IP 白名单。

            示例: jdc ipanti enable-instance-ip-white-list  --instance-id 5
        ''',
    )
    def enable_instance_ip_white_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableInstanceIpWhiteListRequest import EnableInstanceIpWhiteListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableInstanceIpWhiteListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 关闭实例 IP 白名单 ''',
        description='''
            关闭实例 IP 白名单。

            示例: jdc ipanti disable-instance-ip-white-list  --instance-id 5
        ''',
    )
    def disable_instance_ip_white_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableInstanceIpWhiteListRequest import DisableInstanceIpWhiteListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableInstanceIpWhiteListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 开启实例 CC 防护的观察者模式 ''',
        description='''
            开启实例 CC 防护的观察者模式。

            示例: jdc ipanti enable-ccobserver-mode  --instance-id 5
        ''',
    )
    def enable_ccobserver_mode(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableCCObserverModeRequest import EnableCCObserverModeRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableCCObserverModeRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 关闭实例 CC 防护的观察者模式 ''',
        description='''
            关闭实例 CC 防护的观察者模式。

            示例: jdc ipanti disable-ccobserver-mode  --instance-id 5
        ''',
    )
    def disable_ccobserver_mode(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableCCObserverModeRequest import DisableCCObserverModeRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableCCObserverModeRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 开启 CC 防护每 IP 的限速 ''',
        description='''
            开启 CC 防护每 IP 的限速。

            示例: jdc ipanti enable-ccip-limit  --instance-id 5
        ''',
    )
    def enable_ccip_limit(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableCCIpLimitRequest import EnableCCIpLimitRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableCCIpLimitRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 关闭 CC 防护每 IP 的限速 ''',
        description='''
            关闭 CC 防护每 IP 的限速。

            示例: jdc ipanti disable-ccip-limit  --instance-id 5
        ''',
    )
    def disable_ccip_limit(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableCCIpLimitRequest import DisableCCIpLimitRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableCCIpLimitRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--c-cspec'], dict(help="""(ccIpLimitSpec) CC 参数 """, dest='cCSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 设置实例 CC 防护每 IP 限速 ''',
        description='''
            设置实例 CC 防护每 IP 限速。

            示例: jdc ipanti set-ccip-limit  --instance-id 5 --c-cspec '{"":""}'
        ''',
    )
    def set_ccip_limit(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.SetCCIpLimitRequest import SetCCIpLimitRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = SetCCIpLimitRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询告警配置 ''',
        description='''
            查询告警配置。

            示例: jdc ipanti describe-alarm-config  --instance-id 5
        ''',
    )
    def describe_alarm_config(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeAlarmConfigRequest import DescribeAlarmConfigRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeAlarmConfigRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 实例 ID """, dest='instanceId', type=int, required=True)),
            (['--alarm-config-spec'], dict(help="""(alarmConfigSpec) 更新告警配置请求参数 """, dest='alarmConfigSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 更新告警配置 ''',
        description='''
            更新告警配置。

            示例: jdc ipanti modify-alarm-config  --instance-id 5 --alarm-config-spec '{"":""}'
        ''',
    )
    def modify_alarm_config(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyAlarmConfigRequest import ModifyAlarmConfigRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyAlarmConfigRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(int) 高防实例 ID, 为空则查询所有实例名称 """, dest='id', type=int, required=False)),
            (['--name'], dict(help="""(string) 实例名称, 可模糊匹配 """, dest='name',  required=False)),
            (['--page-number'], dict(help="""(int) 页码, 默认为 1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为 10, 取值范围 [10, 100] """, dest='pageSize', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询高防实例名称列表 ''',
        description='''
            查询高防实例名称列表。

            示例: jdc ipanti describe-name-list 
        ''',
    )
    def describe_name_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeNameListRequest import DescribeNameListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeNameListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询高防实例防护统计信息 ''',
        description='''
            查询高防实例防护统计信息。

            示例: jdc ipanti describe-protection-statistics 
        ''',
    )
    def describe_protection_statistics(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeProtectionStatisticsRequest import DescribeProtectionStatisticsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeProtectionStatisticsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--name'], dict(help="""(string) 待检测实例名称 """, dest='name',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 检测实例名称是否合法 ''',
        description='''
            检测实例名称是否合法。

            示例: jdc ipanti check-name  --name xxx
        ''',
    )
    def check_name(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CheckNameRequest import CheckNameRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CheckNameRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码, 默认为 1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为 10, 取值范围 [0, 100], 0 表示全量 """, dest='pageSize', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询用户的京东云 IP 资源 ''',
        description='''
            查询用户的京东云 IP 资源。

            示例: jdc ipanti describe-vpc-ip-list 
        ''',
    )
    def describe_vpc_ip_list(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeVpcIpListRequest import DescribeVpcIpListRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeVpcIpListRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) Region ID """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询 CC 自定义默认阈值 ''',
        description='''
            查询 CC 自定义默认阈值。

            示例: jdc ipanti describe-ccdefault-thresholds 
        ''',
    )
    def describe_ccdefault_thresholds(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeCCDefaultThresholdsRequest import DescribeCCDefaultThresholdsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeCCDefaultThresholdsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--page-number'], dict(help="""(int) 页码, 默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小, 默认为10, 取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--search-type'], dict(help="""(string) 查询类型名称, domain:源站域名, ip:源站 IP, rawDomain: 域名 """, dest='searchType',  required=False)),
            (['--search-value'], dict(help="""(string) 查询类型值 """, dest='searchValue',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询某个实例下的网站类规则 ''',
        description='''
            查询某个实例下的网站类规则。

            示例: jdc ipanti describe-web-rules  --instance-id 5
        ''',
    )
    def describe_web_rules(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeWebRulesRequest import DescribeWebRulesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeWebRulesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--web-rule-spec'], dict(help="""(webRuleSpec) 添加网站类规则请求参数 """, dest='webRuleSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 添加网站类规则 ''',
        description='''
            添加网站类规则。

            示例: jdc ipanti create-web-rule  --instance-id 5 --web-rule-spec '{"":""}'
        ''',
    )
    def create_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.CreateWebRuleRequest import CreateWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--web-rule-id'], dict(help="""(int) 网站规则 Id """, dest='webRuleId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询网站类规则 ''',
        description='''
            查询网站类规则。

            示例: jdc ipanti describe-web-rule  --instance-id 5 --web-rule-id 5
        ''',
    )
    def describe_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeWebRuleRequest import DescribeWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--web-rule-id'], dict(help="""(int) 网站规则 Id """, dest='webRuleId', type=int, required=True)),
            (['--web-rule-spec'], dict(help="""(webRuleSpec) 更新网站类规则请求参数 """, dest='webRuleSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改网站类规则 ''',
        description='''
            修改网站类规则。

            示例: jdc ipanti modify-web-rule  --instance-id 5 --web-rule-id 5 --web-rule-spec '{"":""}'
        ''',
    )
    def modify_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyWebRuleRequest import ModifyWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--web-rule-id'], dict(help="""(int) 网站规则 Id """, dest='webRuleId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除网站规则 ''',
        description='''
            删除网站规则。

            示例: jdc ipanti delete-web-rule  --instance-id 5 --web-rule-id 5
        ''',
    )
    def delete_web_rule(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DeleteWebRuleRequest import DeleteWebRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteWebRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--web-rule-id'], dict(help="""(int) 网站规则 Id """, dest='webRuleId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 网站类规则切换成防御状态 ''',
        description='''
            网站类规则切换成防御状态。

            示例: jdc ipanti switch-web-rule-protect  --instance-id 5 --web-rule-id 5
        ''',
    )
    def switch_web_rule_protect(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.SwitchWebRuleProtectRequest import SwitchWebRuleProtectRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = SwitchWebRuleProtectRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--web-rule-id'], dict(help="""(int) 网站规则 Id """, dest='webRuleId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 网站类规则切换成回源状态 ''',
        description='''
            网站类规则切换成回源状态。

            示例: jdc ipanti switch-web-rule-origin  --instance-id 5 --web-rule-id 5
        ''',
    )
    def switch_web_rule_origin(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.SwitchWebRuleOriginRequest import SwitchWebRuleOriginRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = SwitchWebRuleOriginRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--web-rule-id'], dict(help="""(int) 网站规则 Id """, dest='webRuleId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 网站类规则开启 CC ''',
        description='''
            网站类规则开启 CC。

            示例: jdc ipanti enable-web-rule-cc  --instance-id 5 --web-rule-id 5
        ''',
    )
    def enable_web_rule_cc(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.EnableWebRuleCCRequest import EnableWebRuleCCRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EnableWebRuleCCRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--web-rule-id'], dict(help="""(int) 网站规则 Id """, dest='webRuleId', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 网站类规则禁用 CC ''',
        description='''
            网站类规则禁用 CC。

            示例: jdc ipanti disable-web-rule-cc  --instance-id 5 --web-rule-id 5
        ''',
    )
    def disable_web_rule_cc(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DisableWebRuleCCRequest import DisableWebRuleCCRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisableWebRuleCCRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--web-rule-id'], dict(help="""(int) 网站规则 Id """, dest='webRuleId', type=int, required=True)),
            (['--cert-info-modify-spec'], dict(help="""(certInfoModifySpec) 编辑网站规则证书信息请求参数 """, dest='certInfoModifySpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 编辑网站规则证书信息 ''',
        description='''
            编辑网站规则证书信息。

            示例: jdc ipanti modify-cert-info  --instance-id 5 --web-rule-id 5 --cert-info-modify-spec '{"":""}'
        ''',
    )
    def modify_cert_info(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.ModifyCertInfoRequest import ModifyCertInfoRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyCertInfoRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 区域 Id """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(int) 高防实例 Id """, dest='instanceId', type=int, required=True)),
            (['--web-rule-id'], dict(help="""(int) 网站规则 Id """, dest='webRuleId', type=int, required=True)),
            (['--cert-info-describe-spec'], dict(help="""(certInfoDescribeSpec) 查询证书预览请求参数 """, dest='certInfoDescribeSpec',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询证书预览信息 ''',
        description='''
            查询证书预览信息。

            示例: jdc ipanti describe-cert-info  --instance-id 5 --web-rule-id 5 --cert-info-describe-spec '{"":""}'
        ''',
    )
    def describe_cert_info(self):
        client_factory = ClientFactory('ipanti')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.ipanti.apis.DescribeCertInfoRequest import DescribeCertInfoRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeCertInfoRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--api'], dict(help="""(string) api name """, choices=['describe-ddo-sattack-logs','describe-ccattack-logs','describe-ccattack-log-details','download-ddo-sattack-logs','download-ccattack-logs','download-ccattack-log-details','describe-attack-statistics','describe-attack-type-count','describe-ddo-sgraph','describe-fwd-graph','describe-ccgraph','describe-forward-rules','create-forward-rule','describe-forward-rule','modify-forward-rule','delete-forward-rule','switch-forward-rule-protect','switch-forward-rule-origin','describe-protection-rule-of-forward-rule','modify-protection-rule-of-forward-rule','describe-geo-areas','describe-instances','create-instance','describe-instance','modify-instance-name','modify-epb','modify-instance-cc','enable-instance-cc','disable-instance-cc','modify-instance-url-white-list','enable-instance-url-white-list','disable-instance-url-white-list','modify-instance-ip-black-list','enable-instance-ip-black-list','disable-instance-ip-black-list','modify-instance-ip-white-list','enable-instance-ip-white-list','disable-instance-ip-white-list','enable-ccobserver-mode','disable-ccobserver-mode','enable-ccip-limit','disable-ccip-limit','set-ccip-limit','describe-alarm-config','modify-alarm-config','describe-name-list','describe-protection-statistics','check-name','describe-vpc-ip-list','describe-ccdefault-thresholds','describe-web-rules','create-web-rule','describe-web-rule','modify-web-rule','delete-web-rule','switch-web-rule-protect','switch-web-rule-origin','enable-web-rule-cc','disable-web-rule-cc','modify-cert-info','describe-cert-info',], required=True)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 生成单个API接口的json骨架空字符串 ''',
        description='''
            生成单个API接口的json骨架空字符串。

            示例: jdc nc generate-skeleton --api describeContainer ''',
    )
    def generate_skeleton(self):
        skeleton = Skeleton('ipanti', self.app.pargs.api)
        skeleton.show()
