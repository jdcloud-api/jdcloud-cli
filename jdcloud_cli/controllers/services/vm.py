# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from argparse import RawTextHelpFormatter
from jdcloud_cli.cement.ext.ext_argparse import expose
from jdcloud_cli.controllers.base_controller import BaseController
from jdcloud_cli.client_factory import ClientFactory
from jdcloud_cli.parameter_builder import collect_user_args, collect_user_headers
from jdcloud_cli.printer import Printer
from jdcloud_cli.skeleton import Skeleton


class VmController(BaseController):
    class Meta:
        label = 'vm'
        help = '云主机'
        description = '''
        vm cli 子命令，云主机实例、镜像、实例规格、实例模板、配额相关的接口。
        OpenAPI文档地址为：https://docs.jdcloud.com/cn/virtual-machines/api/overview
        '''
        stacked_on = 'base'
        stacked_type = 'nested'

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--image-id'], dict(help="""(string) 镜像ID """, dest='imageId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询镜像详情。;  ''',
        description='''
            查询镜像详情。; 。

            示例: jdc vm describe-image  --image-id xxx
        ''',
    )
    def describe_image(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DescribeImageRequest import DescribeImageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeImageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--image-id'], dict(help="""(string) 镜像ID """, dest='imageId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除一个私有镜像，只允许操作您的个人私有镜像。<br>; 若镜像已共享给其他用户，需先取消共享才可删除。;  ''',
        description='''
            删除一个私有镜像，只允许操作您的个人私有镜像。<br>; 若镜像已共享给其他用户，需先取消共享才可删除。; 。

            示例: jdc vm delete-image  --image-id xxx
        ''',
    )
    def delete_image(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DeleteImageRequest import DeleteImageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteImageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--image-source'], dict(help="""(string) 镜像来源，如果没有指定ids参数，此参数必传；取值范围：public、shared、thirdparty、private、community """, dest='imageSource',  required=False)),
            (['--service-code'], dict(help="""(string) 产品线标识，非必传，不传的时候返回全部产品线镜像 """, dest='serviceCode',  required=False)),
            (['--offline'], dict(help="""(bool) 是否下线，默认值为false；imageSource为public或者thirdparty时，此参数才有意义，其它情况下此参数无效；指定镜像ID查询时，此参数无效 """, dest='offline',  required=False)),
            (['--platform'], dict(help="""(string) 操作系统平台，取值范围：Windows Server、CentOS、Ubuntu """, dest='platform',  required=False)),
            (['--ids'], dict(help="""(array: string) 镜像ID列表，如果指定了此参数，其它参数可为空 """, dest='ids',  required=False)),
            (['--root-device-type'], dict(help="""(string) 镜像支持的系统盘类型，[localDisk,cloudDisk] """, dest='rootDeviceType',  required=False)),
            (['--launch-permission'], dict(help="""(string) 镜像的使用权限[all, specifiedUsers，ownerOnly]，可选参数，仅当imageSource取值private时有效 """, dest='launchPermission',  required=False)),
            (['--status'], dict(help="""(string) <a href="http://docs.jdcloud.com/virtual-machines/api/image_status">参考镜像状态</a> """, dest='status',  required=False)),
            (['--page-number'], dict(help="""(int) 页码；默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小；默认为20；取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询镜像信息列表。<br>; 通过此接口可以查询到京东云官方镜像、第三方镜像、私有镜像、或其他用户共享给您的镜像。<br>; 此接口支持分页查询，默认每页20条。;  ''',
        description='''
            查询镜像信息列表。<br>; 通过此接口可以查询到京东云官方镜像、第三方镜像、私有镜像、或其他用户共享给您的镜像。<br>; 此接口支持分页查询，默认每页20条。; 。

            示例: jdc vm describe-images 
        ''',
    )
    def describe_images(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DescribeImagesRequest import DescribeImagesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeImagesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--image-id'], dict(help="""(string) 镜像ID """, dest='imageId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询镜像的实例规格限制。<br>; 通过此接口可以查看镜像不支持的实例规格。只有官方镜像、第三方镜像有实例规格的限制，个人的私有镜像没有此限制。;  ''',
        description='''
            查询镜像的实例规格限制。<br>; 通过此接口可以查看镜像不支持的实例规格。只有官方镜像、第三方镜像有实例规格的限制，个人的私有镜像没有此限制。; 。

            示例: jdc vm describe-image-constraints  --image-id xxx
        ''',
    )
    def describe_image_constraints(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DescribeImageConstraintsRequest import DescribeImageConstraintsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeImageConstraintsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--ids'], dict(help="""(array: string) 镜像ID列表 """, dest='ids',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 批量查询镜像的实例规格限制。<br>; 通过此接口可以查看镜像不支持的实例规格。只有官方镜像、第三方镜像有实例规格的限制，个人的私有镜像没有此限制。;  ''',
        description='''
            批量查询镜像的实例规格限制。<br>; 通过此接口可以查看镜像不支持的实例规格。只有官方镜像、第三方镜像有实例规格的限制，个人的私有镜像没有此限制。; 。

            示例: jdc vm describe-image-constraints-batch 
        ''',
    )
    def describe_image_constraints_batch(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DescribeImageConstraintsBatchRequest import DescribeImageConstraintsBatchRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeImageConstraintsBatchRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--image-id'], dict(help="""(string) 镜像ID """, dest='imageId',  required=True)),
            (['--pins'], dict(help="""(array: string) 需要共享的帐户 """, dest='pins',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 共享镜像，只允许操作您的个人私有镜像，单个镜像最多可共享给20个京东云帐户。<br>; 整机镜像目前不支持共享。;  ''',
        description='''
            共享镜像，只允许操作您的个人私有镜像，单个镜像最多可共享给20个京东云帐户。<br>; 整机镜像目前不支持共享。; 。

            示例: jdc vm share-image  --image-id xxx
        ''',
    )
    def share_image(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.ShareImageRequest import ShareImageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ShareImageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--image-id'], dict(help="""(string) 镜像ID """, dest='imageId',  required=True)),
            (['--pins'], dict(help="""(array: string) 需要取消的帐户 """, dest='pins',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 取消共享镜像，只允许操作您的个人私有镜像。;  ''',
        description='''
            取消共享镜像，只允许操作您的个人私有镜像。; 。

            示例: jdc vm un-share-image  --image-id xxx
        ''',
    )
    def un_share_image(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.UnShareImageRequest import UnShareImageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = UnShareImageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--image-id'], dict(help="""(string) 镜像ID """, dest='imageId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 发布社区镜像，只允许操作您的个人私有镜像。发布为社区镜像后会撤销共享关系。<br>;  ''',
        description='''
            发布社区镜像，只允许操作您的个人私有镜像。发布为社区镜像后会撤销共享关系。<br>; 。

            示例: jdc vm release-image  --image-id xxx
        ''',
    )
    def release_image(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.ReleaseImageRequest import ReleaseImageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ReleaseImageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--image-id'], dict(help="""(string) 镜像ID """, dest='imageId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 撤销社区镜像，只允许操作您的个人私有镜像。;  ''',
        description='''
            撤销社区镜像，只允许操作您的个人私有镜像。; 。

            示例: jdc vm un-release-image  --image-id xxx
        ''',
    )
    def un_release_image(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.UnReleaseImageRequest import UnReleaseImageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = UnReleaseImageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--image-id'], dict(help="""(string) 镜像ID """, dest='imageId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询镜像共享帐户列表，只允许操作您的个人私有镜像。;  ''',
        description='''
            查询镜像共享帐户列表，只允许操作您的个人私有镜像。; 。

            示例: jdc vm describe-image-members  --image-id xxx
        ''',
    )
    def describe_image_members(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DescribeImageMembersRequest import DescribeImageMembersRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeImageMembersRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--source-image-ids'], dict(help="""(array: string) 源镜像ID """, dest='sourceImageIds',  required=False)),
            (['--destination-region'], dict(help="""(string) 目标区域 """, dest='destinationRegion',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 镜像跨区复制，将私有镜像复制到其它地域下，只允许操作您的个人私有镜像。<br>; 只支持rootDeviceType为cloudDisk的云硬盘系统盘镜像操作。;  ''',
        description='''
            镜像跨区复制，将私有镜像复制到其它地域下，只允许操作您的个人私有镜像。<br>; 只支持rootDeviceType为cloudDisk的云硬盘系统盘镜像操作。; 。

            示例: jdc vm copy-images  --destination-region xxx
        ''',
    )
    def copy_images(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.CopyImagesRequest import CopyImagesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CopyImagesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--image-id'], dict(help="""(string) 镜像ID """, dest='imageId',  required=True)),
            (['--name'], dict(help="""(string) 名称，<a href="http://docs.jdcloud.com/virtual-machines/api/general_parameters">参考公共参数规范</a>。 """, dest='name',  required=False)),
            (['--description'], dict(help="""(string) 描述，<a href="http://docs.jdcloud.com/virtual-machines/api/general_parameters">参考公共参数规范</a>。 """, dest='description',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改镜像信息，包括名称、描述；只允许操作您的个人私有镜像。;  ''',
        description='''
            修改镜像信息，包括名称、描述；只允许操作您的个人私有镜像。; 。

            示例: jdc vm modify-image-attribute  --image-id xxx
        ''',
    )
    def modify_image_attribute(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.ModifyImageAttributeRequest import ModifyImageAttributeRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyImageAttributeRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--architecture'], dict(help="""(string) 系统架构，可选值：x86_64,i386 """, dest='architecture',  required=True)),
            (['--os-type'], dict(help="""(string) 操作系统，可选值：windows,linux """, dest='osType',  required=True)),
            (['--platform'], dict(help="""(string) 平台名称，可选值：CentOS,Ubuntu,Windows Server,Other Linux,Other Windows """, dest='platform',  required=True)),
            (['--disk-format'], dict(help="""(string) 磁盘格式，可选值：qcow2,vhd,vmdk,raw """, dest='diskFormat',  required=True)),
            (['--system-disk-size-gb'], dict(help="""(int) 以此镜像需要制作的系统盘的默认大小，单位GB。最小值40，最大值500，要求值是10的整数倍 """, dest='systemDiskSizeGB', type=int, required=True)),
            (['--image-url'], dict(help="""(string) 要导入镜像的对象存储外链地址 """, dest='imageUrl',  required=True)),
            (['--os-version'], dict(help="""(string) 镜像的操作系统版本 """, dest='osVersion',  required=False)),
            (['--image-name'], dict(help="""(string) 导入镜像的自定义名称 """, dest='imageName',  required=True)),
            (['--description'], dict(help="""(string) 导入镜像的描述信息 """, dest='description',  required=False)),
            (['--force-import'], dict(help="""(bool) 是否强制导入。强制导入则忽略镜像的合规性检测 """, dest='forceImport',  required=False)),
            (['--client-token'], dict(help="""(string) 用户导入镜像的幂等性保证。每次创建请传入不同的值，如果传值与某次的clientToken相同，则返还该次的请求结果 """, dest='clientToken',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 导入镜像，将外部镜像导入到京东云中;  ''',
        description='''
            导入镜像，将外部镜像导入到京东云中; 。

            示例: jdc vm import-image  --architecture xxx --os-type xxx --platform xxx --disk-format xxx --system-disk-size-gb 0 --image-url xxx --image-name xxx
        ''',
    )
    def import_image(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.ImportImageRequest import ImportImageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ImportImageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--image-id'], dict(help="""(string) 镜像ID """, dest='imageId',  required=True)),
            (['--role-name'], dict(help="""(string) 用户创建的服务角色名称 """, dest='roleName',  required=True)),
            (['--oss-url'], dict(help="""(string) 存储导出镜像文件的oss bucket的域名，请填写以 https:// 开头的完整url """, dest='ossUrl',  required=True)),
            (['--oss-prefix'], dict(help="""(string) 导出镜像文件名前缀，仅支持英文字母和数字，不能超过32个字符 """, dest='ossPrefix',  required=False)),
            (['--client-token'], dict(help="""(string) 用户导出镜像的幂等性保证。每次导出请传入不同的值，如果传值与某次的clientToken相同，则返还同一个请求结果，不能超过64个字符 """, dest='clientToken',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 导出镜像，将京东云私有镜像导出至京东云以外环境;  ''',
        description='''
            导出镜像，将京东云私有镜像导出至京东云以外环境; 。

            示例: jdc vm export-image  --image-id xxx --role-name xxx --oss-url xxx
        ''',
    )
    def export_image(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.ExportImageRequest import ExportImageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ExportImageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--task-action'], dict(help="""(string) 任务种类。可选值：ImportImage， ExportImage """, dest='taskAction',  required=True)),
            (['--task-ids'], dict(help="""(array: int) 任务id """, dest='taskIds', type=int, required=False)),
            (['--task-status'], dict(help="""(string) 任务状态。可选值：pending,running,failed,finished """, dest='taskStatus',  required=False)),
            (['--start-time'], dict(help="""(string) 任务开始时间 """, dest='startTime',  required=False)),
            (['--end-time'], dict(help="""(string) 任务结束时间 """, dest='endTime',  required=False)),
            (['--page-number'], dict(help="""(int) 页码；默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小；默认为20；取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询镜像导入导出任务详情;  ''',
        description='''
            查询镜像导入导出任务详情; 。

            示例: jdc vm image-tasks  --task-action xxx
        ''',
    )
    def image_tasks(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.ImageTasksRequest import ImageTasksRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ImageTasksRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码；默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小；默认为20；取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--filters'], dict(help="""(array: filter) instanceId - 云主机ID，精确匹配，支持多个; privateIpAddress - 主网卡内网主IP地址，模糊匹配，支持多个; az - 可用区，精确匹配，支持多个; vpcId - 私有网络ID，精确匹配，支持多个; status - 云主机状态，精确匹配，支持多个，<a href="http://docs.jdcloud.com/virtual-machines/api/vm_status">参考云主机状态</a>; name - 云主机名称，模糊匹配，支持单个; imageId - 镜像ID，精确匹配，支持多个; networkInterfaceId - 弹性网卡ID，精确匹配，支持多个; subnetId - 子网ID，精确匹配，支持多个; agId - 使用可用组id，支持单个; faultDomain - 错误域，支持多个; dedicatedHostId - 专有宿主机ID，精确匹配，支持多个; dedicatedPoolId - 专有宿主机池ID，精确匹配，支持多个; instanceType - 实例规格，精确匹配，支持多个; elasticIpAddress - 公网IP地址，精确匹配，支持单个;  """, dest='filters',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 批量查询云主机的详细信息<br>; 此接口支持分页查询，默认每页20条。;  ''',
        description='''
            批量查询云主机的详细信息<br>; 此接口支持分页查询，默认每页20条。; 。

            示例: jdc vm describe-instances 
        ''',
    )
    def describe_instances(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DescribeInstancesRequest import DescribeInstancesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeInstancesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-spec'], dict(help="""(instanceSpec) 描述云主机配置;  """, dest='instanceSpec',  required=True)),
            (['--max-count'], dict(help="""(int) 购买云主机的数量；取值范围：[1,100]，默认为1。;  """, dest='maxCount', type=int, required=False)),
            (['--client-token'], dict(help="""(string) 用于保证请求的幂等性。由客户端生成，长度不能超过64个字符。;  """, dest='clientToken',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 创建一台或多台指定配置的云主机，创建模式分为三种：1.普通方式、2.使用高可用组、3.使用启动模板。三种方式创建云主机时参数的必传与非必传是不同的，具体请参考<a href="http://docs.jdcloud.com/virtual-machines/api/create_vm_sample">参数详细说明</a><br>; - 创建云主机需要通过实名认证; - 实例规格;     - 可查询<a href="http://docs.jdcloud.com/virtual-machines/api/describeinstancetypes">DescribeInstanceTypes</a>接口获得指定地域或可用区的规格信息。;     - 不能使用已下线、或已售馨的规格ID; - 镜像;     - Windows Server所有镜像CPU不可选超过64核CPU。;     - 可查询<a href="http://docs.jdcloud.com/virtual-machines/api/describeimages">DescribeImages</a>接口获得指定地域的镜像信息。;     - 选择的镜像必须支持选择的实例规格。可查询<a href="http://docs.jdcloud.com/virtual-machines/api/describeimageconstraints">DescribeImageConstraints</a>接口获得指定镜像的实例规格限制信息。<br>; - 网络配置;     - 指定主网卡配置信息;         - 必须指定subnetId;         - 可以指定elasticIp规格来约束创建的弹性IP，带宽取值范围[1-200]Mbps，步进1Mbps;         - 可以指定主网卡的内网主IP(primaryIpAddress)，此时maxCount只能为1;         - 安全组securityGroup需与子网Subnet在同一个私有网络VPC内;         - 一台云主机创建时必须至少指定一个安全组，至多指定5个安全组，如果没有指定安全组，默认使用默认安全组;         - 主网卡deviceIndex设置为1; - 存储;     - 系统盘;         - 磁盘分类，系统盘支持local或cloud;         - 磁盘大小;             - local：不能指定大小，默认为40GB;             - cloud：取值范围: 40-500GB，并且不能小于镜像的最小系统盘大小，如果没有指定，默认以镜像中的系统盘大小为准;         - 自动删除;             - 如果是local类型，默认自动删除，不可修改;             - 如果是cloud类型的按配置计费的云硬盘，默认为True，可修改;             - 如果是cloud类型的包年包月的云硬盘，默认为False，不可修改;     - 数据盘;         - 磁盘分类，数据盘仅支持cloud;         - 云硬盘类型可以选择ssd、premium-hdd、hdd.std1、ssd.gp1、ssd.io1;         - 磁盘大小;             - premium-hdd：范围[20,3000]GB，步长为10G;             - ssd：范围[20,1000]GB，步长为10G;             - hdd.std1、ssd.gp1、ssd.io1: 范围[20-16000]GB，步长为10GB;         - 自动删除;             - 默认自动删除，如果是包年包月的云硬盘，此参数不生效;         - 可以从快照创建磁盘;     - iops;         - 仅当云盘类型为ssd.io1时，可指定iops值，范围为【200， min（32000，size * 50 ）】，步长为10，若不指定则按此公式计算默认值;     - local类型系统的云主机可以挂载8块云硬盘;     - cloud类型系统的云主机可以挂载7块云硬盘; - 计费;     - 弹性IP的计费模式，如果选择按用量类型可以单独设置，其它计费模式都以主机为准;     - 云硬盘的计费模式以主机为准; - 其他;     - 创建完成后，主机状态为running;     - 仅Linux系统云主机可以指定密钥;     - maxCount为最大努力，不保证一定能达到maxCount;     - 虚机的az会覆盖磁盘的az属性; - 密码;     - <a href="http://docs.jdcloud.com/virtual-machines/api/general_parameters">参考公共参数规范</a>;  ''',
        description='''
            创建一台或多台指定配置的云主机，创建模式分为三种：1.普通方式、2.使用高可用组、3.使用启动模板。三种方式创建云主机时参数的必传与非必传是不同的，具体请参考<a href="http://docs.jdcloud.com/virtual-machines/api/create_vm_sample">参数详细说明</a><br>; - 创建云主机需要通过实名认证; - 实例规格;     - 可查询<a href="http://docs.jdcloud.com/virtual-machines/api/describeinstancetypes">DescribeInstanceTypes</a>接口获得指定地域或可用区的规格信息。;     - 不能使用已下线、或已售馨的规格ID; - 镜像;     - Windows Server所有镜像CPU不可选超过64核CPU。;     - 可查询<a href="http://docs.jdcloud.com/virtual-machines/api/describeimages">DescribeImages</a>接口获得指定地域的镜像信息。;     - 选择的镜像必须支持选择的实例规格。可查询<a href="http://docs.jdcloud.com/virtual-machines/api/describeimageconstraints">DescribeImageConstraints</a>接口获得指定镜像的实例规格限制信息。<br>; - 网络配置;     - 指定主网卡配置信息;         - 必须指定subnetId;         - 可以指定elasticIp规格来约束创建的弹性IP，带宽取值范围[1-200]Mbps，步进1Mbps;         - 可以指定主网卡的内网主IP(primaryIpAddress)，此时maxCount只能为1;         - 安全组securityGroup需与子网Subnet在同一个私有网络VPC内;         - 一台云主机创建时必须至少指定一个安全组，至多指定5个安全组，如果没有指定安全组，默认使用默认安全组;         - 主网卡deviceIndex设置为1; - 存储;     - 系统盘;         - 磁盘分类，系统盘支持local或cloud;         - 磁盘大小;             - local：不能指定大小，默认为40GB;             - cloud：取值范围: 40-500GB，并且不能小于镜像的最小系统盘大小，如果没有指定，默认以镜像中的系统盘大小为准;         - 自动删除;             - 如果是local类型，默认自动删除，不可修改;             - 如果是cloud类型的按配置计费的云硬盘，默认为True，可修改;             - 如果是cloud类型的包年包月的云硬盘，默认为False，不可修改;     - 数据盘;         - 磁盘分类，数据盘仅支持cloud;         - 云硬盘类型可以选择ssd、premium-hdd、hdd.std1、ssd.gp1、ssd.io1;         - 磁盘大小;             - premium-hdd：范围[20,3000]GB，步长为10G;             - ssd：范围[20,1000]GB，步长为10G;             - hdd.std1、ssd.gp1、ssd.io1: 范围[20-16000]GB，步长为10GB;         - 自动删除;             - 默认自动删除，如果是包年包月的云硬盘，此参数不生效;         - 可以从快照创建磁盘;     - iops;         - 仅当云盘类型为ssd.io1时，可指定iops值，范围为【200， min（32000，size * 50 ）】，步长为10，若不指定则按此公式计算默认值;     - local类型系统的云主机可以挂载8块云硬盘;     - cloud类型系统的云主机可以挂载7块云硬盘; - 计费;     - 弹性IP的计费模式，如果选择按用量类型可以单独设置，其它计费模式都以主机为准;     - 云硬盘的计费模式以主机为准; - 其他;     - 创建完成后，主机状态为running;     - 仅Linux系统云主机可以指定密钥;     - maxCount为最大努力，不保证一定能达到maxCount;     - 虚机的az会覆盖磁盘的az属性; - 密码;     - <a href="http://docs.jdcloud.com/virtual-machines/api/general_parameters">参考公共参数规范</a>; 。

            示例: jdc vm create-instances  --instance-spec '{"":""}'
        ''',
    )
    def create_instances(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.CreateInstancesRequest import CreateInstancesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateInstancesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码；默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小；默认为20；取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--tags'], dict(help="""(array: tagFilter) Tag筛选条件 """, dest='tags',  required=False)),
            (['--filters'], dict(help="""(array: filter) instanceId - 云主机ID，精确匹配，支持多个; privateIpAddress - 主网卡内网主IP地址，模糊匹配，支持多个; az - 可用区，精确匹配，支持多个; vpcId - 私有网络ID，精确匹配，支持多个; status - 云主机状态，精确匹配，支持多个，<a href="http://docs.jdcloud.com/virtual-machines/api/vm_status">参考云主机状态</a>; name - 云主机名称，模糊匹配，支持单个; imageId - 镜像ID，精确匹配，支持多个; networkInterfaceId - 弹性网卡ID，精确匹配，支持多个; subnetId - 子网ID，精确匹配，支持多个; agId - 使用可用组id，支持单个; faultDomain - 错误域，支持多个; dedicatedHostId - 专有宿主机ID，精确匹配，支持多个; dedicatedPoolId - 专有宿主机池ID，精确匹配，支持多个; instanceType - 实例规格，精确匹配，支持多个; elasticIpAddress - 公网IP地址，精确匹配，支持单个;  """, dest='filters',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 批量查询云主机信息的轻量接口，不返回云盘、网络、计费、标签等信息。如果不需要关联资源属性，尽量选择使用该接口。<br>; 此接口支持分页查询，默认每页20条。;  ''',
        description='''
            批量查询云主机信息的轻量接口，不返回云盘、网络、计费、标签等信息。如果不需要关联资源属性，尽量选择使用该接口。<br>; 此接口支持分页查询，默认每页20条。; 。

            示例: jdc vm describe-brief-instances 
        ''',
    )
    def describe_brief_instances(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DescribeBriefInstancesRequest import DescribeBriefInstancesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeBriefInstancesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询一台云主机的详细信息;  ''',
        description='''
            查询一台云主机的详细信息; 。

            示例: jdc vm describe-instance  --instance-id xxx
        ''',
    )
    def describe_instance(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DescribeInstanceRequest import DescribeInstanceRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeInstanceRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除按配置计费、或包年包月已到期的单个云主机。不能删除没有计费信息的云主机。<br>; 云主机状态必须为运行<b>running</b>、停止<b>stopped</b>、错误<b>error</b>，同时云主机没有正在进行中的任务才可删除。<br>; 如果主机中挂载的数据盘为按配置计费的云硬盘且AutoDelete属性为true，那么数据盘会随主机一起删除。;  [MFA enabled] ''',
        description='''
            删除按配置计费、或包年包月已到期的单个云主机。不能删除没有计费信息的云主机。<br>; 云主机状态必须为运行<b>running</b>、停止<b>stopped</b>、错误<b>error</b>，同时云主机没有正在进行中的任务才可删除。<br>; 如果主机中挂载的数据盘为按配置计费的云硬盘且AutoDelete属性为true，那么数据盘会随主机一起删除。;  [MFA enabled]。

            示例: jdc vm delete-instance  --instance-id xxx
        ''',
    )
    def delete_instance(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DeleteInstanceRequest import DeleteInstanceRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteInstanceRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码；默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小；默认为20；取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--filters'], dict(help="""(array: filter) instanceId - 云主机ID，精确匹配，支持多个; privateIpAddress - 主网卡内网主IP地址，模糊匹配，支持多个; vpcId - 私有网络ID，精确匹配，支持多个; status - 云主机状态，精确匹配，支持多个，<a href="http://docs.jdcloud.com/virtual-machines/api/vm_status">参考云主机状态</a>; name - 云主机名称，模糊匹配，支持单个; imageId - 镜像ID，精确匹配，支持多个; networkInterfaceId - 弹性网卡ID，精确匹配，支持多个; subnetId - 子网ID，精确匹配，支持多个;  """, dest='filters',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 批量查询云主机状态 ''',
        description='''
            批量查询云主机状态。

            示例: jdc vm describe-instance-status 
        ''',
    )
    def describe_instance_status(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DescribeInstanceStatusRequest import DescribeInstanceStatusRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeInstanceStatusRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码；默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小；默认为20；取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--filters'], dict(help="""(array: filter) instanceId - 云主机ID，精确匹配，支持多个; privateIpAddress - 主网卡内网主IP地址，模糊匹配，支持多个; vpcId - 私有网络ID，精确匹配，支持多个; status - 云主机状态，精确匹配，支持多个，<a href="http://docs.jdcloud.com/virtual-machines/api/vm_status">参考云主机状态</a>; name - 云主机名称，模糊匹配，支持单个; imageId - 镜像ID，精确匹配，支持多个; networkInterfaceId - 弹性网卡ID，精确匹配，支持多个; subnetId - 子网ID，精确匹配，支持多个; chargeOnStopped - 停机不计费标志，keepCharging、stopCharging 或者 notApplicable;  """, dest='filters',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 批量查询云主机内网IP地址，查询的是主网卡内网主IP地址。 ''',
        description='''
            批量查询云主机内网IP地址，查询的是主网卡内网主IP地址。。

            示例: jdc vm describe-instance-private-ip-address 
        ''',
    )
    def describe_instance_private_ip_address(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DescribeInstancePrivateIpAddressRequest import DescribeInstancePrivateIpAddressRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeInstancePrivateIpAddressRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--charge-on-stopped'], dict(help="""(string) 关机模式，只支持云盘做系统盘的按配置计费云主机keepCharging：关机后继续计费；stopCharging：关机后停止计费。 """, dest='chargeOnStopped',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 停止单个云主机，只能停止<b>running</b>状态的云主机，云主机没有正在进行中的任务才可停止;  ''',
        description='''
            停止单个云主机，只能停止<b>running</b>状态的云主机，云主机没有正在进行中的任务才可停止; 。

            示例: jdc vm stop-instance  --instance-id xxx
        ''',
    )
    def stop_instance(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.StopInstanceRequest import StopInstanceRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = StopInstanceRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 启动单个云主机，只能启动<b>stopped</b>状态的云主机，云主机没有正在进行中的任务才可启动。<br>; 只能启动正常计费状态的云主机，若已欠费停服或到期停服则不支持启动。;  ''',
        description='''
            启动单个云主机，只能启动<b>stopped</b>状态的云主机，云主机没有正在进行中的任务才可启动。<br>; 只能启动正常计费状态的云主机，若已欠费停服或到期停服则不支持启动。; 。

            示例: jdc vm start-instance  --instance-id xxx
        ''',
    )
    def start_instance(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.StartInstanceRequest import StartInstanceRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = StartInstanceRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 重启单个云主机，只能重启<b>running</b>状态的云主机，云主机没有正在进行中的任务才可重启。;  ''',
        description='''
            重启单个云主机，只能重启<b>running</b>状态的云主机，云主机没有正在进行中的任务才可重启。; 。

            示例: jdc vm reboot-instance  --instance-id xxx
        ''',
    )
    def reboot_instance(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.RebootInstanceRequest import RebootInstanceRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = RebootInstanceRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--network-interface-id'], dict(help="""(string) 弹性网卡ID """, dest='networkInterfaceId',  required=True)),
            (['--auto-delete'], dict(help="""(bool) 随云主机删除而自动删除，默认为False """, dest='autoDelete',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 云主机绑定一块弹性网卡。<br>; 云主机状态必须为<b>running</b>或<b>stopped</b>状态，并且没有正在进行中的任务才可操作。<br>; 弹性网卡上如果绑定了弹性公网IP，那么其所在az需要与云主机的az保持一致，或者为全可用区型弹性公网IP，才可挂载该网卡。<br>; 云主机挂载弹性网卡的数量，不能超过实例规格的限制。可查询<a href="http://docs.jdcloud.com/virtual-machines/api/describeinstancetypes">DescribeInstanceTypes</a>接口获得指定规格可挂载弹性网卡的数量上限。<br>; 弹性网卡与云主机必须在相同vpc下。;  ''',
        description='''
            云主机绑定一块弹性网卡。<br>; 云主机状态必须为<b>running</b>或<b>stopped</b>状态，并且没有正在进行中的任务才可操作。<br>; 弹性网卡上如果绑定了弹性公网IP，那么其所在az需要与云主机的az保持一致，或者为全可用区型弹性公网IP，才可挂载该网卡。<br>; 云主机挂载弹性网卡的数量，不能超过实例规格的限制。可查询<a href="http://docs.jdcloud.com/virtual-machines/api/describeinstancetypes">DescribeInstanceTypes</a>接口获得指定规格可挂载弹性网卡的数量上限。<br>; 弹性网卡与云主机必须在相同vpc下。; 。

            示例: jdc vm attach-network-interface  --instance-id xxx --network-interface-id xxx
        ''',
    )
    def attach_network_interface(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.AttachNetworkInterfaceRequest import AttachNetworkInterfaceRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = AttachNetworkInterfaceRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--network-interface-id'], dict(help="""(string) 弹性网卡ID """, dest='networkInterfaceId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 云主机缷载一块弹性网卡。<br>; 云主机状态必须为<b>running</b>或<b>stopped</b>状态，并且没有正在进行中的任务才可操作。<br>; 不能缷载主网卡。;  ''',
        description='''
            云主机缷载一块弹性网卡。<br>; 云主机状态必须为<b>running</b>或<b>stopped</b>状态，并且没有正在进行中的任务才可操作。<br>; 不能缷载主网卡。; 。

            示例: jdc vm detach-network-interface  --instance-id xxx --network-interface-id xxx
        ''',
    )
    def detach_network_interface(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DetachNetworkInterfaceRequest import DetachNetworkInterfaceRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DetachNetworkInterfaceRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--networks'], dict(help="""(array: instanceNetworkAttribute) 弹性网卡列表 """, dest='networks',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改虚机弹性网卡属性，包括是否随云主机一起删除。<br>; 不能修改主网卡。;  ''',
        description='''
            修改虚机弹性网卡属性，包括是否随云主机一起删除。<br>; 不能修改主网卡。; 。

            示例: jdc vm modify-instance-network-attribute  --instance-id xxx
        ''',
    )
    def modify_instance_network_attribute(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.ModifyInstanceNetworkAttributeRequest import ModifyInstanceNetworkAttributeRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyInstanceNetworkAttributeRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--elastic-ip-id'], dict(help="""(string) 弹性公网IP的ID """, dest='elasticIpId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 为云主机主网卡的主内网IP绑定弹性公网IP。<br>; 一台云主机的主网卡的主内网IP只能绑定一个弹性公网IP，若已绑定弹性公网IP，操作绑定会返回错误。<br>;  ''',
        description='''
            为云主机主网卡的主内网IP绑定弹性公网IP。<br>; 一台云主机的主网卡的主内网IP只能绑定一个弹性公网IP，若已绑定弹性公网IP，操作绑定会返回错误。<br>; 。

            示例: jdc vm associate-elastic-ip  --instance-id xxx --elastic-ip-id xxx
        ''',
    )
    def associate_elastic_ip(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.AssociateElasticIpRequest import AssociateElasticIpRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = AssociateElasticIpRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--elastic-ip-id'], dict(help="""(string) 弹性公网IP的ID """, dest='elasticIpId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 云主机解绑弹性公网IP，解绑的是主网卡、内网主IP对应的弹性公网IP。;  ''',
        description='''
            云主机解绑弹性公网IP，解绑的是主网卡、内网主IP对应的弹性公网IP。; 。

            示例: jdc vm disassociate-elastic-ip  --instance-id xxx --elastic-ip-id xxx
        ''',
    )
    def disassociate_elastic_ip(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DisassociateElasticIpRequest import DisassociateElasticIpRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisassociateElasticIpRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--name'], dict(help="""(string) 镜像名称，<a href="http://docs.jdcloud.com/virtual-machines/api/general_parameters">参考公共参数规范</a>。 """, dest='name',  required=True)),
            (['--description'], dict(help="""(string) 镜像描述，<a href="http://docs.jdcloud.com/virtual-machines/api/general_parameters">参考公共参数规范</a>。 """, dest='description',  required=False)),
            (['--data-disks'], dict(help="""(array: instanceDiskAttachmentSpec) 数据盘列表，可以在实例已挂载数据盘的基础上，额外增加新的快照、空盘、或排除云主机中的数据盘。 """, dest='dataDisks',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 为云主机创建私有镜像。云主机状态必须为<b>stopped</b>。<br>; 云主机没有正在进行中的任务才可制作镜像。<br>; 制作镜像以备份系统盘为基础，在此之上可选择全部或部分挂载数据盘制作整机镜像（如不做任何更改将默认制作整机镜像），制作镜像过程会为所挂载云硬盘创建快照并与镜像关联。<br>; 调用接口后，需要等待镜像状态变为<b>ready</b>后，才能正常使用镜像。;  ''',
        description='''
            为云主机创建私有镜像。云主机状态必须为<b>stopped</b>。<br>; 云主机没有正在进行中的任务才可制作镜像。<br>; 制作镜像以备份系统盘为基础，在此之上可选择全部或部分挂载数据盘制作整机镜像（如不做任何更改将默认制作整机镜像），制作镜像过程会为所挂载云硬盘创建快照并与镜像关联。<br>; 调用接口后，需要等待镜像状态变为<b>ready</b>后，才能正常使用镜像。; 。

            示例: jdc vm create-image  --instance-id xxx --name xxx
        ''',
    )
    def create_image(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.CreateImageRequest import CreateImageRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateImageRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--disk-id'], dict(help="""(string) 云硬盘ID """, dest='diskId',  required=True)),
            (['--device-name'], dict(help="""(string) 设备名[vda,vdb,vdc,vdd,vde,vdf,vdg,vdh,vdi,vmj,vdk,vdl,vdm]，挂载系统盘时必传，且需传vda """, dest='deviceName',  required=False)),
            (['--auto-delete'], dict(help="""(bool) 随云主机删除自动删除此云硬盘，默认为False。仅按配置计费云硬盘支持修改此参数，包年包月云硬盘不可修改。 """, dest='autoDelete',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 为一台云主机挂载一块云硬盘，云主机和云硬盘没有正在进行中的的任务时才可挂载。<br>; 云主机状态必须是<b>running</b>或<b>stopped</b>状态。<br>; 本地盘(local类型)做系统盘的云主机可挂载8块云硬盘，云硬盘(cloud类型)做系统盘的云主机可挂载除系统盘外7块云硬盘。;  ''',
        description='''
            为一台云主机挂载一块云硬盘，云主机和云硬盘没有正在进行中的的任务时才可挂载。<br>; 云主机状态必须是<b>running</b>或<b>stopped</b>状态。<br>; 本地盘(local类型)做系统盘的云主机可挂载8块云硬盘，云硬盘(cloud类型)做系统盘的云主机可挂载除系统盘外7块云硬盘。; 。

            示例: jdc vm attach-disk  --instance-id xxx --disk-id xxx
        ''',
    )
    def attach_disk(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.AttachDiskRequest import AttachDiskRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = AttachDiskRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--disk-id'], dict(help="""(string) 云硬盘ID """, dest='diskId',  required=True)),
            (['--force'], dict(help="""(bool) 强制缷载，默认False。如果此参数传值为True，代表数据盘的IO会被强制断掉。 """, dest='force',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 云主机缷载云硬盘，云主机和云硬盘没有正在进行中的任务时才可缷载。<br>;  ''',
        description='''
            云主机缷载云硬盘，云主机和云硬盘没有正在进行中的任务时才可缷载。<br>; 。

            示例: jdc vm detach-disk  --instance-id xxx --disk-id xxx
        ''',
    )
    def detach_disk(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DetachDiskRequest import DetachDiskRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DetachDiskRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--data-disks'], dict(help="""(array: instanceDiskAttribute) 云硬盘列表 """, dest='dataDisks',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改云主机挂载的数据盘属性，包括是否随主机删除。<br>; 仅按配置计费云硬盘支持设置随实例删除属性;包年包月计费云硬盘该属性不生效,实例删除时云硬盘将保留。<br>;  ''',
        description='''
            修改云主机挂载的数据盘属性，包括是否随主机删除。<br>; 仅按配置计费云硬盘支持设置随实例删除属性;包年包月计费云硬盘该属性不生效,实例删除时云硬盘将保留。<br>; 。

            示例: jdc vm modify-instance-disk-attribute  --instance-id xxx
        ''',
    )
    def modify_instance_disk_attribute(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.ModifyInstanceDiskAttributeRequest import ModifyInstanceDiskAttributeRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyInstanceDiskAttributeRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--name'], dict(help="""(string) 名称，<a href="http://docs.jdcloud.com/virtual-machines/api/general_parameters">参考公共参数规范</a>。 """, dest='name',  required=False)),
            (['--description'], dict(help="""(string) 描述，<a href="http://docs.jdcloud.com/virtual-machines/api/general_parameters">参考公共参数规范</a>。 """, dest='description',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改云主机部分信息，包括名称、描述。;  ''',
        description='''
            修改云主机部分信息，包括名称、描述。; 。

            示例: jdc vm modify-instance-attribute  --instance-id xxx
        ''',
    )
    def modify_instance_attribute(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.ModifyInstanceAttributeRequest import ModifyInstanceAttributeRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyInstanceAttributeRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--password'], dict(help="""(string) 密码，<a href="http://docs.jdcloud.com/virtual-machines/api/general_parameters">参考公共参数规范</a>。 """, dest='password',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改云主机密码，主机没有正在进行中的任务时才可操作。<br>; 修改密码后，需要重启云主机后生效。;  ''',
        description='''
            修改云主机密码，主机没有正在进行中的任务时才可操作。<br>; 修改密码后，需要重启云主机后生效。; 。

            示例: jdc vm modify-instance-password  --instance-id xxx --password xxx
        ''',
    )
    def modify_instance_password(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.ModifyInstancePasswordRequest import ModifyInstancePasswordRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModifyInstancePasswordRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 获取云主机vnc，用于连接管理云主机。<br>; vnc地址的有效期为1个小时，调用接口获取vnc地址后如果1个小时内没有使用，vnc地址自动失效，再次使用需要重新获取。;  ''',
        description='''
            获取云主机vnc，用于连接管理云主机。<br>; vnc地址的有效期为1个小时，调用接口获取vnc地址后如果1个小时内没有使用，vnc地址自动失效，再次使用需要重新获取。; 。

            示例: jdc vm describe-instance-vnc-url  --instance-id xxx
        ''',
    )
    def describe_instance_vnc_url(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DescribeInstanceVncUrlRequest import DescribeInstanceVncUrlRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeInstanceVncUrlRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--instance-type'], dict(help="""(string) 实例规格，可查询<a href="http://docs.jdcloud.com/virtual-machines/api/describeinstancetypes">DescribeInstanceTypes</a>接口获得指定地域或可用区的规格信息。 """, dest='instanceType',  required=True)),
            (['--force'], dict(help="""(bool) 是否强制调配，默认为false；如果指定为true, 将会清除本地数据盘。 """, dest='force',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 云主机变更实例规格<br>; 云主机的状态必须为<b>stopped</b>状态。<br>; 以下情况的云主机，不允许在一代与二代实例规格间互相调整，例：不允许g.n1与g.n2之间互相调配<br>; 1、16年创建的云硬盘做系统盘的云主机<br>; 2、本地盘(local类型)做系统盘的云主机。<br>; 3、使用高可用组(Ag)创建的云主机。<br>; 如果当前主机中的弹性网卡数量，大于新实例规格允许的弹性网卡数量，会返回错误。可查询<a href="http://docs.jdcloud.com/virtual-machines/api/describeinstancetypes">DescribeInstanceTypes</a>接口获得指定地域及可用区下的实例规格信息。<br>; 当前主机所使用的镜像，需要支持要变更的目标实例规格，否则返回错误。可查询<a href="http://docs.jdcloud.com/virtual-machines/api/describeimageconstraints">DescribeImageConstraints</a>接口获得指定镜像的实例规格限制信息。<br>; 云主机欠费或到期时，无法更改实例规格。;  ''',
        description='''
            云主机变更实例规格<br>; 云主机的状态必须为<b>stopped</b>状态。<br>; 以下情况的云主机，不允许在一代与二代实例规格间互相调整，例：不允许g.n1与g.n2之间互相调配<br>; 1、16年创建的云硬盘做系统盘的云主机<br>; 2、本地盘(local类型)做系统盘的云主机。<br>; 3、使用高可用组(Ag)创建的云主机。<br>; 如果当前主机中的弹性网卡数量，大于新实例规格允许的弹性网卡数量，会返回错误。可查询<a href="http://docs.jdcloud.com/virtual-machines/api/describeinstancetypes">DescribeInstanceTypes</a>接口获得指定地域及可用区下的实例规格信息。<br>; 当前主机所使用的镜像，需要支持要变更的目标实例规格，否则返回错误。可查询<a href="http://docs.jdcloud.com/virtual-machines/api/describeimageconstraints">DescribeImageConstraints</a>接口获得指定镜像的实例规格限制信息。<br>; 云主机欠费或到期时，无法更改实例规格。; 。

            示例: jdc vm resize-instance  --instance-id xxx --instance-type xxx
        ''',
    )
    def resize_instance(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.ResizeInstanceRequest import ResizeInstanceRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ResizeInstanceRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-id'], dict(help="""(string) 云主机ID """, dest='instanceId',  required=True)),
            (['--password'], dict(help="""(string) 云主机密码，<a href="http://docs.jdcloud.com/virtual-machines/api/general_parameters">参考公共参数规范</a>。 """, dest='password',  required=True)),
            (['--image-id'], dict(help="""(string) 镜像ID。可查询<a href="http://docs.jdcloud.com/virtual-machines/api/describeimages">DescribeImages</a>接口获得指定地域的镜像信息。 """, dest='imageId',  required=False)),
            (['--key-names'], dict(help="""(array: string) 密钥对名称；当前只支持一个。仅Linux系统支持指定。 """, dest='keyNames',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 云主机使用指定镜像重置云主机系统<br>; 云主机的状态必须为<b>stopped</b>状态。<br>; 若不指定镜像ID，默认使用当前主机的原镜像重置系统。<br>; 云主机系统盘类型必须与待更换镜像支持的系统盘类型保持一致，若当前云主机系统盘为local类型，则更换镜像的系统盘类型必须为loaclDisk类型；同理，若当前云主机系统盘为cloud类型，则更换镜像的系统盘类型必须为cloudDisk类型。可查询<a href="http://docs.jdcloud.com/virtual-machines/api/describeimages">DescribeImages</a>接口获得指定地域的镜像信息。<br>; 指定的镜像必须能够支持当前主机的实例规格(instanceType)，否则会返回错误。可查询<a href="http://docs.jdcloud.com/virtual-machines/api/describeimageconstraints">DescribeImageConstraints</a>接口获得指定镜像支持的系统盘类型信息。;  ''',
        description='''
            云主机使用指定镜像重置云主机系统<br>; 云主机的状态必须为<b>stopped</b>状态。<br>; 若不指定镜像ID，默认使用当前主机的原镜像重置系统。<br>; 云主机系统盘类型必须与待更换镜像支持的系统盘类型保持一致，若当前云主机系统盘为local类型，则更换镜像的系统盘类型必须为loaclDisk类型；同理，若当前云主机系统盘为cloud类型，则更换镜像的系统盘类型必须为cloudDisk类型。可查询<a href="http://docs.jdcloud.com/virtual-machines/api/describeimages">DescribeImages</a>接口获得指定地域的镜像信息。<br>; 指定的镜像必须能够支持当前主机的实例规格(instanceType)，否则会返回错误。可查询<a href="http://docs.jdcloud.com/virtual-machines/api/describeimageconstraints">DescribeImageConstraints</a>接口获得指定镜像支持的系统盘类型信息。; 。

            示例: jdc vm rebuild-instance  --instance-id xxx --password xxx
        ''',
    )
    def rebuild_instance(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.RebuildInstanceRequest import RebuildInstanceRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = RebuildInstanceRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码；默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小；默认为20；取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--filters'], dict(help="""(array: filter) name - 启动模板名称，模糊匹配，支持多个; instanceTemplateId - 启动模板ID，精确匹配，支持多个;  """, dest='filters',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询启动模板列表;  ''',
        description='''
            查询启动模板列表; 。

            示例: jdc vm describe-instance-templates 
        ''',
    )
    def describe_instance_templates(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DescribeInstanceTemplatesRequest import DescribeInstanceTemplatesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeInstanceTemplatesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-template-data'], dict(help="""(instanceTemplateSpec) 启动模板的数据 """, dest='instanceTemplateData',  required=True)),
            (['--name'], dict(help="""(string) 启动模板的名称，<a href="http://docs.jdcloud.com/virtual-machines/api/general_parameters">参考公共参数规范</a>。 """, dest='name',  required=True)),
            (['--description'], dict(help="""(string) 启动模板的描述，<a href="http://docs.jdcloud.com/virtual-machines/api/general_parameters">参考公共参数规范</a>。 """, dest='description',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 创建一个指定参数的启动模板，启动模板中包含创建云主机时的大部分配置参数，避免每次创建云主机时的重复性工作。<br>; 如果是使用启动模板创建云主机，如果指定了某些参数与模板中的参数相冲突，那么新指定的参数会替换模板中的参数。<br>; 如果是使用启动模板创建云主机，如果指定了镜像ID与模板中的镜像ID不一致，那么模板中的dataDisks参数会失效。<br>; 如果使用高可用组(Ag)创建云主机，那么Ag所关联的模板中的参数都不可以被调整，只能以模板为准。;  ''',
        description='''
            创建一个指定参数的启动模板，启动模板中包含创建云主机时的大部分配置参数，避免每次创建云主机时的重复性工作。<br>; 如果是使用启动模板创建云主机，如果指定了某些参数与模板中的参数相冲突，那么新指定的参数会替换模板中的参数。<br>; 如果是使用启动模板创建云主机，如果指定了镜像ID与模板中的镜像ID不一致，那么模板中的dataDisks参数会失效。<br>; 如果使用高可用组(Ag)创建云主机，那么Ag所关联的模板中的参数都不可以被调整，只能以模板为准。; 。

            示例: jdc vm create-instance-template  --instance-template-data '{"":""}' --name xxx
        ''',
    )
    def create_instance_template(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.CreateInstanceTemplateRequest import CreateInstanceTemplateRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateInstanceTemplateRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-template-id'], dict(help="""(string) 启动模板ID """, dest='instanceTemplateId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询启动模板详情;  ''',
        description='''
            查询启动模板详情; 。

            示例: jdc vm describe-instance-template  --instance-template-id xxx
        ''',
    )
    def describe_instance_template(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DescribeInstanceTemplateRequest import DescribeInstanceTemplateRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeInstanceTemplateRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-template-id'], dict(help="""(string) 启动模板ID """, dest='instanceTemplateId',  required=True)),
            (['--description'], dict(help="""(string) 模板描述，<a href="http://docs.jdcloud.com/virtual-machines/api/general_parameters">参考公共参数规范</a>。 """, dest='description',  required=False)),
            (['--name'], dict(help="""(string) 模板名称，<a href="http://docs.jdcloud.com/virtual-machines/api/general_parameters">参考公共参数规范</a>。 """, dest='name',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改一个启动模板的信息，包括名称、描述;  ''',
        description='''
            修改一个启动模板的信息，包括名称、描述; 。

            示例: jdc vm update-instance-template  --instance-template-id xxx
        ''',
    )
    def update_instance_template(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.UpdateInstanceTemplateRequest import UpdateInstanceTemplateRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = UpdateInstanceTemplateRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-template-id'], dict(help="""(string) 启动模板ID """, dest='instanceTemplateId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除一个启动模板;  ''',
        description='''
            删除一个启动模板; 。

            示例: jdc vm delete-instance-template  --instance-template-id xxx
        ''',
    )
    def delete_instance_template(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DeleteInstanceTemplateRequest import DeleteInstanceTemplateRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteInstanceTemplateRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance-template-id'], dict(help="""(string) 启动模板ID """, dest='instanceTemplateId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 校验启动模板的有效性;  ''',
        description='''
            校验启动模板的有效性; 。

            示例: jdc vm verify-instance-template  --instance-template-id xxx
        ''',
    )
    def verify_instance_template(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.VerifyInstanceTemplateRequest import VerifyInstanceTemplateRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = VerifyInstanceTemplateRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--service-name'], dict(help="""(string) 服务类型，取值为{vm、nc}，vm代表虚机、nc代表原生容器 """, dest='serviceName',  required=False)),
            (['--filters'], dict(help="""(array: filter) instanceTypes - 实例规格，精确匹配，支持多个; az - 可用区，精确匹配，支持多个;  """, dest='filters',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询实例规格信息列表;  ''',
        description='''
            查询实例规格信息列表; 。

            示例: jdc vm describe-instance-types 
        ''',
    )
    def describe_instance_types(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DescribeInstanceTypesRequest import DescribeInstanceTypesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeInstanceTypesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--page-number'], dict(help="""(int) 页码；默认为1 """, dest='pageNumber', type=int, required=False)),
            (['--page-size'], dict(help="""(int) 分页大小；默认为20；取值范围[10, 100] """, dest='pageSize', type=int, required=False)),
            (['--filters'], dict(help="""(array: filter) keyNames - 密钥对名称，精确匹配，支持多个;  """, dest='filters',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 批量查询密钥对。<br>; 此接口支持分页查询，默认每页20条。;  ''',
        description='''
            批量查询密钥对。<br>; 此接口支持分页查询，默认每页20条。; 。

            示例: jdc vm describe-keypairs 
        ''',
    )
    def describe_keypairs(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DescribeKeypairsRequest import DescribeKeypairsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeKeypairsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--key-name'], dict(help="""(string) 密钥对名称，需要全局唯一。只允许数字、大小写字母、下划线“_”及中划线“-”，不超过32个字符。;  """, dest='keyName',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 创建ssh密钥对。公钥部分存储在京东云，并返回未加密的 PEM 编码的 PKCS#8 格式私钥，您只有一次机会保存您的私钥。请妥善保管。<br>; 若传入已存在的密钥名称，会返回错误。;  ''',
        description='''
            创建ssh密钥对。公钥部分存储在京东云，并返回未加密的 PEM 编码的 PKCS#8 格式私钥，您只有一次机会保存您的私钥。请妥善保管。<br>; 若传入已存在的密钥名称，会返回错误。; 。

            示例: jdc vm create-keypair  --key-name xxx
        ''',
    )
    def create_keypair(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.CreateKeypairRequest import CreateKeypairRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateKeypairRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--key-name'], dict(help="""(string) 密钥对名称，需要全局唯一。只允许数字、大小写字母、下划线“_”及中划线“-”，不超过32个字符。;  """, dest='keyName',  required=True)),
            (['--public-key'], dict(help="""(string) 密钥对的公钥部分 """, dest='publicKey',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 导入由其他工具生成的密钥对的公钥部分。<br>; 若传入已存在的密钥名称，会返回错误。;  ''',
        description='''
            导入由其他工具生成的密钥对的公钥部分。<br>; 若传入已存在的密钥名称，会返回错误。; 。

            示例: jdc vm import-keypair  --key-name xxx --public-key xxx
        ''',
    )
    def import_keypair(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.ImportKeypairRequest import ImportKeypairRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ImportKeypairRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--key-name'], dict(help="""(string) 密钥名称 """, dest='keyName',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除ssh密钥对。;  ''',
        description='''
            删除ssh密钥对。; 。

            示例: jdc vm delete-keypair  --key-name xxx
        ''',
    )
    def delete_keypair(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DeleteKeypairRequest import DeleteKeypairRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteKeypairRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--filters'], dict(help="""(array: filter) resourceTypes - 资源类型，支持多个[instance，keypair，image，instanceTemplate，imageShare];  """, dest='filters',  required=False)),
            (['--image-id'], dict(help="""(string) 私有镜像Id，查询镜像共享(imageShare)配额时，此参数必传 """, dest='imageId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询配额，支持的类型：云主机、镜像、密钥、模板、镜像共享。;  ''',
        description='''
            查询配额，支持的类型：云主机、镜像、密钥、模板、镜像共享。; 。

            示例: jdc vm describe-quotas 
        ''',
    )
    def describe_quotas(self):
        client_factory = ClientFactory('vm')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.vm.apis.DescribeQuotasRequest import DescribeQuotasRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DescribeQuotasRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--api'], dict(help="""(string) api name """, choices=['describe-image','delete-image','describe-images','describe-image-constraints','describe-image-constraints-batch','share-image','un-share-image','release-image','un-release-image','describe-image-members','copy-images','modify-image-attribute','import-image','export-image','image-tasks','describe-instances','create-instances','describe-brief-instances','describe-instance','delete-instance','describe-instance-status','describe-instance-private-ip-address','stop-instance','start-instance','reboot-instance','attach-network-interface','detach-network-interface','modify-instance-network-attribute','associate-elastic-ip','disassociate-elastic-ip','create-image','attach-disk','detach-disk','modify-instance-disk-attribute','modify-instance-attribute','modify-instance-password','describe-instance-vnc-url','resize-instance','rebuild-instance','describe-instance-templates','create-instance-template','describe-instance-template','update-instance-template','delete-instance-template','verify-instance-template','describe-instance-types','describe-keypairs','create-keypair','import-keypair','delete-keypair','describe-quotas',], required=True)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 生成单个API接口的json骨架空字符串 ''',
        description='''
            生成单个API接口的json骨架空字符串。

            示例: jdc nc generate-skeleton --api describeContainer ''',
    )
    def generate_skeleton(self):
        skeleton = Skeleton('vm', self.app.pargs.api)
        skeleton.show()
