# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from argparse import RawTextHelpFormatter
from jdcloud_cli.cement.ext.ext_argparse import expose
from jdcloud_cli.controllers.base_controller import BaseController
from jdcloud_cli.client_factory import ClientFactory
from jdcloud_cli.parameter_builder import collect_user_args, collect_user_headers
from jdcloud_cli.printer import Printer
from jdcloud_cli.skeleton import Skeleton


class JdfusionController(BaseController):
    class Meta:
        label = 'jdfusion'
        help = 'JDFusion'
        description = '''
        jdfusion cli 子命令，云主机、网卡、云硬盘、网络与相关、关系型数据库、对象存储等相关的接口。
        OpenAPI文档地址为：https://docs.jdcloud.com/cn/jdfusion/api/overview
        '''
        stacked_on = 'base'
        stacked_type = 'nested'

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--driver'], dict(help="""(string) 只获取对应driver的云信息 """, dest='driver',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 获取当前用户的云注册信息 ''',
        description='''
            获取当前用户的云注册信息。

            示例: jdc jdfusion get-cloud-infos 
        ''',
    )
    def get_cloud_infos(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetCloudInfosRequest import GetCloudInfosRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetCloudInfosRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--cloud'], dict(help="""(cloudInfo) NA """, dest='cloud',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 为指定用户关联云 ''',
        description='''
            为指定用户关联云。

            示例: jdc jdfusion regist-cloud-info  --cloud '{"":""}'
        ''',
    )
    def regist_cloud_info(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.RegistCloudInfoRequest import RegistCloudInfoRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = RegistCloudInfoRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--cloud-id'], dict(help="""(string) 云信息ID """, dest='cloudId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 获取指定云信息 ''',
        description='''
            获取指定云信息。

            示例: jdc jdfusion get-cloud-info-by-id  --cloud-id xxx
        ''',
    )
    def get_cloud_info_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetCloudInfoByIdRequest import GetCloudInfoByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetCloudInfoByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--cloud-id'], dict(help="""(string) 云信息ID """, dest='cloudId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 获取指定云信息 ''',
        description='''
            获取指定云信息。

            示例: jdc jdfusion unregist-cloud-info  --cloud-id xxx
        ''',
    )
    def unregist_cloud_info(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.UnregistCloudInfoRequest import UnregistCloudInfoRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = UnregistCloudInfoRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--cloud-id'], dict(help="""(string) 云信息ID """, dest='cloudId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 验证指定云信息的AK、SK ''',
        description='''
            验证指定云信息的AK、SK。

            示例: jdc jdfusion valid-cloud-info  --cloud-id xxx
        ''',
    )
    def valid_cloud_info(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.ValidCloudInfoRequest import ValidCloudInfoRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ValidCloudInfoRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询部署信息列表 ''',
        description='''
            查询部署信息列表。

            示例: jdc jdfusion get-deployments 
        ''',
    )
    def get_deployments(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetDeploymentsRequest import GetDeploymentsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetDeploymentsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--deployment'], dict(help="""(deploymentInfo) 创建deployment """, dest='deployment',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 创建部署信息 ''',
        description='''
            创建部署信息。

            示例: jdc jdfusion create-deployment  --deployment '{"":""}'
        ''',
    )
    def create_deployment(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateDeploymentRequest import CreateDeploymentRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateDeploymentRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--reverse'], dict(help="""(reverseDeploymentInfo) 根据已有资源反向生成deployment """, dest='reverse',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据已有资源反向生成deployment ''',
        description='''
            根据已有资源反向生成deployment。

            示例: jdc jdfusion reverse-deployment  --reverse '{"":""}'
        ''',
    )
    def reverse_deployment(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.ReverseDeploymentRequest import ReverseDeploymentRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ReverseDeploymentRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) Deployment ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询部署信息 ''',
        description='''
            查询部署信息。

            示例: jdc jdfusion get-deployments-by-id  --id xxx
        ''',
    )
    def get_deployments_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetDeploymentsByIdRequest import GetDeploymentsByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetDeploymentsByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) Deployment ID """, dest='id',  required=True)),
            (['--deployment'], dict(help="""(deploymentInfo) 修改deployment """, dest='deployment',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 修改部署信息 ''',
        description='''
            修改部署信息。

            示例: jdc jdfusion edit-deployment  --id xxx --deployment '{"":""}'
        ''',
    )
    def edit_deployment(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.EditDeploymentRequest import EditDeploymentRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EditDeploymentRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) Deployment ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除部署信息 ''',
        description='''
            删除部署信息。

            示例: jdc jdfusion delete-deployment  --id xxx
        ''',
    )
    def delete_deployment(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteDeploymentRequest import DeleteDeploymentRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteDeploymentRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) Deployment ID """, dest='id',  required=True)),
            (['--deployment'], dict(help="""(deployment) 创建deployment """, dest='deployment',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 克隆部署信息 ''',
        description='''
            克隆部署信息。

            示例: jdc jdfusion clone-deployment  --id xxx --deployment '{"":""}'
        ''',
    )
    def clone_deployment(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CloneDeploymentRequest import CloneDeploymentRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CloneDeploymentRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) Deployment ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 预部署 ''',
        description='''
            预部署。

            示例: jdc jdfusion dryrun-deployment  --id xxx
        ''',
    )
    def dryrun_deployment(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DryrunDeploymentRequest import DryrunDeploymentRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DryrunDeploymentRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) Deployment ID """, dest='id',  required=True)),
            (['--apply'], dict(help="""(apply) 应用部署 """, dest='apply',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 应用部署 ''',
        description='''
            应用部署。

            示例: jdc jdfusion apply-deployment  --id xxx --apply '{"":""}'
        ''',
    )
    def apply_deployment(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.ApplyDeploymentRequest import ApplyDeploymentRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ApplyDeploymentRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) deployment ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询执行结果 ''',
        description='''
            查询执行结果。

            示例: jdc jdfusion get-deployment-result  --id xxx
        ''',
    )
    def get_deployment_result(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetDeploymentResultRequest import GetDeploymentResultRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetDeploymentResultRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) Deployment ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询应用记录 ''',
        description='''
            查询应用记录。

            示例: jdc jdfusion get-deployment-versions  --id xxx
        ''',
    )
    def get_deployment_versions(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetDeploymentVersionsRequest import GetDeploymentVersionsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetDeploymentVersionsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) deployment ID """, dest='id',  required=True)),
            (['--version_id'], dict(help="""(string) application ID """, dest='version_id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询应用记录详细信息 ''',
        description='''
            查询应用记录详细信息。

            示例: jdc jdfusion get-deployments-version  --id xxx --version_id xxx
        ''',
    )
    def get_deployments_version(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetDeploymentsVersionRequest import GetDeploymentsVersionRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetDeploymentsVersionRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) deployment ID """, dest='id',  required=True)),
            (['--version_id'], dict(help="""(string) application ID """, dest='version_id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 应用部署回滚 ''',
        description='''
            应用部署回滚。

            示例: jdc jdfusion rollback-deployments-version  --id xxx --version_id xxx
        ''',
    )
    def rollback_deployments_version(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.RollbackDeploymentsVersionRequest import RollbackDeploymentsVersionRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = RollbackDeploymentsVersionRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) deployment ID """, dest='id',  required=True)),
            (['--record'], dict(help="""(string) deployment ID """, dest='record',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询某一次的历史执行结果（内部使用） ''',
        description='''
            查询某一次的历史执行结果（内部使用）。

            示例: jdc jdfusion get-deployments-results-by-id-record  --id xxx --record xxx
        ''',
    )
    def get_deployments_results_by_id_record(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetDeploymentsResultsByIdRecordRequest import GetDeploymentsResultsByIdRecordRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetDeploymentsResultsByIdRecordRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--vm-id'], dict(help="""(string) 云主机id """, dest='vmId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的云硬盘资源信息 ''',
        description='''
            根据云提供商查询对应的云硬盘资源信息。

            示例: jdc jdfusion get-disks 
        ''',
    )
    def get_disks(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetDisksRequest import GetDisksRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetDisksRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--disk'], dict(help="""(createDataDisk) 创建云硬盘 """, dest='disk',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商创建云硬盘 ''',
        description='''
            根据云提供商创建云硬盘。

            示例: jdc jdfusion create-disk  --disk '{"":""}'
        ''',
    )
    def create_disk(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateDiskRequest import CreateDiskRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateDiskRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 云硬盘 ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的云硬盘资源信息 ''',
        description='''
            根据云提供商查询对应的云硬盘资源信息。

            示例: jdc jdfusion get-disk-by-id  --id xxx
        ''',
    )
    def get_disk_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetDiskByIdRequest import GetDiskByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetDiskByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 云硬盘 ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除云硬盘 ''',
        description='''
            删除云硬盘。

            示例: jdc jdfusion remove-disk-by-id  --id xxx
        ''',
    )
    def remove_disk_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.RemoveDiskByIdRequest import RemoveDiskByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = RemoveDiskByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 云硬盘 ID """, dest='id',  required=True)),
            (['--attach'], dict(help="""(attachDataDisk) 云硬盘挂载至虚拟机 """, dest='attach',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 云硬盘挂载至虚拟机 ''',
        description='''
            云硬盘挂载至虚拟机。

            示例: jdc jdfusion attach-disk-to-vm-instance-by-disk-id  --id xxx --attach '{"":""}'
        ''',
    )
    def attach_disk_to_vm_instance_by_disk_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.AttachDiskToVmInstanceByDiskIdRequest import AttachDiskToVmInstanceByDiskIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = AttachDiskToVmInstanceByDiskIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 云硬盘 ID """, dest='id',  required=True)),
            (['--detach'], dict(help="""(detachDataDisk) 从虚拟机卸载云硬盘 """, dest='detach',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 从虚拟机卸载云硬盘 ''',
        description='''
            从虚拟机卸载云硬盘。

            示例: jdc jdfusion detach-disk-to-vm-instance-by-disk-id  --id xxx --detach '{"":""}'
        ''',
    )
    def detach_disk_to_vm_instance_by_disk_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DetachDiskToVmInstanceByDiskIdRequest import DetachDiskToVmInstanceByDiskIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DetachDiskToVmInstanceByDiskIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的OSS存储桶列表 ''',
        description='''
            根据云提供商查询对应的OSS存储桶列表。

            示例: jdc jdfusion get-buckets 
        ''',
    )
    def get_buckets(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetBucketsRequest import GetBucketsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetBucketsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--bucket'], dict(help="""(createOSSBucket) 创建OSS存储桶 """, dest='bucket',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据给定的信息，创建OSS存储桶 ''',
        description='''
            根据给定的信息，创建OSS存储桶。

            示例: jdc jdfusion create-bucket  --bucket '{"":""}'
        ''',
    )
    def create_bucket(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateBucketRequest import CreateBucketRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateBucketRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--name'], dict(help="""(string) OSS存储桶名称 """, dest='name',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的OSS存储桶信息 ''',
        description='''
            根据云提供商查询对应的OSS存储桶信息。

            示例: jdc jdfusion get-bucket-by-name  --name xxx
        ''',
    )
    def get_bucket_by_name(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetBucketByNameRequest import GetBucketByNameRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetBucketByNameRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--name'], dict(help="""(string) OSS存储桶名称 """, dest='name',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除指定ID的OSS存储桶信息 ''',
        description='''
            删除指定ID的OSS存储桶信息。

            示例: jdc jdfusion delete-bucket  --name xxx
        ''',
    )
    def delete_bucket(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteBucketRequest import DeleteBucketRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteBucketRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--name'], dict(help="""(string) OSS存储桶名称 """, dest='name',  required=True)),
            (['--marker'], dict(help="""(string) 本次查询的起点（文件key值） """, dest='marker',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据过滤条件，取得指定OSS存储桶上的文件列表 ''',
        description='''
            根据过滤条件，取得指定OSS存储桶上的文件列表。

            示例: jdc jdfusion get-bucket-files  --name xxx
        ''',
    )
    def get_bucket_files(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetBucketFilesRequest import GetBucketFilesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetBucketFilesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 获取任务列表 ''',
        description='''
            获取任务列表。

            示例: jdc jdfusion get-transfer-tasks 
        ''',
    )
    def get_transfer_tasks(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetTransferTasksRequest import GetTransferTasksRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetTransferTasksRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--task'], dict(help="""(transferSimpleTaskInfo) NA """, dest='task',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 创建任务 ''',
        description='''
            创建任务。

            示例: jdc jdfusion create-transfer-task 
        ''',
    )
    def create_transfer_task(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateTransferTaskRequest import CreateTransferTaskRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateTransferTaskRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 用户ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据指定ID获取任务信息 ''',
        description='''
            根据指定ID获取任务信息。

            示例: jdc jdfusion get-transfer-task-by-id  --id xxx
        ''',
    )
    def get_transfer_task_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetTransferTaskByIdRequest import GetTransferTaskByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetTransferTaskByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 任务ID """, dest='id',  required=True)),
            (['--task'], dict(help="""(transferTaskInfo) NA """, dest='task',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据指定ID修改任务 ''',
        description='''
            根据指定ID修改任务。

            示例: jdc jdfusion edit-transfer-task  --id xxx
        ''',
    )
    def edit_transfer_task(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.EditTransferTaskRequest import EditTransferTaskRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = EditTransferTaskRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 任务ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据指定ID删除任务 ''',
        description='''
            根据指定ID删除任务。

            示例: jdc jdfusion delete-transfer-task  --id xxx
        ''',
    )
    def delete_transfer_task(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteTransferTaskRequest import DeleteTransferTaskRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteTransferTaskRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 用户ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据指定ID启动任务 ''',
        description='''
            根据指定ID启动任务。

            示例: jdc jdfusion start-transfer-task  --id xxx
        ''',
    )
    def start_transfer_task(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.StartTransferTaskRequest import StartTransferTaskRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = StartTransferTaskRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 用户ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据指定ID停止任务 ''',
        description='''
            根据指定ID停止任务。

            示例: jdc jdfusion stop-transfer-task  --id xxx
        ''',
    )
    def stop_transfer_task(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.StopTransferTaskRequest import StopTransferTaskRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = StopTransferTaskRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 任务ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据指定任务id查询迁移进度 ''',
        description='''
            根据指定任务id查询迁移进度。

            示例: jdc jdfusion get-transfer-task-progress  --id xxx
        ''',
    )
    def get_transfer_task_progress(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetTransferTaskProgressRequest import GetTransferTaskProgressRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetTransferTaskProgressRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 任务ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据指定任务id查询迁移失败文件列表 ''',
        description='''
            根据指定任务id查询迁移失败文件列表。

            示例: jdc jdfusion get-transfer-task-failed-files  --id xxx
        ''',
    )
    def get_transfer_task_failed_files(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetTransferTaskFailedFilesRequest import GetTransferTaskFailedFilesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetTransferTaskFailedFilesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--inst-id'], dict(help="""(string) RDS实例ID """, dest='instId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据过滤条件，取得指定RDS实例上的账号信息 ''',
        description='''
            根据过滤条件，取得指定RDS实例上的账号信息。

            示例: jdc jdfusion get-rds-accounts-by-inst-id  --inst-id xxx
        ''',
    )
    def get_rds_accounts_by_inst_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetRdsAccountsByInstIdRequest import GetRdsAccountsByInstIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetRdsAccountsByInstIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--inst-id'], dict(help="""(string) RDS实例ID """, dest='instId',  required=True)),
            (['--account'], dict(help="""(createRDSAccount) 创建RDS实例的账号信息 """, dest='account',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据给定的信息，创建指定RDS实例的账户 ''',
        description='''
            根据给定的信息，创建指定RDS实例的账户。

            示例: jdc jdfusion create-rds-accounts  --inst-id xxx --account '{"":""}'
        ''',
    )
    def create_rds_accounts(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateRdsAccountsRequest import CreateRdsAccountsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateRdsAccountsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--inst-id'], dict(help="""(string) RDS实例ID """, dest='instId',  required=True)),
            (['--account-name'], dict(help="""(string) 账号名称 """, dest='accountName',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 取得指定RDS实例上的指定账号信息 ''',
        description='''
            取得指定RDS实例上的指定账号信息。

            示例: jdc jdfusion get-rds-accounts-by-inst-id-and-account-name  --inst-id xxx --account-name xxx
        ''',
    )
    def get_rds_accounts_by_inst_id_and_account_name(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetRdsAccountsByInstIdAndAccountNameRequest import GetRdsAccountsByInstIdAndAccountNameRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetRdsAccountsByInstIdAndAccountNameRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--inst-id'], dict(help="""(string) RDS实例ID """, dest='instId',  required=True)),
            (['--account-name'], dict(help="""(string) 账号用户名 """, dest='accountName',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除指定RDS实例上，指定用户名的账号信息 ''',
        description='''
            删除指定RDS实例上，指定用户名的账号信息。

            示例: jdc jdfusion delete-rds-account  --inst-id xxx --account-name xxx
        ''',
    )
    def delete_rds_account(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteRdsAccountRequest import DeleteRdsAccountRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteRdsAccountRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--inst-id'], dict(help="""(string) RDS实例ID """, dest='instId',  required=True)),
            (['--account-name'], dict(help="""(string) 账号名称 """, dest='accountName',  required=True)),
            (['--db-privilege-info'], dict(help="""(dbPrivilegeInfo) RDS账号对数据库的权限信息 """, dest='dbPrivilegeInfo',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 给RDS账号分配数据库权限 ''',
        description='''
            给RDS账号分配数据库权限。

            示例: jdc jdfusion grant-rds-account  --inst-id xxx --account-name xxx --db-privilege-info '{"":""}'
        ''',
    )
    def grant_rds_account(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GrantRdsAccountRequest import GrantRdsAccountRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GrantRdsAccountRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--inst-id'], dict(help="""(string) RDS实例ID """, dest='instId',  required=True)),
            (['--account-name'], dict(help="""(string) 账号名称 """, dest='accountName',  required=True)),
            (['--db-name'], dict(help="""(string) 数据库名称 """, dest='dbName',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 撤销RDS账号在指定数据库的所有权限 ''',
        description='''
            撤销RDS账号在指定数据库的所有权限。

            示例: jdc jdfusion revoke-rds-account  --inst-id xxx --account-name xxx --db-name xxx
        ''',
    )
    def revoke_rds_account(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.RevokeRdsAccountRequest import RevokeRdsAccountRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = RevokeRdsAccountRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--inst-id'], dict(help="""(string) RDS实例ID """, dest='instId',  required=True)),
            (['--account-name'], dict(help="""(string) 账号名称 """, dest='accountName',  required=True)),
            (['--info'], dict(help="""(dbPrivilegeInfo) RDS账号对数据库的权限信息 """, dest='info',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 通过异步任务，给RDS账号分配数据库权限 ''',
        description='''
            通过异步任务，给RDS账号分配数据库权限。

            示例: jdc jdfusion grant-rds-accounts-by-task  --inst-id xxx --account-name xxx --info '{"":""}'
        ''',
    )
    def grant_rds_accounts_by_task(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GrantRdsAccountsByTaskRequest import GrantRdsAccountsByTaskRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GrantRdsAccountsByTaskRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--inst-id'], dict(help="""(string) RDS实例ID """, dest='instId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据过滤条件，取得指定RDS实例上的数据库信息 ''',
        description='''
            根据过滤条件，取得指定RDS实例上的数据库信息。

            示例: jdc jdfusion get-rds-databases-by-inst-id  --inst-id xxx
        ''',
    )
    def get_rds_databases_by_inst_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetRdsDatabasesByInstIdRequest import GetRdsDatabasesByInstIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetRdsDatabasesByInstIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--inst-id'], dict(help="""(string) RDS实例ID """, dest='instId',  required=True)),
            (['--database'], dict(help="""(createRDSDB) 创建RDS实例的数据库信息 """, dest='database',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据给定的信息，创建指定RDS实例的数据库 ''',
        description='''
            根据给定的信息，创建指定RDS实例的数据库。

            示例: jdc jdfusion create-rds-database  --inst-id xxx --database '{"":""}'
        ''',
    )
    def create_rds_database(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateRdsDatabaseRequest import CreateRdsDatabaseRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateRdsDatabaseRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--inst-id'], dict(help="""(string) RDS实例ID """, dest='instId',  required=True)),
            (['--db-name'], dict(help="""(string) 数据库名称 """, dest='dbName',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据过滤条件，取得指定RDS实例上的数据库信息 ''',
        description='''
            根据过滤条件，取得指定RDS实例上的数据库信息。

            示例: jdc jdfusion get-rds-database-by-inst-id-and-db-name  --inst-id xxx --db-name xxx
        ''',
    )
    def get_rds_database_by_inst_id_and_db_name(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetRdsDatabaseByInstIdAndDbNameRequest import GetRdsDatabaseByInstIdAndDbNameRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetRdsDatabaseByInstIdAndDbNameRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--inst-id'], dict(help="""(string) RDS实例ID """, dest='instId',  required=True)),
            (['--db-name'], dict(help="""(string) 数据库名称 """, dest='dbName',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除指定RDS实例上，指定数据库名的数据库信息 ''',
        description='''
            删除指定RDS实例上，指定数据库名的数据库信息。

            示例: jdc jdfusion delete-rds-database  --inst-id xxx --db-name xxx
        ''',
    )
    def delete_rds_database(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteRdsDatabaseRequest import DeleteRdsDatabaseRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteRdsDatabaseRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的RDS实例信息 ''',
        description='''
            根据云提供商查询对应的RDS实例信息。

            示例: jdc jdfusion get-rds-instances 
        ''',
    )
    def get_rds_instances(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetRdsInstancesRequest import GetRdsInstancesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetRdsInstancesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--instance'], dict(help="""(createRDSInstance) 创建RDS实例 """, dest='instance',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据给定的信息，创建RDS实例 ''',
        description='''
            根据给定的信息，创建RDS实例。

            示例: jdc jdfusion create-rds-instance  --instance '{"":""}'
        ''',
    )
    def create_rds_instance(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateRdsInstanceRequest import CreateRdsInstanceRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateRdsInstanceRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--inst-id'], dict(help="""(string) RDS实例ID """, dest='instId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询指定ID的RDS实例信息 ''',
        description='''
            查询指定ID的RDS实例信息。

            示例: jdc jdfusion get-rds-by-inst-id  --inst-id xxx
        ''',
    )
    def get_rds_by_inst_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetRdsByInstIdRequest import GetRdsByInstIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetRdsByInstIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--inst-id'], dict(help="""(string) RDS实例ID """, dest='instId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除指定ID的RDS实例信息 ''',
        description='''
            删除指定ID的RDS实例信息。

            示例: jdc jdfusion delete-rds-by-inst-id  --inst-id xxx
        ''',
    )
    def delete_rds_by_inst_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteRdsByInstIdRequest import DeleteRdsByInstIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteRdsByInstIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询数据同步通道信息 ''',
        description='''
            查询数据同步通道信息。

            示例: jdc jdfusion get-channels 
        ''',
    )
    def get_channels(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetChannelsRequest import GetChannelsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetChannelsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--channel'], dict(help="""(channelInfo) 创建channel """, dest='channel',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 创建数据同步通道 ''',
        description='''
            创建数据同步通道。

            示例: jdc jdfusion create-channel  --channel '{"":""}'
        ''',
    )
    def create_channel(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateChannelRequest import CreateChannelRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateChannelRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) channel ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除channel ''',
        description='''
            删除channel。

            示例: jdc jdfusion delete-channel  --id xxx
        ''',
    )
    def delete_channel(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteChannelRequest import DeleteChannelRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteChannelRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) channel ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 启动数据同步 ''',
        description='''
            启动数据同步。

            示例: jdc jdfusion start-channel  --id xxx
        ''',
    )
    def start_channel(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.StartChannelRequest import StartChannelRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = StartChannelRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) channel ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 停止数据同步 ''',
        description='''
            停止数据同步。

            示例: jdc jdfusion stop-channel  --id xxx
        ''',
    )
    def stop_channel(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.StopChannelRequest import StopChannelRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = StopChannelRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询数据源 ''',
        description='''
            查询数据源。

            示例: jdc jdfusion get-datasources 
        ''',
    )
    def get_datasources(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetDatasourcesRequest import GetDatasourcesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetDatasourcesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--datasource'], dict(help="""(datasourceInfo) 创建数据源 """, dest='datasource',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 创建数据源 ''',
        description='''
            创建数据源。

            示例: jdc jdfusion create-datasource  --datasource '{"":""}'
        ''',
    )
    def create_datasource(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateDatasourceRequest import CreateDatasourceRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateDatasourceRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) channel ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除数据源 ''',
        description='''
            删除数据源。

            示例: jdc jdfusion delete-datasource  --id xxx
        ''',
    )
    def delete_datasource(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteDatasourceRequest import DeleteDatasourceRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteDatasourceRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--engine'], dict(help="""(string) RDS数据库引擎，目前只支持mysql """, dest='engine',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据数据库类型，取得RDS实例的规格 ''',
        description='''
            根据数据库类型，取得RDS实例的规格。

            示例: jdc jdfusion get-rds-specification  --engine xxx
        ''',
    )
    def get_rds_specification(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetRdsSpecificationRequest import GetRdsSpecificationRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetRdsSpecificationRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询地域列表信息 ''',
        description='''
            查询地域列表信息。

            示例: jdc jdfusion get-regions 
        ''',
    )
    def get_regions(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetRegionsRequest import GetRegionsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetRegionsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--region'], dict(help="""(string) 区域id """, dest='region',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询可用域列表信息 ''',
        description='''
            查询可用域列表信息。

            示例: jdc jdfusion get-regions-available-zones  --region xxx
        ''',
    )
    def get_regions_available_zones(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetRegionsAvailableZonesRequest import GetRegionsAvailableZonesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetRegionsAvailableZonesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--task'], dict(help="""(string) 执行请求 ID """, dest='task',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 读取指定ID的运行结果和运行状态 ''',
        description='''
            读取指定ID的运行结果和运行状态。

            示例: jdc jdfusion get-task-info-history-by-id  --task xxx
        ''',
    )
    def get_task_info_history_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetTaskInfoHistoryByIdRequest import GetTaskInfoHistoryByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetTaskInfoHistoryByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--task'], dict(help="""(string) 执行请求 ID """, dest='task',  required=True)),
            (['--file-name'], dict(help="""(string) 执行文件名称 """, dest='fileName',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 读取指定ID的运行结果和运行状态 ''',
        description='''
            读取指定ID的运行结果和运行状态。

            示例: jdc jdfusion get-task-info-by-id  --task xxx
        ''',
    )
    def get_task_info_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetTaskInfoByIdRequest import GetTaskInfoByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetTaskInfoByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--image-source'], dict(help="""(string) 镜像来源： system：系统官方公共镜像。 self：用户自定义镜像。 others：用户共享的镜像。 marketplace：镜像市场云市场 提供的镜像。 """, dest='imageSource',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据过滤条件，取得镜像资源的信息 ''',
        description='''
            根据过滤条件，取得镜像资源的信息。

            示例: jdc jdfusion get-vm-images 
        ''',
    )
    def get_vm_images(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVmImagesRequest import GetVmImagesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVmImagesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 资源实例ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的VM资源信息 ''',
        description='''
            根据云提供商查询对应的VM资源信息。

            示例: jdc jdfusion get-vm-instances-by-id  --id xxx
        ''',
    )
    def get_vm_instances_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVmInstancesByIdRequest import GetVmInstancesByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVmInstancesByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 资源实例ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 通过虚拟机id删除虚拟机 ''',
        description='''
            通过虚拟机id删除虚拟机。

            示例: jdc jdfusion delete-vm-instance-by-id  --id xxx
        ''',
    )
    def delete_vm_instance_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteVmInstanceByIdRequest import DeleteVmInstanceByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteVmInstanceByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的虚拟机资源信息 ''',
        description='''
            根据云提供商查询对应的虚拟机资源信息。

            示例: jdc jdfusion get-vm-instances 
        ''',
    )
    def get_vm_instances(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVmInstancesRequest import GetVmInstancesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVmInstancesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--vm'], dict(help="""(createVm) 创建VM """, dest='vm',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商创建虚拟机 ''',
        description='''
            根据云提供商创建虚拟机。

            示例: jdc jdfusion create-vm-instance  --vm '{"":""}'
        ''',
    )
    def create_vm_instance(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateVmInstanceRequest import CreateVmInstanceRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateVmInstanceRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 资源实例ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 停止运行一台实例。只有状态为 运行中（Running）的实例才可以进行此操作。 ''',
        description='''
            停止运行一台实例。只有状态为 运行中（Running）的实例才可以进行此操作。。

            示例: jdc jdfusion stop-vm-instance-by-id  --id xxx
        ''',
    )
    def stop_vm_instance_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.StopVmInstanceByIdRequest import StopVmInstanceByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = StopVmInstanceByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 资源实例ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 启动一台实例。实例状态必须为 已停止（Stopped），才可以调用该接口。 ''',
        description='''
            启动一台实例。实例状态必须为 已停止（Stopped），才可以调用该接口。。

            示例: jdc jdfusion start-vm-instance-by-id  --id xxx
        ''',
    )
    def start_vm_instance_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.StartVmInstanceByIdRequest import StartVmInstanceByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = StartVmInstanceByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 资源实例ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 只能重启状态为 运行中（Running）的实例。 ''',
        description='''
            只能重启状态为 运行中（Running）的实例。。

            示例: jdc jdfusion reboot-vm-instance-by-id  --id xxx
        ''',
    )
    def reboot_vm_instance_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.RebootVmInstanceByIdRequest import RebootVmInstanceByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = RebootVmInstanceByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--az'], dict(help="""(string) 可用区 """, dest='az',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 虚拟机规格列表 ''',
        description='''
            虚拟机规格列表。

            示例: jdc jdfusion get-vm-instance-types 
        ''',
    )
    def get_vm_instance_types(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVmInstanceTypesRequest import GetVmInstanceTypesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVmInstanceTypesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--name'], dict(help="""(string) keypair name """, dest='name',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的密钥对资源信息 ''',
        description='''
            根据云提供商查询对应的密钥对资源信息。

            示例: jdc jdfusion get-vm-keypairs-by-name  --name xxx
        ''',
    )
    def get_vm_keypairs_by_name(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVmKeypairsByNameRequest import GetVmKeypairsByNameRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVmKeypairsByNameRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--name'], dict(help="""(string) keypair name """, dest='name',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除密钥对 ''',
        description='''
            删除密钥对。

            示例: jdc jdfusion delete-vm-keypair-by-name  --name xxx
        ''',
    )
    def delete_vm_keypair_by_name(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteVmKeypairByNameRequest import DeleteVmKeypairByNameRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteVmKeypairByNameRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的密钥对资源信息 ''',
        description='''
            根据云提供商查询对应的密钥对资源信息。

            示例: jdc jdfusion get-vm-keypairs 
        ''',
    )
    def get_vm_keypairs(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVmKeypairsRequest import GetVmKeypairsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVmKeypairsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--keypair'], dict(help="""(createKeypair) 创建keypair """, dest='keypair',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商创建密钥对 ''',
        description='''
            根据云提供商创建密钥对。

            示例: jdc jdfusion create-vm-keypair  --keypair '{"":""}'
        ''',
    )
    def create_vm_keypair(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateVmKeypairRequest import CreateVmKeypairRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateVmKeypairRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的公网IP资源信息 ''',
        description='''
            根据云提供商查询对应的公网IP资源信息。

            示例: jdc jdfusion get-vpc-eips 
        ''',
    )
    def get_vpc_eips(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVpcEipsRequest import GetVpcEipsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVpcEipsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--allocate'], dict(help="""(allocateEipAddress) 分配弹性公网ip """, dest='allocate',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商分配公网IP ''',
        description='''
            根据云提供商分配公网IP。

            示例: jdc jdfusion create-vpc-eip  --allocate '{"":""}'
        ''',
    )
    def create_vpc_eip(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateVpcEipRequest import CreateVpcEipRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateVpcEipRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 公网IP ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的公网IP资源信息 ''',
        description='''
            根据云提供商查询对应的公网IP资源信息。

            示例: jdc jdfusion get-vpc-eip-by-id  --id xxx
        ''',
    )
    def get_vpc_eip_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVpcEipByIdRequest import GetVpcEipByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVpcEipByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 公网IP ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 释放公网IP ''',
        description='''
            释放公网IP。

            示例: jdc jdfusion delete-vpc-eip-by-id  --id xxx
        ''',
    )
    def delete_vpc_eip_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteVpcEipByIdRequest import DeleteVpcEipByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteVpcEipByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 公网IP ID """, dest='id',  required=True)),
            (['--associate'], dict(help="""(associateEipAddress) 弹性公网IP绑定到虚拟机 """, dest='associate',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 弹性公网IP绑定到虚拟机 ''',
        description='''
            弹性公网IP绑定到虚拟机。

            示例: jdc jdfusion associate-vpc-eip-by-id  --id xxx --associate '{"":""}'
        ''',
    )
    def associate_vpc_eip_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.AssociateVpcEipByIdRequest import AssociateVpcEipByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = AssociateVpcEipByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 公网IP ID """, dest='id',  required=True)),
            (['--unassociate'], dict(help="""(unassociateEipAddress) 解绑公网IP """, dest='unassociate',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 解绑公网IP ''',
        description='''
            解绑公网IP。

            示例: jdc jdfusion disassociate-vpc-eip-by-id  --id xxx --unassociate '{"":""}'
        ''',
    )
    def disassociate_vpc_eip_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DisassociateVpcEipByIdRequest import DisassociateVpcEipByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DisassociateVpcEipByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--slbid'], dict(help="""(string) 负载均衡id """, dest='slbid',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据过滤条件，查监听器列表 ''',
        description='''
            根据过滤条件，查监听器列表。

            示例: jdc jdfusion get-lb-http-listener 
        ''',
    )
    def get_lb_http_listener(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetLbHttpListenerRequest import GetLbHttpListenerRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetLbHttpListenerRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--http-listener'], dict(help="""(createLoadBalancerHTTPListener) 创建HTTP监听器 """, dest='httpListener',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 创建HTTP监听器 ''',
        description='''
            创建HTTP监听器。

            示例: jdc jdfusion create-vpc-lbhttp-listener  --http-listener '{"":""}'
        ''',
    )
    def create_vpc_lbhttp_listener(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateVpcLBHttpListenerRequest import CreateVpcLBHttpListenerRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateVpcLBHttpListenerRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 网卡 ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的网卡资源信息 ''',
        description='''
            根据云提供商查询对应的网卡资源信息。

            示例: jdc jdfusion get-vpc-network-interface-by-id  --id xxx
        ''',
    )
    def get_vpc_network_interface_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVpcNetworkInterfaceByIdRequest import GetVpcNetworkInterfaceByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVpcNetworkInterfaceByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 网卡 ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除弹性网卡 ''',
        description='''
            删除弹性网卡。

            示例: jdc jdfusion delete-vpc-network-interface-by-id  --id xxx
        ''',
    )
    def delete_vpc_network_interface_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteVpcNetworkInterfaceByIdRequest import DeleteVpcNetworkInterfaceByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteVpcNetworkInterfaceByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--vm-id'], dict(help="""(string) 云主机id """, dest='vmId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的网卡资源信息 ''',
        description='''
            根据云提供商查询对应的网卡资源信息。

            示例: jdc jdfusion get-vpc-network-interfaces 
        ''',
    )
    def get_vpc_network_interfaces(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVpcNetworkInterfacesRequest import GetVpcNetworkInterfacesRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVpcNetworkInterfacesRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--net-interface'], dict(help="""(createNetInterface) 创建网卡 """, dest='netInterface',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商创建网卡 ''',
        description='''
            根据云提供商创建网卡。

            示例: jdc jdfusion create-vpc-network-interface  --net-interface '{"":""}'
        ''',
    )
    def create_vpc_network_interface(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateVpcNetworkInterfaceRequest import CreateVpcNetworkInterfaceRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateVpcNetworkInterfaceRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 网卡 ID """, dest='id',  required=True)),
            (['--attach'], dict(help="""(attachNetInterface) 网卡挂载虚拟机 """, dest='attach',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 网卡挂载虚拟机 ''',
        description='''
            网卡挂载虚拟机。

            示例: jdc jdfusion attach-vpc-network-interface-by-id  --id xxx --attach '{"":""}'
        ''',
    )
    def attach_vpc_network_interface_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.AttachVpcNetworkInterfaceByIdRequest import AttachVpcNetworkInterfaceByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = AttachVpcNetworkInterfaceByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 网卡 ID """, dest='id',  required=True)),
            (['--detach'], dict(help="""(detachNetInterface) 卸载网卡 """, dest='detach',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 卸载网卡 ''',
        description='''
            卸载网卡。

            示例: jdc jdfusion detach-vpc-network-interface-by-id  --id xxx --detach '{"":""}'
        ''',
    )
    def detach_vpc_network_interface_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DetachVpcNetworkInterfaceByIdRequest import DetachVpcNetworkInterfaceByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DetachVpcNetworkInterfaceByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) SecurityGroup ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询指定的安全组资源信息 ''',
        description='''
            查询指定的安全组资源信息。

            示例: jdc jdfusion get-vpc-security-group-by-id  --id xxx
        ''',
    )
    def get_vpc_security_group_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVpcSecurityGroupByIdRequest import GetVpcSecurityGroupByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVpcSecurityGroupByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) SecurityGroup ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除安全组 ''',
        description='''
            删除安全组。

            示例: jdc jdfusion delete-vpc-security-group-by-id  --id xxx
        ''',
    )
    def delete_vpc_security_group_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteVpcSecurityGroupByIdRequest import DeleteVpcSecurityGroupByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteVpcSecurityGroupByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的安全组资源信息 ''',
        description='''
            根据云提供商查询对应的安全组资源信息。

            示例: jdc jdfusion get-vpc-security-groups 
        ''',
    )
    def get_vpc_security_groups(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVpcSecurityGroupsRequest import GetVpcSecurityGroupsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVpcSecurityGroupsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--security-group'], dict(help="""(createSecurityGroup) 创建securityGroup """, dest='securityGroup',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商创建安全组 ''',
        description='''
            根据云提供商创建安全组。

            示例: jdc jdfusion create-vpc-security-group  --security-group '{"":""}'
        ''',
    )
    def create_vpc_security_group(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateVpcSecurityGroupRequest import CreateVpcSecurityGroupRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateVpcSecurityGroupRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 安全组ID """, dest='id',  required=True)),
            (['--sg-rule'], dict(help="""(createSgRule) 新增安全组规则 """, dest='sgRule',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 新增安全组规则 ''',
        description='''
            新增安全组规则。

            示例: jdc jdfusion create-security-groups-rule  --id xxx --sg-rule '{"":""}'
        ''',
    )
    def create_security_groups_rule(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateSecurityGroupsRuleRequest import CreateSecurityGroupsRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateSecurityGroupsRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 安全组ID """, dest='id',  required=True)),
            (['--rule-type'], dict(help="""(string) 规则类型，ingress、egress """, dest='ruleType',  required=True)),
            (['--protocol'], dict(help="""(string) 协议，tcp、udp、icmp 或者 all """, dest='protocol',  required=True)),
            (['--from-port'], dict(help="""(string) 起始端口 """, dest='fromPort',  required=True)),
            (['--to-port'], dict(help="""(string) 终止端口 """, dest='toPort',  required=True)),
            (['--nic-type'], dict(help="""(string) 网络类型，internet、intranet """, dest='nicType',  required=False)),
            (['--policy'], dict(help="""(string) 认证策略，accept、drop """, dest='policy',  required=False)),
            (['--priority'], dict(help="""(string) 认证策略的权重，1-100 """, dest='priority',  required=False)),
            (['--cidr-ip'], dict(help="""(string) 目标IP地址范围 """, dest='cidrIp',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除安全组规则 ''',
        description='''
            删除安全组规则。

            示例: jdc jdfusion delete-security-groups-rule  --id xxx --rule-type xxx --protocol xxx --from-port xxx --to-port xxx
        ''',
    )
    def delete_security_groups_rule(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteSecurityGroupsRuleRequest import DeleteSecurityGroupsRuleRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteSecurityGroupsRuleRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) LB ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的SLB资源信息 ''',
        description='''
            根据云提供商查询对应的SLB资源信息。

            示例: jdc jdfusion get-vpc-slb-by-id  --id xxx
        ''',
    )
    def get_vpc_slb_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVpcSlbByIdRequest import GetVpcSlbByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVpcSlbByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) LB ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除SLB ''',
        description='''
            删除SLB。

            示例: jdc jdfusion delete-vpc-slb-by-id  --id xxx
        ''',
    )
    def delete_vpc_slb_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteVpcSlbByIdRequest import DeleteVpcSlbByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteVpcSlbByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的负载均衡资源信息 ''',
        description='''
            根据云提供商查询对应的负载均衡资源信息。

            示例: jdc jdfusion get-vpc-slbs 
        ''',
    )
    def get_vpc_slbs(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVpcSlbsRequest import GetVpcSlbsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVpcSlbsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--slb'], dict(help="""(slbInfo) 创建SLB """, dest='slb',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商创建负载均衡 ''',
        description='''
            根据云提供商创建负载均衡。

            示例: jdc jdfusion create-vpc-slb  --slb '{"":""}'
        ''',
    )
    def create_vpc_slb(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateVpcSlbRequest import CreateVpcSlbRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateVpcSlbRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) LB ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 启动负载均衡 ''',
        description='''
            启动负载均衡。

            示例: jdc jdfusion start-slb  --id xxx
        ''',
    )
    def start_slb(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.StartSlbRequest import StartSlbRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = StartSlbRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) LB ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 停止负载均衡 ''',
        description='''
            停止负载均衡。

            示例: jdc jdfusion stop-slb  --id xxx
        ''',
    )
    def stop_slb(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.StopSlbRequest import StopSlbRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = StopSlbRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 负载均衡id """, dest='id',  required=True)),
            (['--listener-port'], dict(help="""(int) 监听器端口 """, dest='listenerPort', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除监听器 ''',
        description='''
            删除监听器。

            示例: jdc jdfusion delete-slbs-listener  --id xxx --listener-port 0
        ''',
    )
    def delete_slbs_listener(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteSlbsListenerRequest import DeleteSlbsListenerRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteSlbsListenerRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 负载均衡id """, dest='id',  required=True)),
            (['--listener-port'], dict(help="""(int) 监听器端口 """, dest='listenerPort', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 启动监听器 ''',
        description='''
            启动监听器。

            示例: jdc jdfusion start-slb-listener  --id xxx --listener-port 0
        ''',
    )
    def start_slb_listener(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.StartSlbListenerRequest import StartSlbListenerRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = StartSlbListenerRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 负载均衡id """, dest='id',  required=True)),
            (['--listener-port'], dict(help="""(int) 监听器端口 """, dest='listenerPort', type=int, required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 停止监听器 ''',
        description='''
            停止监听器。

            示例: jdc jdfusion stop-slb-listener  --id xxx --listener-port 0
        ''',
    )
    def stop_slb_listener(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.StopSlbListenerRequest import StopSlbListenerRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = StopSlbListenerRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) VPC ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的subnet资源信息 ''',
        description='''
            根据云提供商查询对应的subnet资源信息。

            示例: jdc jdfusion get-vpc-subnet-by-id  --id xxx
        ''',
    )
    def get_vpc_subnet_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVpcSubnetByIdRequest import GetVpcSubnetByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVpcSubnetByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) VPC ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除子网 ''',
        description='''
            删除子网。

            示例: jdc jdfusion delete-vpc-subnet-by-id  --id xxx
        ''',
    )
    def delete_vpc_subnet_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteVpcSubnetByIdRequest import DeleteVpcSubnetByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteVpcSubnetByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的subnet资源信息 ''',
        description='''
            根据云提供商查询对应的subnet资源信息。

            示例: jdc jdfusion get-vpc-subnets 
        ''',
    )
    def get_vpc_subnets(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVpcSubnetsRequest import GetVpcSubnetsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVpcSubnetsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--subnet'], dict(help="""(createSubnet) 创建subnet """, dest='subnet',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商创建子网 ''',
        description='''
            根据云提供商创建子网。

            示例: jdc jdfusion create-vpc-subnet  --subnet '{"":""}'
        ''',
    )
    def create_vpc_subnet(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateVpcSubnetRequest import CreateVpcSubnetRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateVpcSubnetRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) VPC ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商查询对应的VPC资源信息 ''',
        description='''
            根据云提供商查询对应的VPC资源信息。

            示例: jdc jdfusion get-vpc-by-id  --id xxx
        ''',
    )
    def get_vpc_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVpcByIdRequest import GetVpcByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVpcByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) VPC ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除VPC ''',
        description='''
            删除VPC。

            示例: jdc jdfusion delete-vpc-by-id  --id xxx
        ''',
    )
    def delete_vpc_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteVpcByIdRequest import DeleteVpcByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteVpcByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 查询私有网络资源列表 ''',
        description='''
            查询私有网络资源列表。

            示例: jdc jdfusion get-vpcs 
        ''',
    )
    def get_vpcs(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVpcsRequest import GetVpcsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVpcsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--vpc'], dict(help="""(vpcInfo) 创建VPC """, dest='vpc',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据云提供商创建私有网络 ''',
        description='''
            根据云提供商创建私有网络。

            示例: jdc jdfusion create-vpc  --vpc '{"":""}'
        ''',
    )
    def create_vpc(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateVpcRequest import CreateVpcRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateVpcRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--slbid'], dict(help="""(string) 负载均衡id """, dest='slbid',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据过滤条件，取得服务器组的信息 ''',
        description='''
            根据过滤条件，取得服务器组的信息。

            示例: jdc jdfusion get-vpc-vserver-groups 
        ''',
    )
    def get_vpc_vserver_groups(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVpcVServerGroupsRequest import GetVpcVServerGroupsRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVpcVServerGroupsRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--vserver-group'], dict(help="""(createVserverGroup) 创建虚拟服务器组 """, dest='vserverGroup',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 创建虚拟服务器组，并添加后端服务器 ''',
        description='''
            创建虚拟服务器组，并添加后端服务器。

            示例: jdc jdfusion create-vpc-vserver-group  --vserver-group '{"":""}'
        ''',
    )
    def create_vpc_vserver_group(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.CreateVpcVServerGroupRequest import CreateVpcVServerGroupRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = CreateVpcVServerGroupRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 服务器组ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 根据过滤条件，取得服务器组的信息 ''',
        description='''
            根据过滤条件，取得服务器组的信息。

            示例: jdc jdfusion get-vserver-groups-by-id  --id xxx
        ''',
    )
    def get_vserver_groups_by_id(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.GetVserverGroupsByIdRequest import GetVserverGroupsByIdRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = GetVserverGroupsByIdRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--region-id'], dict(help="""(string) 地域ID """, dest='regionId',  required=False)),
            (['--id'], dict(help="""(string) 服务器组ID """, dest='id',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 删除服务器组 ''',
        description='''
            删除服务器组。

            示例: jdc jdfusion delete-vserver-group  --id xxx
        ''',
    )
    def delete_vserver_group(self):
        client_factory = ClientFactory('jdfusion')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.jdfusion.apis.DeleteVserverGroupRequest import DeleteVserverGroupRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeleteVserverGroupRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--api'], dict(help="""(string) api name """, choices=['get-cloud-infos','regist-cloud-info','get-cloud-info-by-id','unregist-cloud-info','valid-cloud-info','get-deployments','create-deployment','reverse-deployment','get-deployments-by-id','edit-deployment','delete-deployment','clone-deployment','dryrun-deployment','apply-deployment','get-deployment-result','get-deployment-versions','get-deployments-version','rollback-deployments-version','get-deployments-results-by-id-record','get-disks','create-disk','get-disk-by-id','remove-disk-by-id','attach-disk-to-vm-instance-by-disk-id','detach-disk-to-vm-instance-by-disk-id','get-buckets','create-bucket','get-bucket-by-name','delete-bucket','get-bucket-files','get-transfer-tasks','create-transfer-task','get-transfer-task-by-id','edit-transfer-task','delete-transfer-task','start-transfer-task','stop-transfer-task','get-transfer-task-progress','get-transfer-task-failed-files','get-rds-accounts-by-inst-id','create-rds-accounts','get-rds-accounts-by-inst-id-and-account-name','delete-rds-account','grant-rds-account','revoke-rds-account','grant-rds-accounts-by-task','get-rds-databases-by-inst-id','create-rds-database','get-rds-database-by-inst-id-and-db-name','delete-rds-database','get-rds-instances','create-rds-instance','get-rds-by-inst-id','delete-rds-by-inst-id','get-channels','create-channel','delete-channel','start-channel','stop-channel','get-datasources','create-datasource','delete-datasource','get-rds-specification','get-regions','get-regions-available-zones','get-task-info-history-by-id','get-task-info-by-id','get-vm-images','get-vm-instances-by-id','delete-vm-instance-by-id','get-vm-instances','create-vm-instance','stop-vm-instance-by-id','start-vm-instance-by-id','reboot-vm-instance-by-id','get-vm-instance-types','get-vm-keypairs-by-name','delete-vm-keypair-by-name','get-vm-keypairs','create-vm-keypair','get-vpc-eips','create-vpc-eip','get-vpc-eip-by-id','delete-vpc-eip-by-id','associate-vpc-eip-by-id','disassociate-vpc-eip-by-id','get-lb-http-listener','create-vpc-lbhttp-listener','get-vpc-network-interface-by-id','delete-vpc-network-interface-by-id','get-vpc-network-interfaces','create-vpc-network-interface','attach-vpc-network-interface-by-id','detach-vpc-network-interface-by-id','get-vpc-security-group-by-id','delete-vpc-security-group-by-id','get-vpc-security-groups','create-vpc-security-group','create-security-groups-rule','delete-security-groups-rule','get-vpc-slb-by-id','delete-vpc-slb-by-id','get-vpc-slbs','create-vpc-slb','start-slb','stop-slb','delete-slbs-listener','start-slb-listener','stop-slb-listener','get-vpc-subnet-by-id','delete-vpc-subnet-by-id','get-vpc-subnets','create-vpc-subnet','get-vpc-by-id','delete-vpc-by-id','get-vpcs','create-vpc','get-vpc-vserver-groups','create-vpc-vserver-group','get-vserver-groups-by-id','delete-vserver-group',], required=True)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 生成单个API接口的json骨架空字符串 ''',
        description='''
            生成单个API接口的json骨架空字符串。

            示例: jdc nc generate-skeleton --api describeContainer ''',
    )
    def generate_skeleton(self):
        skeleton = Skeleton('jdfusion', self.app.pargs.api)
        skeleton.show()
