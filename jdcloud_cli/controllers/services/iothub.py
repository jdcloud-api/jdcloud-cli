# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from argparse import RawTextHelpFormatter
from jdcloud_cli.cement.ext.ext_argparse import expose
from jdcloud_cli.controllers.base_controller import BaseController
from jdcloud_cli.client_factory import ClientFactory
from jdcloud_cli.parameter_builder import collect_user_args, collect_user_headers
from jdcloud_cli.printer import Printer
from jdcloud_cli.skeleton import Skeleton


class IothubController(BaseController):
    class Meta:
        label = 'iothub'
        help = 'JCLOUD IoT Hub API'
        description = '''
        iothub cli 子命令，API related to IoT Hub。
        OpenAPI文档地址为：https://docs.jdcloud.com/cn/xxx/api/overview
        '''
        stacked_on = 'base'
        stacked_type = 'nested'

    @expose(
        arguments=[
            (['--device-id'], dict(help="""(string) Device 唯一标识 """, dest='deviceId',  required=True)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 激活一个设备，包括Edge、Dragon和普通设备;  ''',
        description='''
            激活一个设备，包括Edge、Dragon和普通设备; 。

            示例: jdc iothub device-activate  --device-id xxx
        ''',
    )
    def device_activate(self):
        client_factory = ClientFactory('iothub')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.iothub.apis.DeviceActivateRequest import DeviceActivateRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeviceActivateRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--instance-id'], dict(help="""(string) NA """, dest='instanceId',  required=False)),
            (['--device'], dict(help="""(deviceEnrollVO) NA """, dest='device',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 客户用该接口可以批量登记设备;  ''',
        description='''
            客户用该接口可以批量登记设备; 。

            示例: jdc iothub devices-enroll 
        ''',
    )
    def devices_enroll(self):
        client_factory = ClientFactory('iothub')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.iothub.apis.DevicesEnrollRequest import DevicesEnrollRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DevicesEnrollRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--device-id'], dict(help="""(string) Device 唯一标识 """, dest='deviceId',  required=True)),
            (['--commands'], dict(help="""(deviceCommandVO) NA """, dest='commands',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 客户用该接口可以对设备下发命令;  ''',
        description='''
            客户用该接口可以对设备下发命令; 。

            示例: jdc iothub device-command  --device-id xxx
        ''',
    )
    def device_command(self):
        client_factory = ClientFactory('iothub')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.iothub.apis.DeviceCommandRequest import DeviceCommandRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeviceCommandRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--device-id'], dict(help="""(string) Device 唯一标识 """, dest='deviceId',  required=True)),
            (['--states'], dict(help="""(string) NA """, dest='states',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 客户用该接口可以修改设备预期状态;  ''',
        description='''
            客户用该接口可以修改设备预期状态; 。

            示例: jdc iothub device-state  --device-id xxx
        ''',
    )
    def device_state(self):
        client_factory = ClientFactory('iothub')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.iothub.apis.DeviceStateRequest import DeviceStateRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = DeviceStateRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--module-name'], dict(help="""(string) moduleName 唯一标识 """, dest='moduleName',  required=True)),
            (['--instance-id'], dict(help="""(string) NA """, dest='instanceId',  required=False)),
            (['--model-name'], dict(help="""(string) NA """, dest='modelName',  required=False)),
            (['--parent-device-name'], dict(help="""(string) NA """, dest='parentDeviceName',  required=False)),
            (['--name'], dict(help="""(string) NA """, dest='name',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 客户用该接口可以登记模块;  ''',
        description='''
            客户用该接口可以登记模块; 。

            示例: jdc iothub module-enroll  --module-name xxx
        ''',
    )
    def module_enroll(self):
        client_factory = ClientFactory('iothub')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.iothub.apis.ModuleEnrollRequest import ModuleEnrollRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModuleEnrollRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--module-name'], dict(help="""(string) moduleName 唯一标识 """, dest='moduleName',  required=True)),
            (['--states'], dict(help="""(string) NA """, dest='states',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 客户用该接口可以修改模块预期状态;  ''',
        description='''
            客户用该接口可以修改模块预期状态; 。

            示例: jdc iothub module-state  --module-name xxx
        ''',
    )
    def module_state(self):
        client_factory = ClientFactory('iothub')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.iothub.apis.ModuleStateRequest import ModuleStateRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = ModuleStateRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--om-name'], dict(help="""(string) 物模型唯一标识 """, dest='omName',  required=True)),
            (['--instance-id'], dict(help="""(string) NA """, dest='instanceId',  required=False)),
            (['--payload'], dict(help="""(string) NA """, dest='payload',  required=False)),
            (['--input-json'], dict(help='(json) 以json字符串或文件绝对路径形式作为输入参数。\n字符串方式举例：--input-json \'{"field":"value"}\';\n文件格式举例：--input-json file:///xxxx.json', dest='input_json', required=False)),
            (['--headers'], dict(help="""(json) 用户自定义Header，举例：'{"x-jdcloud-security-token":"abc","test":"123"}'""", dest='headers', required=False)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 物模型注册接口;  ''',
        description='''
            物模型注册接口; 。

            示例: jdc iothub om-enroll  --om-name xxx
        ''',
    )
    def om_enroll(self):
        client_factory = ClientFactory('iothub')
        client = client_factory.get(self.app)
        if client is None:
            return

        try:
            from jdcloud_sdk.services.iothub.apis.OmEnrollRequest import OmEnrollRequest
            params_dict = collect_user_args(self.app)
            headers = collect_user_headers(self.app)
            req = OmEnrollRequest(params_dict, headers)
            resp = client.send(req)
            Printer.print_result(resp)
        except ImportError:
            print('{"error":"This api is not supported, please use the newer version"}')
        except Exception as e:
            print(e)

    @expose(
        arguments=[
            (['--api'], dict(help="""(string) api name """, choices=['device-activate','devices-enroll','device-command','device-state','module-enroll','module-state','om-enroll',], required=True)),
        ],
        formatter_class=RawTextHelpFormatter,
        help=''' 生成单个API接口的json骨架空字符串 ''',
        description='''
            生成单个API接口的json骨架空字符串。

            示例: jdc nc generate-skeleton --api describeContainer ''',
    )
    def generate_skeleton(self):
        skeleton = Skeleton('iothub', self.app.pargs.api)
        skeleton.show()
